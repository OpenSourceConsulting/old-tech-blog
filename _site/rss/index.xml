<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>오픈소스컨설팅 
기술 블로그
</title>
    <description>기술을 나눕니다. 함께 성장합니다.
Sharing Tech. Growing Together.
</description>
    <link>https://tech.osci.kr/</link>
    <atom:link href="https://tech.osci.kr/rss" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 22 Sep 2020 18:25:44 +0900</pubDate>
    <lastBuildDate>Tue, 22 Sep 2020 18:25:44 +0900</lastBuildDate>
    <generator>Jekyll v3.7.4</generator>
    
      <item>
        <title>[Interview] 물어보는 용기를 가진 개발자 - 오훈님</title>
        <description>&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/104399500/0.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 안녕하세요, 오픈소스컨설팅입니다.
 &lt;img src=&quot;/assets/images/104399500/1.svg&quot;/&gt;
&lt;/p&gt;
&lt;p&gt;
 혹시 오픈소스컨설팅 홈페이지에 업로드 되어 있는, 아래 사진을 본 적이 있으신가요?
&lt;/p&gt;
&lt;p&gt;
 2012년 설립 이후 오픈소스컨설팅이 걸어온 발자취 만큼이나, 식구도 많이 늘어나 60명 가까운 인원이 함께 일하고 있습니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper&quot;&gt;
  &lt;img src=&quot;/assets/images/104399500/2.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 함께 하는 식구가 많아진 만큼 엔지니어, 기획자, 개발자, 영업, 마케팅, 디자이너, 경영지원, PM, 애자일 코치 등
&lt;/p&gt;
&lt;p&gt;
 더욱 다양한 분들이 함께 모여서 생활하고 있는데요.
&lt;/p&gt;
&lt;p&gt;
 과연 오픈소스컨설팅의 식구들은 어떻게 근무하고 있는지, 하루 일과는 어떻게 보내는지 소개하는 시간을 가져보고자 합니다!
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 그 첫번째 시간으로,
 &lt;strong&gt;
  오픈소스컨설팅의 개발자로 일하고 계시는 오훈님
 &lt;/strong&gt;
 의 이야기를 전해드리겠습니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;hr/&gt;
&lt;h1 id=&quot;id-[Interview]물어보는용기를가진개발자-오훈님-&quot;&gt;
 &lt;strong&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/104399500/3.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/strong&gt;
&lt;/h1&gt;
&lt;h1 id='id-[Interview]물어보는용기를가진개발자-오훈님-&quot;오픈소스컨설팅에서백엔드개발을담당하고있는오훈입니다!&quot;'&gt;
 &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
  &lt;strong&gt;
   &quot;오픈소스컨설팅에서 백엔드 개발을 담당하고 있는 오훈입니다!&quot;
  &lt;/strong&gt;
 &lt;/span&gt;
&lt;/h1&gt;
&lt;h3 id=&quot;id-[Interview]물어보는용기를가진개발자-오훈님-Q.오픈소스컨설팅에서어떤업무를하고계신가요?👨‍💻&quot;&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  Q. 오픈소스컨설팅에서 어떤 업무를 하고 계신가요? 👨‍💻
 &lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  안녕하세요? 오픈테크팀 솔루션 개발 파트의 백엔드 개발자 오훈입니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  입사했을 때는 외부 프로젝트의 IoT 솔루션 개발을 담당했었고요,
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  현재는 Playce RoRo라는 클라우드 마이그레이션 자동화 도구의 서버 프로그램 개발을 담당하고 있습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h3 id=&quot;id-[Interview]물어보는용기를가진개발자-오훈님-Q.PlayceRoRo제품을잘모르시는분들도계실텐데요,어떤제품인지설명해주세요.☁️&quot;&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  Q. Playce RoRo 제품을 잘 모르시는 분들도 계실텐데요, 어떤 제품인지 설명해 주세요. ☁️
 &lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  Playce RoRo는 기존에 리눅스 혹은 유닉스로 구축되어 있는 인프라 환경을 클라우드로 쉽게 전환활 수 있도록 도와주는 제품이에요.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  웹 콘솔 기반의 SaaS 서비스와 설치 형태를 모두 제공하여
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  보안을 우선시 하는 고객사 내부망의 서버도 안정적으로 마이그레이션 할 수 있다는 장점이 있습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h3 id=&quot;id-[Interview]물어보는용기를가진개발자-오훈님-Q.오픈소스컨설팅에서의하루일과는어떻게되시나요?⏰&quot;&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  Q. 오픈소스컨설팅에서의 하루 일과는 어떻게 되시나요? ⏰
 &lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  출근은 일찍 하는 편인데요, 회사에 보통 30분 전에 도착해서 가장 먼저 Jira의 개발 보드를 확인합니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  개발 보드의 티켓 중에 최신화 할 것들이 있는지 보면서 하루동안 해야할 To-do-list를 확인합니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  티켓은 제품 개발을 시작하는 스프린트 회의 때 생성하구요,
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;strong&gt;
  &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
   티켓만으로도 동료들 간 서로의 업무를 잘 파악할 수 있기 때문에 불필요한 회의가 거의 없다고 보시면 됩니다.
  &lt;/span&gt;
 &lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  매일 오전 9시 팀 Daily Stand Up 미팅을 진행하고, 이후에는 개발 업무에 집중합니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/104399500/4.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h3 id=&quot;id-[Interview]물어보는용기를가진개발자-오훈님-Q.다른팀과의협업이많은편인가요?협업은주로어떻게이루어지나요?🙌🏽&quot;&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  Q. 다른 팀과의 협업이 많은 편인가요? 협업은 주로 어떻게 이루어지나요?
  &lt;span style=&quot;color: rgb(51,51,51);&quot;&gt;
   🙌🏽
  &lt;/span&gt;
 &lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(29,28,29);&quot;&gt;
  타 팀과의 협업은 아직 많지는 않습니다.
 &lt;/span&gt;
 &lt;span style=&quot;color: rgb(29,28,29);&quot;&gt;
  현재 SAFe(Scaled Agile Framework)라는 애자일 프레임워크 방식을 적용하여 업무를 진행하고 있는데요.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(29,28,29);&quot;&gt;
  팀간 협의가 필요한 업무가 있을 땐 DSU(
  &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
   Daily Stand Up)
  &lt;/span&gt;
  시간에 SM(Scrum master)에게 이슈사항을 얘기하고
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(29,28,29);&quot;&gt;
  SM 판단하에 타팀과 협의 미팅을 잡거나, 팀 내에서 처리할 수 있는 내용은 바로바로 처리해 주고 있습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h3 id=&quot;id-[Interview]물어보는용기를가진개발자-오훈님-Q.개발자로서직업병이란게있으신가요?👨‍⚕️&quot;&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  Q. 개발자로서 직업병이란게 있으신가요?
  &lt;span&gt;
   👨‍⚕️
  &lt;/span&gt;
 &lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  저만의 개발자 프라이드가 있어서 잘 모르는 코드를 봐도 이해하려고 집착하는
  &lt;img src=&quot;/assets/images/104399500/5.svg&quot;/&gt;
  경향이 있는 것 같아요.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  그리고 이건 정말 병인데.. 개발을 하다보니 손목 터널 증후군이 생겼어요.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;strong&gt;
  &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
   회사 복지제도 중에 하나로, 입사할 때 업무에 필요한 장비를 300만원까지 직접 고를 수가 있는데요,
  &lt;/span&gt;
 &lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  이 때 노트북에 소위 몰빵! 298만원까지 꽉 맞춰버리는 바람에 주변 장비를 미처 못 산것이 살짝 아쉽네요. ^^;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/104399500/6.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h1 id=&quot;id-[Interview]물어보는용기를가진개발자-오훈님-&amp;quot;개발자에겐무엇보다'물어보는용기'가필요한것같아요.&amp;quot;&quot;&gt;
 &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
  &lt;strong&gt;
   &quot;개발자에겐 무엇보다 '물어보는 용기'가 필요한 것 같아요.&quot;
  &lt;/strong&gt;
 &lt;/span&gt;
&lt;/h1&gt;
&lt;h3 id=&quot;id-[Interview]물어보는용기를가진개발자-오훈님-Q.오픈소스컨설팅의채용과정은어땠나요?👨‍💼&quot;&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  Q. 오픈소스컨설팅의 채용 과정은 어땠나요? 👨‍💼
 &lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  실무 면접과 임원진 면접, 그리고 코딩 테스트를 진행하였는데 이 부분이 특히 인상에 남았어요.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;strong&gt;
  &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
   코딩 테스트 과정이 재미있기도 했고, 회사가 기술적인 면을 많이 본다는 생각이 들었습니다.
  &lt;/span&gt;
 &lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  그리고 최종 합격 통보를 받았을 때, 기술적으로 인정을 받은 것 같아서 기분이 좋고 또 뿌듯하기도 했습니다.
  &lt;img src=&quot;/assets/images/104399500/7.svg&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h3 id=&quot;id-[Interview]물어보는용기를가진개발자-오훈님-Q.개발자로서필요한역량이나자질이있다면어떤건가요?💪🏻&quot;&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  Q. 개발자로서 필요한 역량이나 자질이 있다면 어떤건가요? 💪🏻
 &lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  무엇보다 '물어보는 용기'가 필요한 것 같아요.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  틀릴 것 같아서 숨기려고 하는 것 보다는,
  &lt;strong&gt;
   모르는 것을 부끄러워하지 않는 용기가 있어야 더 성장할 수 있다고 생각해요.
  &lt;/strong&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h3 id=&quot;id-[Interview]물어보는용기를가진개발자-오훈님-Q.새로운동료가들어온다면어떤분과함께일하고싶으신가요?👬🏽&quot;&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  Q.  새로운 동료가 들어온다면 어떤 분과 함께 일하고 싶으신가요? 👬🏽
 &lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  공유를 잘 하는 사람이면 좋을 것 같아요.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  회사 내에 서로 아는 기술을 알려주고 배우는 문화가 잘 녹아져 있어서, 공유를 잘 하시는 분이 온다면 서로 시너지가 생길 것 같아요.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h1 id='id-[Interview]물어보는용기를가진개발자-오훈님-&quot;개발뿐아니라엔지니어링기술까지경험할수있어서역량개발에큰도움이됩니다.&quot;'&gt;
 &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
  &lt;strong&gt;
   &quot;개발 뿐 아니라 엔지니어링 기술까지 경험할 수 있어서 역량 개발에 큰 도움이 됩니다.&quot;
  &lt;/strong&gt;
 &lt;/span&gt;
&lt;/h1&gt;
&lt;h3 id=&quot;id-[Interview]물어보는용기를가진개발자-오훈님-Q.오픈소스컨설팅을선택하신이유가궁금합니다.❓&quot;&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  Q. 오픈소스컨설팅을 선택하신 이유가 궁금합니다. ❓
 &lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  전회사에서는 개발자가 80% 이상이어서, 실제 서버 환경을 경험하지 못하고 개발에만 집중했었는데요.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;strong&gt;
  &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
   오픈소스컨설팅에서는 개발 뿐 아니라 클라우드 등의 인프라 시스템을 배울 수 있다고 생각해서 선택하게 되었습니다.
  &lt;/span&gt;
 &lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  실제로 개발 뿐 아니라 엔지니어링 기술까지 경험할 수 있어서 역량 개발에 큰 도움이 됩니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  다만 개발 뿐 아니라 전체적인 시스템을 알아야 하고, 회사에서 다루는 신기술을 따라잡기 위해
 &lt;/span&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  계속해서 스터디를 하고 있습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h3 id=&quot;id-[Interview]물어보는용기를가진개발자-오훈님-Q.입사후기억에남는순간이있다면요?🍺&quot;&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  Q. 입사 후 기억에 남는 순간이 있다면요? 🍺
 &lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  오픈소스컨설팅에 와서 처음으로 점심 회식이란 것을 해봤습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  술을 강요하는 전형적인 회식 문화가 아니라서 색다르고 새로웠습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h3 id=&quot;id-[Interview]물어보는용기를가진개발자-오훈님-Q.오픈소스컨설팅의재택근무는어떠셨나요?힘들거나불편한점은없으셨나요?🏠&quot;&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  Q. 오픈소스컨설팅의 재택 근무는 어떠셨나요? 힘들거나 불편한 점은 없으셨나요?
 &lt;/span&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://emojipedia.org/house/&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
  &lt;span class=&quot;emoji&quot;&gt;
   🏠
  &lt;/span&gt;
 &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(29,28,29);&quot;&gt;
  출/퇴근 시간이 좀 더 여유로웠던 점이 가장 좋았고, 미팅이 필요할 땐 화상으로 협의를 해왔기 때문에 업무에 지장은 없었어요.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(29,28,29);&quot;&gt;
  불편한점은 제가 아침마다 꼭 커피를 마시는데요. 출근 길마다 들렸던 카페를 못가서 아쉬웠습니다..
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h3 id=&quot;id-[Interview]물어보는용기를가진개발자-오훈님-Q.재택근무홍보영상도촬영하셨는데,어떠셨어요?촬영중재미있는에피소드가있다면공유해주세요.🎥&quot;&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  Q. 재택 근무 홍보 영상도 촬영하셨는데, 어떠셨어요? 촬영 중 재미있는 에피소드가 있다면 공유해 주세요.
  &lt;span style=&quot;color: rgb(51,51,51);&quot;&gt;
   🎥
  &lt;/span&gt;
 &lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;
 촬영 초반엔 너무 어색해서 그냥 걷는것도 몇번을 다시 촬영 했는지...
&lt;/p&gt;
&lt;p&gt;
 그래도 마케팅팀원 분들께서 많이 도와주셔서 즐기면서 했던 기억이 있습니다~
 &lt;img src=&quot;/assets/images/104399500/8.svg&quot;/&gt;
&lt;/p&gt;
&lt;p&gt;
 그리고 완성된 영상을 다시 보았는데요. 비대면 미팅을 많이 진행하는 요즘 상황을 잘 녹여 놓은것 같다고 생각이 드네요.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://www.youtube.com/watch?v=GnF_jNhot1k&quot; rel=&quot;nofollow&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/104399500/9.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/a&gt;
&lt;/p&gt;
&lt;h3 id=&quot;id-[Interview]물어보는용기를가진개발자-오훈님-Q.오픈소스컨설팅의자랑할만한점은?✏️&quot;&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  Q. 오픈소스컨설팅의 자랑할 만한 점은?
  &lt;span style=&quot;color: rgb(51,51,51);&quot;&gt;
   ✏️
  &lt;/span&gt;
 &lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;
 아무래도 복지, 그 중에서도
 &lt;strong&gt;
  격.주.휴.무!
 &lt;/strong&gt;
 아마 최고의 복지가 아닐까 싶어요. 격주 휴무의 리프레시가 업무에 더 잘 집중할 수 있게끔 해주는 것 같아요.
&lt;/p&gt;
&lt;p&gt;
 그리고 교육에 대해서는 적극적으로 투자한다는 점도 놀라웠어요.
&lt;/p&gt;
&lt;p&gt;
 전직장에서는 비용 때문에 외부 교육을 승인해 주지 않는 경우도 있었는데, 오픈소스컨설팅에서는
 &lt;strong&gt;
  직원 교육에 대해서는 정말 아낌이 없다는 점이 좋았습니다.
 &lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h3 id=&quot;id-[Interview]물어보는용기를가진개발자-오훈님-Q.앞으로의목표나계획이있으시다면?📑&quot;&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  Q. 앞으로의 목표나 계획이 있으시다면?
  &lt;span style=&quot;color: rgb(51,51,51);&quot;&gt;
   📑
  &lt;/span&gt;
 &lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(29,28,29);&quot;&gt;
  새롭게 리뉴얼할 Playce RoRo the next 버전이 빨리 상용화 할 수 있도록 열심히 연구하고 개발을 해나갈 거구요.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(29,28,29);&quot;&gt;
  개인적으로는 대용량 데이터 분산처리에 관심이 있어서 해당 분야를 틈틈히 공부해 볼 생각입니다~
  &lt;img src=&quot;/assets/images/104399500/10.svg&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 모르는 것을 부끄러워하지 않는 용기를 가진 개발자, 오훈님은 다양한 기술 습득을 위해 항상 부지런히 스터디 하시고,
&lt;/p&gt;
&lt;p&gt;
 본인이 터득한 것을 다른 동료와 공유하며 함께 성장하고 계신 것 같네요.
&lt;/p&gt;
&lt;p&gt;
 앞으로도 개발자 오훈님의 성장과 발전을 응원하겠습니다!
 &lt;img src=&quot;/assets/images/104399500/11.svg&quot;/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &amp;lt;오픈소스컨설팅의 식구를 소개합니다!&amp;gt;는 또 다른 분의 이야기를 들고 찾아오겠습니다!
&lt;/p&gt;
&lt;p&gt;
 감사합니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://osci.kr/page/view.php?m_id=50&quot; rel=&quot;nofollow&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/104399500/12.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;</description>
        <pubDate>Tue, 22 Sep 2020 00:00:00 +0900</pubDate>
        <link>https://tech.osci.kr/2020/09/22/104399500/</link>
        <guid isPermaLink="true">https://tech.osci.kr/2020/09/22/104399500/</guid>
        
        <category>오픈소스컨설팅</category>
        
        <category>오픈소스컨설팅채용</category>
        
        <category>오픈소스컨설팅개발자</category>
        
        <category>오픈소스컨설팅면접</category>
        
        <category>오픈소스컨설팅복지</category>
        
        
      </item>
    
      <item>
        <title>Atlassian 9월 Release Note</title>
        <description>&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
  안녕하세요. 아틀라시안 플래티넘 파트너, 오픈소스컨설팅 입니다.
 &lt;/span&gt;
 &lt;br/&gt;
 &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
  이번 포스팅에서는 아틀라시안 제품군의 Jira, Confluence, Crowd, Bitbucket, Bamboo의 Release Note를 전해드리고자 합니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h1 id=&quot;Atlassian9월ReleaseNote-JiraSoftware8.11.x릴리즈노트&quot;&gt;
 &lt;strong&gt;
  Jira Software 8.11.x 릴리즈 노트
 &lt;/strong&gt;
&lt;/h1&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|Managingprivatefiltersanddashboards-개인필터및대시보드관리&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Managing private filters and dashboards - 개인 필터 및 대시 보드 관리
&lt;/h2&gt;
&lt;p&gt;
 Jira 관리자에게 공유되지 않은
 &lt;span class=&quot;inline-comment-marker&quot; data-ref=&quot;c3872141-deeb-4de4-af8c-d039ba49ecd3&quot;&gt;
  필터
 &lt;/span&gt;
 와 대시 보드를 편집하고 삭제할 수 있는 권한을 부여했습니다.
 &lt;span&gt;
 &lt;/span&gt;
 이제 공유 여부에 관계없이 존재하는 모든 필터 및 대시 보드를 보고 어떻게 다룰지 선택할 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97484076/0.jpeg&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 검색 기준이 효율적이지 못하거나 대시 보드가 리스크 있는 가젯으로 가득 차 있다면, 직접 개선하거나 누군가에게 할당하거나 관리자 권한으로 삭제할 수 있습니다. 인스턴스 속도가 느려지지 않도록 잘못된 대시보드나 필터를 관리해주세요 .
 &lt;a class=&quot;external-link&quot; href=&quot;https://docs.atlassian.com/jira/jadm-docs-0811/Managing+filters&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
  더 알아보기
 &lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|Issuedetailviewisnowoptional-이슈상세보기는이제선택사항입니다.&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Issue detail view is now optional - 이슈 상세보기는 이제 선택 사항입니다.
&lt;/h2&gt;
&lt;p&gt;
 &lt;span class=&quot;inline-comment-marker&quot; data-ref=&quot;e4417eed-f291-417b-9c63-70c806d26193&quot;&gt;
  스프린트를 계획하는 단계에서는 프로젝트 보드에서 여러 이슈들 간의 이동이 빈번하게 일어나고, 프로젝트 보드에 이슈들을 보기 편하게 섞어두기도 합니다. 이러한 과정에서 이슈 상세 보기 화면이 계속 뜨는것이 번거롭다는 사용자들의 의견이 있었습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97484076/1.jpeg&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span&gt;
  이제 상세 보기를 숨기도록 선택하고 필요시에 다시 활성화할 수 있습니다. 버튼을
 &lt;/span&gt;
 두 번만 클릭하면 됩니다. 즐겨 찾기 보드에서
 &lt;span&gt;
  &lt;strong&gt;
   Board &amp;gt; Hide detail view
  &lt;/strong&gt;
 &lt;/span&gt;
 를 선택하시면 됩니다.
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|Improvedemailnotificationsaboutmentions-멘션에대한향상된이메일알림&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Improved email notifications about mentions - 멘션에 대한 향상된 이메일 알림
&lt;/h2&gt;
&lt;p&gt;
 &lt;span&gt;
  Jira 8.0에서는 Jira에서 오는 이메일 수를 줄일 수 있는 일괄 이메일 알림을 도입했습니다. 그럼에도 불구하고 저희는 여전히 멘션이있는 별도의 이메일을 많이 받고 있다는 피드백을 많이 받았습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97484076/2.jpeg&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
  이제 요약 이메일에 다른 이슈 업데이트와 함께 멘션이 포함될 것 입니다. 하지만 가능한 한 빨리 이메일이 전송되도록 할 것 입니다.
  &lt;span&gt;
  &lt;/span&gt;
  누군가가 이슈에 대해 사용자를 멘션 할 때, 그들은 보통 사용자의 즉각적인 관심이 필요할 것이기 때문입니다.
 &lt;/span&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://docs.atlassian.com/jira/jadm-docs-0811/Configuring+email+notifications&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
  더 알아보기
 &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|EmbeddedCrowdupgrade-임베디드Crowd업그레이드&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Embedded Crowd upgrade - 임베디드 Crowd 업그레이드
&lt;/h2&gt;
&lt;p&gt;
 Embedded Crowd는 사용자 관리를 위해 Jira에서 사용되는 라이브러리이며, 우리는 이를 최신버전인 4.0으로 업그레이드 했습니다.
 &lt;span&gt;
 &lt;/span&gt;
 사용자 및 그룹과 관련된 페이지는 이 라이브러리에 의존적이지만 사용자 인터페이스와 필요한 상호 작용은 동일하게 유지됩니다.
 &lt;span&gt;
 &lt;/span&gt;
 새 버전은 다음과 같은 몇 가지 개선 사항을 제공합니다.
&lt;/p&gt;
&lt;ul class=&quot;ak-ul&quot;&gt;
 &lt;li&gt;
  &lt;p&gt;
   성능 향상
  &lt;/p&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;
   클러스터링 지원
  &lt;/p&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;
   향상된 디렉터리 장애 개선 조치
  &lt;/p&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;
   해결된 많은 버그 및 제안사항
  &lt;/p&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
 이에 대해 자세히 알아보고 해결 된 문제 목록을 보려면
 &lt;span&gt;
 &lt;/span&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://confluence.atlassian.com/jirasoftware/jira-software-8-11-x-upgrade-notes-1013846118.html&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
  업그레이드 노트
 &lt;/a&gt;
 를 확인해 보세요.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|MorestabilityintheFavoriteFiltersgadget-즐겨찾기필터가젯의안정성향상&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 More stability in the Favorite Filters gadget - 즐겨찾기 필터 가젯의 안정성 향상
&lt;/h2&gt;
&lt;p&gt;
 &lt;span&gt;
  즐겨찾기 필터 가젯은 가장 인기있는 가젯 중 하나로, 즐겨 찾는 필터 목록과 각 필터에 포함 된 이슈 수를 표시합니다. 대규모 필터의 경우, 모든 이슈를 세는것이 성능에 영향을 미칠 수 있으므로 Jira 관리자에게 더 많은 제어 권한을 부여하고자 했습니다.
  &lt;br/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97484076/3.jpeg&quot;/&gt;
  &lt;/span&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span&gt;
  즐겨찾기 필터 가젯의 최대 로드 시간을 제어 할 수있는 전역 설정을 추가했습니다. 이슈를 로드하는 데 너무 오래 걸리는 경우 이슈의 계산을 중지하고 대신 &quot;이슈가 너무 많음&quot; 메시지를 표시합니다. 모든 가젯에 대해 모든 대시 보드에서 표시 됩니다.
  &lt;a class=&quot;external-link&quot; href=&quot;https://docs.atlassian.com/jira/jadm-docs-0811/Configuring+Jira+application+options&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
   더 알아보기
  &lt;/a&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|Restrictingsprintselection-스프린트선택제한&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Restricting sprint selection - 스프린트 선택 제한
&lt;/h2&gt;
&lt;p&gt;
 이슈를 생성하거나 편집 할 때 올바른 스프린트에 이슈를 추가 할 수 있도록, 관리자 옵션을 활성화하여 스프린트 선택 (Sprint 드롭 다운에서 사용 가능)을 사용자가 선택한 프로젝트에 속한 스프린트로만 제한합니다.
 &lt;span&gt;
 &lt;/span&gt;
 이는 이슈를 잘못된 스프린트에
 &lt;span class=&quot;inline-comment-marker&quot; data-ref=&quot;b2edbb92-e058-42c4-a90f-95a63dd23330&quot;&gt;
  연결할 가능성을 줄일 수 있습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97484076/4.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;strong style=&quot;text-align: left;&quot;&gt;
  관련 스프린트
 &lt;/strong&gt;
 &lt;span&gt;
  가
 &lt;/span&gt;
 선택된 경우, 페이지에서
 &lt;span style=&quot;color: rgb(48,48,48);&quot;&gt;
  선택한 프로젝트에 속한 스프린트만 표시되며, 프로젝트에 연결되지 않은 스프린트를 보려면
 &lt;/span&gt;
 &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
  &lt;strong&gt;
   모두 표시(Show all)
  &lt;/strong&gt;
  를 선택
  &lt;span&gt;
  &lt;/span&gt;
  하여 모든 스프린트를 표시할 수 있습니다
  &lt;span&gt;
  &lt;/span&gt;
  .
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97484076/5.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|Configurehowfaststalenodesaremovedoffline-오래된노드의오프라인전환시간설정&quot;&gt;
 | Configure how fast stale nodes are moved offline - 오래된 노드의 오프라인 전환 시간 설정
&lt;/h2&gt;
&lt;p&gt;
 &lt;strong&gt;
  [
  &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
   Data Center
  &lt;/span&gt;
  ]
 &lt;/strong&gt;
 에서 사용 가능
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 Jira 8.10에서는 이틀 동안 하트 비트가 없다고 보고된 클러스터의 오래된 노드를 자동으로 오프라인으로 이동할 수 있도록 했습니다.
 &lt;span&gt;
 &lt;/span&gt;
 이제 이 기간을 설정하고
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  Active.node.
 &lt;/span&gt;
 &lt;span&gt;
  &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
   &lt;a class=&quot;external-link&quot; href=&quot;http://jira.not.alive.active.nodes.retention.period.in/&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
    &lt;code&gt;
     retention
    &lt;/code&gt;
   &lt;/a&gt;
  &lt;/span&gt;
 &lt;/span&gt;
 을 수정하여 오래된 노드를  3 시간까지 설정가능하며 오프라인으로 이동시킬 수 있습니다
 &lt;span&gt;
 &lt;/span&gt;
 .
 &lt;span&gt;
 &lt;/span&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;http://jira.not.alive.active.nodes.retention.period.in/&quot; rel=&quot;nofollow&quot;&gt;
  jira.not.alive.active.nodes.retention.period.in
 &lt;/a&gt;
 .hours  시스템 속성
 &lt;a class=&quot;external-link&quot; href=&quot;https://confluence.atlassian.com/adminjiraserver/jira-cluster-monitoring-983794905.html&quot; rel=&quot;nofollow&quot;&gt;
  더 알아보기
 &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;hr/&gt;
&lt;h1 id=&quot;Atlassian9월ReleaseNote-Confluence7.7릴리즈노트&quot;&gt;
 &lt;strong&gt;
  Confluence 7.7 릴리즈 노트
 &lt;/strong&gt;
&lt;/h1&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|TakeConfluencetothenextlevelwithwebhooks-웹훅으로Confluence를한단계업그레이드하세요&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Take Confluence to the next level with webhooks - 웹훅으로 Confluence를 한 단계 업그레이드하세요
&lt;/h2&gt;
&lt;p&gt;
 &lt;strong&gt;
  [
  &lt;span style=&quot;color: rgb(0,204,255);&quot;&gt;
   &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
    Server
   &lt;/span&gt;
  &lt;/span&gt;
  ] [
  &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
   Data Center
  &lt;/span&gt;
  ]
 &lt;/strong&gt;
 에서 사용 가능
&lt;/p&gt;
&lt;p&gt;
 비즈니스에 중요한 작업을 자동화하는 것이 조금 더 쉬워졌습니다.
 &lt;span&gt;
 &lt;/span&gt;
 웹훅은  애플리케이션에서 어떤 이벤트가 발생했을 때 다른 애플리케이션에 실시간으로 알리는 방법입니다.
&lt;/p&gt;
&lt;p&gt;
 예를 들어, 사용자가 팀이나 프로젝트를 위해 새 공간을 만들 때마다 웹훅을 사용하여 채팅 애플리케이션에 새 채널이나 공간을 만들도록 설정 할 수 있습니다.
 &lt;span&gt;
 &lt;/span&gt;
 Confluence는 '공간 만들기' 이벤트를 수신하고 채팅 애플리케이션 (엔드 포인트)에서 제공하는 URL로 메시지를 보냅니다.
&lt;/p&gt;
&lt;p&gt;
 보안을 유지하기 위해 HMAC (
 &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
  Hash-based Message Authentication Code
 &lt;/span&gt;
 )를 통해 각 요청에 서명하는 데 사용되는 암호를 정의 할 수 있습니다.
 &lt;span&gt;
 &lt;/span&gt;
 이름, 제목 및 기타 콘텐츠는 이벤트 페이로드에 포함되지 않고 ID만 포함됩니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97484076/6.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 다음과 같은 다양한 이벤트에 대한 웹훅을 만들 수 있습니다.
&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;
  사용자 또는 그룹이 추가 및 제거되는 경우
 &lt;/li&gt;
 &lt;li&gt;
  콘텐츠가 생성되거나 업데이트되는 경우
 &lt;/li&gt;
 &lt;li&gt;
  콘텐츠가 복원 또는 제거, 휴지통에서 삭제 되는 경우
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
 엔드 포인트는 웹 기반 자동화 도구 (IFTTT, Zapier, Microsoft Flow 등), 즐겨 찾는 채팅 또는 CI 도구 또는 사내의 시스템 일 수 있습니다.
 &lt;span&gt;
  무엇이든지 가능합니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://confluence.atlassian.com/doc/managing-webhooks-1021225606.html&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
  웹훅 관리
 &lt;/a&gt;
 자세히 알아보세요.
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|Seamlesseditingexperience-원활한편집경험&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Seamless editing experience - 원활한 편집 경험
&lt;/h2&gt;
&lt;p&gt;
 &lt;strong&gt;
  [
  &lt;span style=&quot;color: rgb(0,204,255);&quot;&gt;
   &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
    Server
   &lt;/span&gt;
  &lt;/span&gt;
  ] [
  &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
   Data Center
  &lt;/span&gt;
  ]
 &lt;/strong&gt;
 에서 사용 가능
&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;
 &lt;span class=&quot;s1&quot;&gt;
  &lt;span&gt;
   &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
    업그레이드된 편집기를 사용하여 편집 작업을 보다 원활하게 수행할 수 있습니다
   &lt;/span&gt;
  &lt;/span&gt;
 &lt;/span&gt;
 &lt;span class=&quot;s1&quot;&gt;
  .
  &lt;span&gt;
  &lt;/span&gt;
  우리는 다음과 관련된 몇 가지 오랜 문제를 해결했습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;ul class=&quot;ul1&quot;&gt;
 &lt;li class=&quot;li2&quot;&gt;
  &lt;span class=&quot;s4&quot;&gt;
   목록 복사 및 붙여 넣기
  &lt;/span&gt;
 &lt;/li&gt;
 &lt;li class=&quot;li2&quot;&gt;
  &lt;span class=&quot;s4&quot;&gt;
   테이블 내 탐색
  &lt;/span&gt;
 &lt;/li&gt;
 &lt;li class=&quot;li2&quot;&gt;
  &lt;span class=&quot;s4&quot;&gt;
   링크 삽입
  &lt;/span&gt;
 &lt;/li&gt;
 &lt;li class=&quot;li2&quot;&gt;
  &lt;span class=&quot;s4&quot;&gt;
   키보드 단축키 사용
  &lt;/span&gt;
 &lt;/li&gt;
 &lt;li class=&quot;li2&quot;&gt;
  &lt;span class=&quot;s4&quot;&gt;
   셀 배경색 변경
  &lt;/span&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&quot;p1&quot;&gt;
 &lt;span class=&quot;s1&quot;&gt;
  편집기의 모습은 변경되지 않았으며, 개선 사항은 모두 내부에서 확인할 수 있습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 class=&quot;p1&quot; id=&quot;Atlassian9월ReleaseNote-|Accessibilityimprovements-접근성향상&quot;&gt;
 &lt;span style=&quot;color: rgb(34,34,34);&quot;&gt;
  &lt;strong&gt;
   |
  &lt;/strong&gt;
  Accessibility
 &lt;/span&gt;
 &lt;span&gt;
  &lt;span style=&quot;color: rgb(34,34,34);&quot;&gt;
   improvements -
  &lt;/span&gt;
 &lt;/span&gt;
 &lt;span style=&quot;color: rgb(34,34,34);&quot;&gt;
  접근성
 &lt;/span&gt;
 &lt;span style=&quot;color: rgb(34,34,34);&quot;&gt;
  향상
 &lt;/span&gt;
&lt;/h2&gt;
&lt;p class=&quot;p1&quot;&gt;
 &lt;strong&gt;
  [
  &lt;span style=&quot;color: rgb(0,204,255);&quot;&gt;
   &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
    Server
   &lt;/span&gt;
  &lt;/span&gt;
  ] [
  &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
   Data Center
  &lt;/span&gt;
  ]
 &lt;/strong&gt;
 에서 사용 가능
&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;
 &lt;span class=&quot;s1&quot;&gt;
  팀의 모든 사람이 Confluence에 접근 할 수 있어야한다는 것을 알고 있습니다.
  &lt;span&gt;
  &lt;/span&gt;
  지난 4개월 동안 다음을 포함하여 지난 *VPAT 평가에서 확인 된 100 개 이상의 접근성 문제를 수정했습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;ul&gt;
 &lt;li class=&quot;p1&quot;&gt;
  &lt;span class=&quot;s1&quot;&gt;
   버튼 이름 누락
  &lt;/span&gt;
 &lt;/li&gt;
 &lt;li class=&quot;p1&quot;&gt;
  &lt;span class=&quot;s1&quot;&gt;
   양식 요소에 레이블이 없음
  &lt;/span&gt;
 &lt;/li&gt;
 &lt;li class=&quot;p1&quot;&gt;
  &lt;span class=&quot;s1&quot;&gt;
   키보드 탐색 버그
  &lt;/span&gt;
 &lt;/li&gt;
 &lt;li class=&quot;p1&quot;&gt;
  &lt;span class=&quot;s1&quot;&gt;
   텍스트가 아닌 콘텐츠
  &lt;/span&gt;
 &lt;/li&gt;
 &lt;li&gt;
  언어 속성 및 언어 코드 누락
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&quot;p1&quot;&gt;
 우리는 계속 접근성을 염두에두고 Confluence를 설계하고 구축 할 것입니다.
&lt;/p&gt;
&lt;p&gt;
 *VPAT(
 &lt;span&gt;
  Voluntary Product Accessibility Template) :
  &lt;span style=&quot;color: rgb(77,81,86);&quot;&gt;
   미국 재활법 제 508 조를 준수하는 방법에 관한 정보가 포함 된 표
  &lt;/span&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|Reindexyourclusterwithoutdowntime-다운타임없이클러스터재인덱싱&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Reindex your cluster without downtime - 다운 타임없이 클러스터 재 인덱싱
&lt;/h2&gt;
&lt;p&gt;
 &lt;strong&gt;
  [
  &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
   Data Center
  &lt;/span&gt;
  ]
 &lt;/strong&gt;
 에서 사용 가능
&lt;/p&gt;
&lt;p&gt;
 Confluence 사이트의 운영에는 정상적인 검색 인덱스가 필수적입니다.
 &lt;span&gt;
 &lt;/span&gt;
 문제가 발생할 경우 검색 인덱스를 재 구축하는 것은, 특히 대규모의 사용량이 많은 사이트에서는 힘든 작업이 될 수 있습니다.
 &lt;span&gt;
  &lt;span style=&quot;color: rgb(48,48,48);&quot;&gt;
   클러스터에서 Confluence를 실행하면 각 노드에 새 인덱스를 가져오는 데 필요한 수동 단계 수에 따라 이 단계가 더 복잡해졌었습니다.
  &lt;/span&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 Confluence 7.7부터는 클러스터에서 검색 인덱스를 재 구축하는 과정이 번거롭지 않아졌습니다.
 &lt;span&gt;
 &lt;/span&gt;
 단계 수를 줄이고 파일을 수동으로 처리할 필요성을 제거했습니다.
 &lt;span&gt;
 &lt;/span&gt;
 한 노드에서 인덱스를 재 구성하면 새 인덱스 파일이 클러스터의 모든 노드에 자동으로 전파됩니다.
 &lt;span&gt;
 &lt;/span&gt;
 새로 구축된 UI를 이용하면 클러스터의 모든 노드에서 프로세스가 진행중인 위치를 정확하게 확인할 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97484076/7.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 인덱스를 재구축하는 것은 리소스 집약적인 작업이므로 팀에 미치는 성능 영향을 최소화하는 것이 중요합니다.
 &lt;span&gt;
 &lt;/span&gt;
 가장 좋은 옵션은 로드 밸런서를 사용하여 임시로 재 인덱스를 수행하는 노드에서 트래픽을 분리하여 백그라운드에서 해당 작업을 수행하는 반면, 클러스터의 다른 노드는 계속 요청을 처리하는 것입니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|Morecontrolofyourauditlog-감사로그에대한제어강화&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 More control of your audit log - 감사 로그에 대한 제어 강화
&lt;/h2&gt;
&lt;p&gt;
 &lt;strong&gt;
  [
  &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
   Data Center
  &lt;/span&gt;
  ]
 &lt;/strong&gt;
 에서 사용 가능
&lt;/p&gt;
&lt;h3 id=&quot;Atlassian9월ReleaseNote-카테고리로필터링&quot;&gt;
 카테고리로 필터링
&lt;/h3&gt;
&lt;p&gt;
 감사 로그 이벤트는 카테고리로 구성됩니다.
 &lt;span&gt;
 &lt;/span&gt;
 이제 데이터 센터 라이센스를 사용하여 하나 이상의 카테고리를 기준으로 로그를 필터링 할 수 있습니다.
 &lt;span&gt;
  이 기능은
 &lt;/span&gt;
 보안 및 인증 이벤트만 보려는 경우에 특히 유용합니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size conf-macro output-inline&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97484076/8.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;h3 id=&quot;Atlassian9월ReleaseNote-요약별필터링&quot;&gt;
 요약별 필터링
&lt;/h3&gt;
&lt;p&gt;
 새로운 요약 필터를 사용하여 더 자세히 확인해보세요.
 &lt;span&gt;
 &lt;/span&gt;
 이렇게하면 누군가 그룹을 만들거나, 메일 서버를 편집하거나, 페이지를 Word로 내보낼 때와 같은 특정 이벤트를 확인할 수
 &lt;span class=&quot;inline-comment-marker&quot; data-ref=&quot;cd2f0399-6dee-48ae-8428-90f4bc774307&quot;&gt;
  있습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size conf-macro output-inline&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97484076/9.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;h3 id=&quot;Atlassian9월ReleaseNote-로그파일보존설정변경&quot;&gt;
 로그 파일 보존 설정 변경
&lt;/h3&gt;
&lt;p&gt;
 Confluence Data Center에서는 로컬 홈 디렉토리의 감사 로그 파일에 이벤트를 기록합니다.
 &lt;span&gt;
 &lt;/span&gt;
 이 파일을 타사 로그 집계 도구와 통합이 필요할 때 추가 레코드로 사용할 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
 이전에는 100개의 로그 파일을 저장했습니다.
 &lt;span&gt;
 &lt;/span&gt;
 이제는 필요한 만큼 저장하도록이 제한을 구성 할 수 있습니다.
 &lt;span&gt;
 &lt;/span&gt;
 이러한 파일의 최대 크기는 100MB이므로 각 노드에 충분한 디스크 공간을 프로비저닝했는지 확인하십시오.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|PagePropertiesReportmacroperformanceimprovements-페이지속성보고서매크로성능향상&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Page Properties Report macro performance improvements - 페이지 속성 보고서 매크로 성능 향상
&lt;/h2&gt;
&lt;p&gt;
 &lt;strong&gt;
  [
  &lt;span style=&quot;color: rgb(0,204,255);&quot;&gt;
   &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
    Server
   &lt;/span&gt;
  &lt;/span&gt;
  ] [
  &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
   Data Center
  &lt;/span&gt;
  ]
 &lt;/strong&gt;
 에서 사용 가능
&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;
 &lt;span class=&quot;inline-comment-marker&quot; data-ref=&quot;34735481-5014-4d06-95ed-288c7eee6c2c&quot;&gt;
  페이지 속성
 &lt;/span&gt;
 보고서 매크로는
 &lt;span class=&quot;inline-comment-marker&quot; data-ref=&quot;43c0015c-a17c-4e41-9f79-bd5adbbd4d9f&quot;&gt;
  페이지 속성
 &lt;/span&gt;
 매크로와 함께 작동하며 여러 페이지에서 정보를 수집할 수 있도록 도와줍니다. 보고서의 로딩 시간을 줄이고 보고서를 500페이지로 제한하던 성능 문제를 해결했습니다.
&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;
 이 향상된 성능은 이제 매크로가 최대 3000 페이지까지 표시 할 수 있음을 의미합니다.
 &lt;span style=&quot;color: rgb(48,48,48);&quot;&gt;
  시스템 관리자는 시스템 속성을 사용하여 제한을 늘리거나 줄일 수 있으므로 새롭게 3000페이지까지 구성 할 수 있습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p class=&quot;p1&quot;&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|Just-in-timeuserprovisioning-Justintime사용자프로비저닝&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Just-in-time user provisioning - Just in time 사용자 프로비저닝
&lt;/h2&gt;
&lt;p&gt;
 &lt;strong&gt;
  [
  &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
   Data Center
  &lt;/span&gt;
  ]
 &lt;/strong&gt;
 에서 사용 가능
&lt;/p&gt;
&lt;p&gt;
 Just-in-time 사용자 프로비저닝 (JIT 프로비저닝)을 사용하면 사용자가 SAML SSO 또는 OpenID Connect (OIDC) SSO를 통해 Atlassian Data Center 애플리케이션에 로그인 할 때 자동으로 사용자 정보를 업데이트 하거나 없는 사용자를 만들 수 있습니
 &lt;span class=&quot;inline-comment-marker&quot; data-ref=&quot;ed9a173a-90f2-420b-b587-00b94129675a&quot;&gt;
  다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 자세한 내용은
 &lt;span&gt;
 &lt;/span&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://confluence.atlassian.com/enterprise/working-with-jit-provisioning-1005342571.html&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
  JIT 프로비저닝 작업
 &lt;/a&gt;
 을 확인해보세요.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;hr/&gt;
&lt;h1 id=&quot;Atlassian9월ReleaseNote-Crowd4.1릴리즈노트&quot;&gt;
 &lt;strong&gt;
  Crowd 4.1 릴리즈 노트
 &lt;/strong&gt;
&lt;/h1&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|SupportforlocalgroupsinAzureActiveDirectory-AzureActiveDirectory에서로컬그룹지원&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Support for local groups in Azure Active Directory - Azure Active Directory에서 로컬 그룹 지원
&lt;/h2&gt;
&lt;p&gt;
 Azure AD 디렉터리에서 로컬 그룹에 대한 지원을 소개합니다.
 &lt;span&gt;
 &lt;/span&gt;
 이제부터는 그룹을 Azure AD에서 로컬로 추가하고 Azure AD 내에서  사용자 구성원 자격을 관리할 수 ​​있습니다.
 &lt;span&gt;
 &lt;/span&gt;
 로컬 그룹은 Azure AD 디렉터리에 저장되지 않습니다.
 &lt;span&gt;
 &lt;/span&gt;
 Azure AD 디렉터리에서 동기화 된 그룹은 읽기 전용으로 유지됩니다.
&lt;/p&gt;
&lt;p&gt;
 디렉터리의 로컬 그룹을 활성화하려면 Crowd의 Azure AD 디렉터리 설정으로 이동하여
 &lt;span&gt;
 &lt;/span&gt;
 &lt;strong&gt;
  로컬로 그룹 관리(
  &lt;strong&gt;
   Manage groups locally
  &lt;/strong&gt;
  )를
 &lt;/strong&gt;
 &lt;span&gt;
 &lt;/span&gt;
 선택합니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|UIandUXimprovements-UI및UX개선&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 UI and UX improvements - UI 및 UX 개선
&lt;/h2&gt;
&lt;p&gt;
 Crowd 4.1은 UI와 UX를 개선하여 사용자 환경을 더욱 향상시켰습니다.
&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;
  &lt;strong&gt;
   디렉토리탭
  &lt;/strong&gt;
  에서 마지막 동기화 상태의 열이 디렉토리 개요에 추가되었습니다.
  &lt;span&gt;
  &lt;/span&gt;
  이제 개별 디렉터리로 이동하지 않고도 어떤 디렉터리 동기화가 성공했는지, 실패했는지 또는 실행 중인지 한눈에 볼 수 있습니다.
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size conf-macro output-inline&quot;&gt;
   &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
    &lt;img src=&quot;/assets/images/97484076/10.png&quot;/&gt;
   &lt;/span&gt;
  &lt;/span&gt;
  &lt;br/&gt;
  &lt;br/&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
   이제
   &lt;strong&gt;
    사용
   &lt;/strong&gt;
  &lt;/span&gt;
  &lt;strong style=&quot;text-align: left;&quot;&gt;
   자
  &lt;/strong&gt;
  &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
   &lt;strong&gt;
    탭
   &lt;/strong&gt;
   에서 선택한 디렉토리뿐 아니라 모든 디렉토리에서 사용자를 검색할 수 있습니다.
  &lt;/span&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;strong&gt;
   &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
    응용
   &lt;/span&gt;
   프로그램
  &lt;/strong&gt;
  &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
   &lt;strong&gt;
    탭
   &lt;/strong&gt;
   및
   &lt;span&gt;
   &lt;/span&gt;
  &lt;/span&gt;
  &lt;strong&gt;
   그룹
  &lt;/strong&gt;
  &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
   &lt;strong&gt;
    탭
   &lt;/strong&gt;
   의 모양과 느낌이 Crowd의 나머지 부분과 동기화되도록 수정되었습니다.
  &lt;/span&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|Newsupportedenvironments-새로운지원환경&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 New supported environments - 새로운 지원 환경
&lt;/h2&gt;
&lt;p&gt;
 다음 데이터베이스에 대한 지원 소개:
&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;
  &lt;p&gt;
   Oracle 12c R2
  &lt;/p&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;
   Oracle 19c
  &lt;/p&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;
   PostgreSQL 10
  &lt;/p&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;
   PostgreSQL 11
  &lt;/p&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;
   MySQL 8
  &lt;/p&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
 새로운 브라우저에 대한 지원 소개 :
&lt;/p&gt;
&lt;ul class=&quot;ak-ul&quot;&gt;
 &lt;li&gt;
  &lt;p&gt;
   Microsoft Edge (레거시)
  &lt;/p&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;p&gt;
   Microsoft Edge (Chromium)
  &lt;/p&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
 Crowd에서 지원하는 전체 환경 목록은
 &lt;a class=&quot;external-link&quot; href=&quot;https://confluence.atlassian.com/crowd/supported-platforms-191851.html&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
  지원되는 플랫폼
 &lt;/a&gt;
 을 확인해 보세요.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|Performanceimprovements/성능향상&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Performance improvements / 성능 향상
&lt;/h2&gt;
&lt;p&gt;
 여러 디렉터리를 사용하는 응용 프로그램의 전체 동기화 성능이 향상되었습니다.
 &lt;span&gt;
 &lt;/span&gt;
 이제 집계되지 않는 구성원 자격을 가져오는 속도가 몇배 빨라졌습니다.
 &lt;span&gt;
  &lt;span style=&quot;color: rgb(48,48,48);&quot;&gt;
   데이터 크기와 형태에 따라 전체 동기화 시간은 10만 명 이하 사용자의 경우 분 단위, 1M 이하 사용자의 경우 시간 단위로
  &lt;/span&gt;
 &lt;/span&gt;
 단축됩니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;hr/&gt;
&lt;h1 id=&quot;Atlassian9월ReleaseNote-Bitbucket7.5릴리즈노트&quot;&gt;
 &lt;strong&gt;
  Bitbucket 7.5 릴리즈 노트
 &lt;/strong&gt;
&lt;/h1&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|IntegratedCI/CDoptimzations-통합된CI/CD최적화&quot;&gt;
 &lt;span&gt;
  &lt;strong&gt;
   |
  &lt;/strong&gt;
  Integrated CI/CD optimzations -
 &lt;/span&gt;
 통합 된 CI / CD 최적화
&lt;/h2&gt;
&lt;p&gt;
 &lt;strong&gt;
  [
  &lt;span style=&quot;color: rgb(0,204,255);&quot;&gt;
   &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
    Server
   &lt;/span&gt;
  &lt;/span&gt;
  ] [
  &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
   Data Center
  &lt;/span&gt;
  ]
 &lt;/strong&gt;
 에서 사용 가능
&lt;/p&gt;
&lt;p&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://confluence.atlassian.com/bitbucketserver/bitbucket-server-7-4-release-notes-1013849643.html&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
  Bitbucket 서버 7.4
 &lt;/a&gt;
 에서
 &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
  &lt;span&gt;
  &lt;/span&gt;
  우리는 빌드 페이지와 빌드 탭이라는 두가지 새로운 방법으로 코드에 대한 지속적인 피드백을 받을 수 있는 통합 CI/CD를 시작했습니다
 &lt;/span&gt;
 .
 &lt;span&gt;
 &lt;/span&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://confluence.atlassian.com/bamboo/bamboo-documentation-289276551.html&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
  Bamboo 7.1 이상
 &lt;/a&gt;
 &lt;span&gt;
  과
 &lt;/span&gt;
 Jenkins의
 &lt;a class=&quot;external-link&quot; href=&quot;https://plugins.jenkins.io/atlassian-bitbucket-server-integration/&quot; rel=&quot;nofollow&quot;&gt;
  통합 플러그인
 &lt;/a&gt;
 으로 이용할 수 있는 이러한 새로운 시각화 방법은 툴 전환을 방지하도록 설계되어, Bitbucket에서 머물며 집중할 수 있게 되었습니다.
&lt;/p&gt;
&lt;p&gt;
 7.5에서는 새로운 빌드 페이지 및 탭에 액세스 하는 방법을 최적화 했습니다.
 &lt;span&gt;
 &lt;/span&gt;
 &lt;span class=&quot;inline-comment-marker&quot; data-ref=&quot;4224674c-6d23-4654-9e60-83207e092e8a&quot;&gt;
  이제 Bitbucket의 어떤 페이지에서도 빌드 상태 아이콘을 클릭하여 관련 빌드 상태 정보 페이지로 바로 이동이 가능합니다.
 &lt;/span&gt;
 &lt;span&gt;
  Branch
 &lt;/span&gt;
 목록 페이지에서 빌드 상태를 클릭하면 해당 branch가 선택된 빌드 페이지로 이동합니다.
 &lt;span&gt;
 &lt;/span&gt;
 마찬가지로 Pull Request 목록 페이지에서 빌드 상태를 클릭하면 해당 Pull Request의 빌드 탭으로 이동합니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97484076/11.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 마지막으로, Jenkins와 통합한 경우 이제 Bitbucket Server
 &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
  에 있는 로그 및 아티팩트에 대한 Direct Link들을 활용할 수 있습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 이러한 업데이트에 대한 자세한 내용은
 &lt;span&gt;
 &lt;/span&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://confluence.atlassian.com/bitbucketserver/view-builds-information-in-bitbucket-server-1014275096.html&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
  Bitbucket Server에서 빌드 정보보기
 &lt;/a&gt;
 에서 확인해보세요.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|Auditlogfilteringbysummary-요약별로그필터링감사&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Audit log filtering by summary - 요약별 로그 필터링 감사
&lt;/h2&gt;
&lt;p&gt;
 &lt;strong&gt;
  [
  &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
   Data Center
  &lt;/span&gt;
  ]
 &lt;/strong&gt;
 에서 사용 가능
&lt;/p&gt;
&lt;p&gt;
 Bitbucket Data Center의 감사 로그는 계속 개선되고 있습니다.
 &lt;span&gt;
 &lt;/span&gt;
 하나 이상의
 &lt;span class=&quot;inline-comment-marker&quot; data-ref=&quot;b036b71f-1cbf-482f-8838-677cc6eaaecc&quot;&gt;
  요약별로 필터링하여
 &lt;/span&gt;
 더 구체적인 정보를 가져와보세요.
 &lt;span&gt;
 &lt;/span&gt;
 이것은
 &lt;code&gt;
  Repository created
 &lt;/code&gt;
 또는
 &lt;span&gt;
 &lt;/span&gt;
 &lt;code&gt;
  Global permissions removed등
 &lt;/code&gt;
 과 같은 특정 이벤트에 더 자세히 파고들 수 있습니다
 &lt;span&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size conf-macro output-inline&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97484076/12.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|Just-in-timeuserprovisioning-Justintime사용자프로비저닝.1&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Just-in-time user provisioning - Just in time 사용자 프로비저닝
&lt;/h2&gt;
&lt;p&gt;
 &lt;strong&gt;
  [
  &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
   Data Center
  &lt;/span&gt;
  ]
 &lt;/strong&gt;
 에서 사용 가능
&lt;/p&gt;
&lt;p&gt;
 Just-in-time 사용자 프로비저닝 (
 &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
  JIT provisioning
 &lt;/span&gt;
 )을 사용하면 사용자가 SAML, SSO 또는 OIDC (OpenID Connect) SSO를 통해 Atlassian 데이터 센터 애플리케이션에 로그인 할 때 자동으로 사용자 정보를 업데이트 하거나 없는 사용자를 만들 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
 자세한 정보
 &lt;span&gt;
 &lt;/span&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://confluence.atlassian.com/enterprise/working-with-jit-provisioning-1005342571.html&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
  는 JIT 프로비저닝 작업을
 &lt;/a&gt;
 확인해 보세요.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|Customizethedefaultbranchname-기본Branch이름사용자지정&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Customize the default branch name - 기본 Branch 이름 사용자 지정
&lt;/h2&gt;
&lt;p&gt;
 &lt;strong&gt;
  [
  &lt;span style=&quot;color: rgb(0,204,255);&quot;&gt;
   &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
    Server
   &lt;/span&gt;
  &lt;/span&gt;
  ] [
  &lt;span style=&quot;color: rgb(51,102,255);&quot;&gt;
   Data Center
  &lt;/span&gt;
  ]
 &lt;/strong&gt;
 에서 사용 가능
&lt;/p&gt;
&lt;p&gt;
 6월에 우리는
 &lt;span&gt;
 &lt;/span&gt;
 사용자가 새 리포지토리에 대해 선호하는 기본 branch 이름을 쉽게 정의 할 수 있도록
 &lt;span&gt;
 &lt;/span&gt;
 하는
 &lt;span&gt;
 &lt;/span&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://community.atlassian.com/t5/Bitbucket-articles/Moving-away-from-Master-as-the-default-name-for-Branches-in-Git/ba-p/1414060&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
  Atlassian 커뮤니티 기사를
 &lt;/a&gt;
 &lt;span&gt;
 &lt;/span&gt;
 게시했습니다
 &lt;span&gt;
 &lt;/span&gt;
 .
 &lt;span&gt;
 &lt;/span&gt;
 이번 릴리스에서는 이를 수행하는 두 가지 방법을 소개합니다.
&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;
  관리자는 모든 새 리포지토리에 대해 시스템 전체의 사용자 지정 기본 branch 이름을 설정할 수 있습니다.
 &lt;/li&gt;
 &lt;li&gt;
  사용자는 리포지토리를 만들 때 기본 branch를 설정할 수 있습니다.
 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
 &lt;span&gt;
  자세한 내용은
 &lt;/span&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://confluence.atlassian.com/bitbucketserver/setting-a-system-wide-default-branch-name-1021220665.html&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
  시스템 전체 기본 branch 이름 설정
 &lt;/a&gt;
 을 확인해 보세요
&lt;/p&gt;
&lt;h3 id=&quot;Atlassian9월ReleaseNote-지원되는플랫폼에대한업데이트&quot;&gt;
 지원되는 플랫폼에 대한 업데이트
&lt;/h3&gt;
&lt;p&gt;
 Bitbucket Server 7.5는 이제 다음 실행을 지원합니다.
&lt;/p&gt;
&lt;ul class=&quot;ak-ul&quot;&gt;
 &lt;li&gt;
  &lt;p&gt;
   서버용 Git 2.28
  &lt;/p&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Atlassian9월ReleaseNote-지원중단&quot;&gt;
 지원 중단
&lt;/h3&gt;
&lt;p&gt;
 &lt;span&gt;
  Java 버전 11.0.0-11.0.7은 Java 버그
 &lt;/span&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://bugs.openjdk.java.net/browse/JDK-8241054&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot; title=&quot;https://bugs.openjdk.java.net/browse/JDK-8241054&quot;&gt;
  JDK-8241054
  &lt;span&gt;
  &lt;/span&gt;
 &lt;/a&gt;
 &lt;span&gt;
  로 인해 더 이상 권장되지 않습니다
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;hr/&gt;
&lt;h1 id=&quot;Atlassian9월ReleaseNote-Bamboo7.1릴리즈노트&quot;&gt;
 &lt;strong&gt;
  Bamboo 7.1 릴리즈 노트
 &lt;/strong&gt;
&lt;/h1&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|Webhooks-웹훅&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Webhooks - 웹훅
&lt;/h2&gt;
&lt;p&gt;
 Bamboo 웹훅을 사용하면 Bamboo에 대한 선택된 실시간 정보를 제 3자 응용 프로그램에 보낼 수 있습니다.
 &lt;span&gt;
 &lt;/span&gt;
 예를 들어 팀의 채팅방에 Bamboo 빌드 상태를 표시하거나 계획이 실패 할 경우 경고를 표시합니다. 자세한 내용은
 &lt;a class=&quot;external-link&quot; href=&quot;https://confluence.atlassian.com/bamboo/using-webhooks-1018270680.html&quot; rel=&quot;nofollow&quot;&gt;
  웹훅 사용
 &lt;/a&gt;
 을 확인해 보세요.
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper image-left-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97484076/13.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|Projectvariables-프로젝트변수&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Project variables - 프로젝트 변수
&lt;/h2&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 Bamboo 7.1은 새로운 변수 유형인
 &lt;em&gt;
  프로젝트 변수를 제공합니다.
 &lt;/em&gt;
 프로젝트 변수는 특정 프로젝트에 대해 정의되며 프로젝트에 속하는 모든 Build Plan에 대해 동일한 값을 가집니다.
 &lt;span&gt;
 &lt;/span&gt;
 &lt;span class=&quot;inline-comment-marker&quot; data-ref=&quot;ae1a8497-bbc3-4797-b56a-ddfa58a641b7&quot;&gt;
  특정 Build Plan
 &lt;/span&gt;
 에 대한 변수를 정의하려면에
 &lt;span class=&quot;inline-comment-marker&quot; data-ref=&quot;5e93dbe7-ac81-462e-92e5-23d240339634&quot;&gt;
  &lt;a class=&quot;external-link&quot; href=&quot;https://confluence.atlassian.com/bambooserverm/using-bamboo/bamboo-variables/defining-plan-variables&quot; rel=&quot;nofollow&quot;&gt;
   Build Plan 변수 정의 방법 페이지
  &lt;/a&gt;
 &lt;/span&gt;
 에 설명 된대로 Build Plan
 &lt;span class=&quot;inline-comment-marker&quot; data-ref=&quot;244f15d6-89b6-46ba-a243-73ee218365ba&quot;&gt;
  변수
 &lt;/span&gt;
 를 정의해 보세요.
 &lt;span&gt;
 &lt;/span&gt;
 프로젝트 변수에 대한 자세한 내용은
 &lt;a class=&quot;external-link&quot; href=&quot;https://confluence.atlassian.com/bamboo/defining-project-variables-1018270685.html&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
  프로젝트 변수 정의
 &lt;/a&gt;
 를 확인해 주세요.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|Conditionaltasks-조건부작업&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Conditional tasks - 조건부 작업
&lt;/h2&gt;
&lt;p&gt;
 작업을 보다 유연하게 실행할 수 있습니다.
 &lt;span&gt;
  Bamboo
 &lt;/span&gt;
 7.1에서는 작업을 조건부로 표시할 수 있으며, 이는 작업이 특정 조건에서만 실행됨을 의미합니다.
 &lt;span&gt;
 &lt;/span&gt;
 &lt;span style=&quot;color: rgb(29,28,29);&quot;&gt;
  변수와 정규식을 사용하여 작업을 실행하기 위해 충족해야 하는 조건을 생성할 수 있습니다.
  &lt;span&gt;
  &lt;/span&gt;
 &lt;/span&gt;
 이렇게
 &lt;span&gt;
 &lt;/span&gt;
 &lt;span style=&quot;color: rgb(29,28,29);&quot;&gt;
  하면
  &lt;span&gt;
   Plan
  &lt;/span&gt;
  &lt;span style=&quot;color: rgb(9,30,66);&quot;&gt;
   &lt;span class=&quot;inline-comment-marker&quot; data-ref=&quot;df9107b9-090c-4b41-91ec-9d14f6b1e946&quot;&gt;
    branch
   &lt;/span&gt;
   의 빌드 단계를 건너뛰고,
   &lt;span style=&quot;color: rgb(48,48,48);&quot;&gt;
    어떤 작업이 필수인지, 어떤 작업을 건너뛸 수 있는지 결정할 수 있습니다
   &lt;/span&gt;
   .
   &lt;span&gt;
    Bamboo
   &lt;/span&gt;
  &lt;/span&gt;
 &lt;/span&gt;
 &lt;span style=&quot;color: rgb(9,30,66);&quot;&gt;
  UI또는
  &lt;span class=&quot;inline-comment-marker&quot; data-ref=&quot;1a0996e3-e2ad-4b51-bc73-80aab01682e2&quot;&gt;
   Bamboo Spec
  &lt;/span&gt;
  을 사용하여 작업 조건을 설정할 수 있습니다.
  &lt;span&gt;
  &lt;/span&gt;
 &lt;/span&gt;
 &lt;span style=&quot;color: rgb(9,30,66);&quot;&gt;
  자세한 내용은
  &lt;span&gt;
  &lt;/span&gt;
  &lt;a class=&quot;external-link&quot; href=&quot;https://confluence.atlassian.com/bamboo/configuring-tasks-289277036.html&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
   작업 구성
  &lt;/a&gt;
  을 확인해 보세요.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(9,30,66);&quot;&gt;
  &lt;br/&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper image-left-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97484076/14.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|Synchronizingremoteagentcapabilities-원격에이전트기능동기화&quot;&gt;
 &lt;strong&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;br/&gt;
  |
 &lt;/strong&gt;
 Synchronizing remote agent capabilities - 원격 에이전트 기능 동기화
&lt;/h2&gt;
&lt;p&gt;
 Bamboo 팀은 오랫동안 제기되어온 원격 에이전트 기능 동기화 문제를 해결했습니다.
 &lt;span&gt;
  &lt;span style=&quot;color: rgb(48,48,48);&quot;&gt;
   7.1 버전부터
   &lt;code&gt;
    bamboo-capabilities.properties
   &lt;/code&gt;
   &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
   &lt;/span&gt;
   에서 원격 에이전트 기능을 수정하면 Bamboo 기능도 수정됩니다..
  &lt;/span&gt;
 &lt;/span&gt;
 &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
  &lt;span&gt;
   자세한 내용은
  &lt;/span&gt;
 &lt;/span&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://confluence.atlassian.com/bamboo/configuring-remote-agent-capabilities-using-bamboo-capabilities-properties-289276849.html&quot; rel=&quot;nofollow&quot;&gt;
  Configuring remote agent capabilities using bamboo-capabilities.properties
 &lt;/a&gt;
 와
 &lt;a class=&quot;external-link&quot; href=&quot;https://confluence.atlassian.com/bamboo/configuring-remote-agent-capabilities-using-bamboo-capabilities-properties-289276849.html&quot; rel=&quot;nofollow&quot;&gt;
 &lt;/a&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://confluence.atlassian.com/bamboo/synchronising-remote-agent-capabilities-with-bamboo-server-1018270633.html&quot; rel=&quot;nofollow&quot;&gt;
  Synchronising remote agent capabilities with Bamboo Server
 &lt;/a&gt;
 를 확인해 보세요.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|Romoteagents'workspacecleanup-원격에이전트의작업공간정리&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Romote agents' workspace cleanup - 원격 에이전트의 작업 공간 정리
&lt;/h2&gt;
&lt;p&gt;
 버전 7.1부터는 해당 엔티티가 Bamboo 서버에서 제거된 경우 원격 에이전트의 홈 디렉터리에서도 빌드 및 배포 작업 공간이  제거됩니다.
 &lt;span&gt;
  &lt;span style=&quot;color: rgb(48,48,48);&quot;&gt;
   빌드 기록이 긴 에이전트의 경우 업그레이드 시 에이전트 응답이 없는 것을 방지하기 위해 정리가 점진적으로 이루어집니다.
  &lt;/span&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|Livelogstransmission-라이브로그전송&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Live logs transmission - 라이브 로그 전송
&lt;/h2&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  과도한 로깅은 빌드 결과 처리 시간 초과(grey builds) 등 심각한 성능 문제를 야기하는 것으로 알려져 있습니다
 &lt;/span&gt;
 .
 &lt;span&gt;
 &lt;/span&gt;
 이 문제를 완화하는 한 가지 방법은 Bamboo 7.1의 새로운 기능인 라이브 로그 전송을 끄는 것입니다.
 &lt;span&gt;
  자세한 내용은
 &lt;/span&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://confluence.atlassian.com/bamboo/configuring-live-logs-transmission-1018270669.html&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
  라이브 로그 전송 구성
 &lt;/a&gt;
 을 확인해보세요.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|ExporttoYAMLSpecs-YAML규격으로내보내기&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Export to YAML Specs - YAML 규격으로 내보내기
&lt;/h2&gt;
&lt;p&gt;
 YAML 사양으로 변경하는 것이  쉬워졌습니다!
 &lt;span&gt;
 &lt;/span&gt;
 이제부터는 기존 계획 및 배포를 Bamboo YAML 규격으로 자동으로 내보낼 수 있습니다.
 &lt;span&gt;
 &lt;/span&gt;
 자세한 내용은
 &lt;a class=&quot;external-link&quot; href=&quot;https://confluence.atlassian.com/bamboo/exporting-existing-plan-configuration-to-bamboo-yaml-specs-1018270696.html&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
  기존 계획 구성을 Bamboo YAML 규격으로 내보내기
 &lt;/a&gt;
 를 확인해보세요.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;Atlassian9월ReleaseNote-|ImprovementstoSpecsbranches-Specsbranch개선&quot;&gt;
 &lt;strong&gt;
  |
 &lt;/strong&gt;
 Improvements to Specs branches - Specs branch 개선
&lt;/h2&gt;
&lt;p&gt;
 항상 사용자의 피드백을 진지하게 받아들이고 그것을 반영합니다.
 &lt;span&gt;
 &lt;/span&gt;
 Bamboo 7.1에서는 Specs branch와 관련하여 가장 예상되는 몇 가지 이슈를 개선하였습니다.
&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;
  이제 Bamboo YAML 규격의 특정 branch에 대해 다른 구성을 사전 정의 할 수 있습니다.
 &lt;/li&gt;
 &lt;li&gt;
  이제 각기 다른 Bamboo 인스턴스에 대해 다른 Bamboo 사양 구성을 정의 할 수 있습니다.
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 앞으로도 아틀라시안 제품군의 Release Note를 지속적으로 전해드릴 수 있도록 하겠습니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 Jira, Confluence 사용에 불편함을 느끼시거나, 향상된 팀 협업이 필요하십니까?
&lt;/p&gt;
&lt;p&gt;
 업무를 가속화하고 최상의 품질로 시장을 선점하는데 도움을 주는 Atlassian 솔루션에 대해
&lt;/p&gt;
&lt;p&gt;
 궁금한 점이 있으시다면 언제든지 오픈소스컨설팅 아틀라시안팀에게 문의해 주세요!
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 감사합니다!
&lt;/p&gt;
&lt;p&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;mailto:atlassian@osci.kr&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
  atlassian@osci.kr
 &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;</description>
        <pubDate>Fri, 04 Sep 2020 00:00:00 +0900</pubDate>
        <link>https://tech.osci.kr/2020/09/04/97484076/</link>
        <guid isPermaLink="true">https://tech.osci.kr/2020/09/04/97484076/</guid>
        
        <category>releasenote</category>
        
        <category>아틀라시안</category>
        
        
      </item>
    
      <item>
        <title>DevOps with Atlassian</title>
        <description>&lt;div class=&quot;contentLayout2&quot;&gt;
 &lt;div class=&quot;columnLayout single&quot; data-layout=&quot;single&quot;&gt;
  &lt;div class=&quot;cell normal&quot; data-type=&quot;normal&quot;&gt;
   &lt;div class=&quot;innerCell&quot;&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(58,58,58);&quot;&gt;
      안녕하세요.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(58,58,58);&quot;&gt;
      아틀라시안 플래티넘 파트너, 오픈소스컨설팅 입니다.
     &lt;/span&gt;
     &lt;br style=&quot;text-align: justify;&quot;/&gt;
     &lt;span style=&quot;color: rgb(58,58,58);&quot;&gt;
      이번 포스팅에서는 아틀라시안 솔루션을 이용한 DevOps에 대해서 전해드리고자 합니다.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
   &lt;/div&gt;
  &lt;/div&gt;
 &lt;/div&gt;
 &lt;div class=&quot;columnLayout single&quot; data-layout=&quot;single&quot;&gt;
  &lt;div class=&quot;cell normal&quot; data-type=&quot;normal&quot;&gt;
   &lt;div class=&quot;innerCell&quot;&gt;
    &lt;h1 id=&quot;DevOpswithAtlassian-|DevOpswithAtlassian:Aguidetocloudfeatures&quot;&gt;
     &lt;span style=&quot;letter-spacing: -0.01em;&quot;&gt;
      | DevOps with Atlassian: A guide to cloud features
     &lt;/span&gt;
    &lt;/h1&gt;
    &lt;h2 id=&quot;DevOpswithAtlassian-Atlassian솔루션을이용해개발자가코드품질을지키며더욱빠르게제공할수있는방법&quot;&gt;
     &lt;span style=&quot;color: rgb(122,134,154);&quot;&gt;
      Atlassian 솔루션을 이용해 개발자가 코드 품질을 지키며 더욱 빠르게 제공할 수 있는 방법
     &lt;/span&gt;
    &lt;/h2&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;h2 id=&quot;DevOpswithAtlassian-|Introduction&quot;&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      | Introduction
     &lt;/span&gt;
    &lt;/h2&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      협업이 증가하면 개발자들에게는 비용이 발생할 수 있습니다.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      개발자들은 혁신적인 솔루션을 코딩하고 구축하는 것에 집중하기 보다, 여러 도구를 통합하고 작업 상태를 업데이트하고 다른 팀과 작업내역을 공유하면서 하루 중 많은 시간을 보낼 수 있습니다.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      최근 아틀라시안이 실시한 DevOps Trends Survey에 따르면 개발자의 80% 이상이 툴의 단절, 수동 프로세스, 그리고 끊임없이 변화하는 협업 프로세스가 방해가 되고 있다고 말합니다.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      개발자는 DevOps를 위한 Atlassian의 새로운 기능, 자동화 및 통합을 통해 시간을 단축하고 코드를 더 빨리 제공 할 수 있습니다.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      팀은 IT 보안사고에 대해서 적은 컨텍스트 전환, 적은 회의 및 ping 감소로 잇점을 누릴 수 있습니다.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      자사 제품 및 타사 툴 전반에 걸친 자동화를 통해 개발, IT운영, 비즈니스 팀을 연결함으로써 개발자들이 그들의 코드에 집중할 수 있도록 도와줍니다. Atlassian
     &lt;/span&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      은 Jira를 중심으로 DevOps의 모든 업무를 통일하고 협업의 과부하를 줄입니다.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      Atlassian 도구가 개발자의 생산성 향상에 어떤 도움이되는지 알아보십시오.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span class=&quot;confluence-embedded-file-wrapper image-center-wrapper confluence-embedded-manual-size&quot;&gt;
      &lt;img src=&quot;/assets/images/97478051/0.png&quot;/&gt;
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;hr/&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
   &lt;/div&gt;
  &lt;/div&gt;
 &lt;/div&gt;
 &lt;div class=&quot;columnLayout two-right-sidebar&quot; data-layout=&quot;two-right-sidebar&quot;&gt;
  &lt;div class=&quot;cell normal&quot; data-type=&quot;normal&quot;&gt;
   &lt;div class=&quot;innerCell&quot;&gt;
    &lt;h2 id=&quot;DevOpswithAtlassian-|PLAN&quot;&gt;
     | PLAN
    &lt;/h2&gt;
    &lt;h3 id=&quot;DevOpswithAtlassian-코드컨텍스트에서바로프로젝트계획및추적&quot;&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      코드 컨텍스트에서 바로 프로젝트 계획 및 추적
     &lt;/span&gt;
    &lt;/h3&gt;
   &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;cell aside&quot; data-type=&quot;aside&quot;&gt;
   &lt;div class=&quot;innerCell&quot;&gt;
    &lt;p&gt;
     &lt;span class=&quot;confluence-embedded-file-wrapper image-right-wrapper confluence-embedded-manual-size&quot;&gt;
      &lt;img src=&quot;/assets/images/97478051/1.png&quot;/&gt;
     &lt;/span&gt;
    &lt;/p&gt;
   &lt;/div&gt;
  &lt;/div&gt;
 &lt;/div&gt;
 &lt;div class=&quot;columnLayout single&quot; data-layout=&quot;single&quot;&gt;
  &lt;div class=&quot;cell normal&quot; data-type=&quot;normal&quot;&gt;
   &lt;div class=&quot;innerCell&quot;&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      DevOps 툴 체인은 단일 크기 접근 방식(one-size-fits-all approach)이 아닙니다.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      DevOps는 서로 다른 애플리케이션과 팀에 걸친 툴박스로서, 개발자는 어떤 툴을 사용해야 하는지, 몇개의 툴을 사용하여야 하는지에 대해 가장 잘 알고 있습니다.
     &lt;/span&gt;
     &lt;span style=&quot;color: rgb(0,0,0);letter-spacing: 0.0px;&quot;&gt;
      그러나 이러한 유연성과 함께 작업의 조정에 대한 필요성이 중요해집니다.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);letter-spacing: 0.0px;&quot;&gt;
      Atlassian
      &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
       의 DevOps 조사 결과, 점점 더 많은 수의 DevOps 팀들이 프로젝트 상태를 이해하기 위해 5개 이상의 도구가 필요하다고 말하고 있는 것으로 나타났습니다. 이러한 도구에서 밀접하게 작업하지 않는 IT 운영 및 비즈니스 팀은 무슨 일이 언제 발생하는지 알아야합니다. 이때 필요한것이 Jira입니다. 지라는 팀과 도구에 걸쳐 작업을 자동으로 통합합니다.
      &lt;/span&gt;
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      Jira Software Cloud와 Bitbucket Cloud, GitHub 및 GitLab 간의 통합을 통해 이슈 트래킹 및 코드를 작성하면 자동으로 프로젝트 업데이트가 수행되도록 할 수 있습니다.
     &lt;/span&gt;
     &lt;span style=&quot;color: rgb(0,0,0);letter-spacing: 0.0px;&quot;&gt;
      그리고 Bitbucket, GitHub 또는 GitLab에서의 당신의 작업이 자동으로 업데이트 되므로 프로젝트 관리자는 업데이트를 위해 코딩 흐름을 중단 할 필요가 없습니다.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;h3 id=&quot;DevOpswithAtlassian-|작업대시보드&quot;&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      | 작업 대시보드
     &lt;/span&gt;
    &lt;/h3&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      Bitbucket Cloud의 새로운 작업 대시 보드가 할당 된 Jira 이슈를 포함하도록 확장 되었으므로 도구 간에 이동하지 않고도 한 작업에서 다음 작업으로 빠르게 이동할 수 있습니다. 또한 각 레포지토리 내부에서는 &quot;Jira issue&quot; 탭 내에서 연결된 프로젝트와 이슈에 대한 새로운 팀 차원의 뷰를 곧 볼 수 있습니다.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;h3 id=&quot;DevOpswithAtlassian-|DevOps자동화트리거&quot;&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      | DevOps 자동화 트리거
     &lt;/span&gt;
    &lt;/h3&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      Jira Software Cloud의 새로운 DevOps 자동화 트리거로 자동화 기능이 향상되었습니다.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      클릭 몇 번만으로 연결된 코드 저장소에서 커밋 또는 꺼내기 요청 작업의 트리거를 통해 개발 활동과 작업을 동기화하는 자동화 규칙을 만들 수 있습니다.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     기본적으로 관련 Jira 이슈의 상태를 자동으로 업데이트 할 수 있지만 이러한 새로운 자동화를 통해 QA 또는 코드 검토를 위해 Jira 이슈를 재 할당하거나 팀의 Slack 채널에 새 PR에 대한 메시지를 보내는 것과 같은 더 복잡한 규칙도 사용할 수 있습니다.
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      이러한 자동화 규칙은 Bitbucket Cloud, GitHub, GitLab 및 Jira Software Cloud와 통합되는 다른 코드 리포지토리와 함께 작동합니다.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      &lt;span class=&quot;confluence-embedded-file-wrapper image-center-wrapper confluence-embedded-manual-size&quot;&gt;
       &lt;img src=&quot;/assets/images/97478051/2.png&quot;/&gt;
      &lt;/span&gt;
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;hr/&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
   &lt;/div&gt;
  &lt;/div&gt;
 &lt;/div&gt;
 &lt;div class=&quot;columnLayout two-right-sidebar&quot; data-layout=&quot;two-right-sidebar&quot;&gt;
  &lt;div class=&quot;cell normal&quot; data-type=&quot;normal&quot;&gt;
   &lt;div class=&quot;innerCell&quot;&gt;
    &lt;h2 id=&quot;DevOpswithAtlassian-|BUILD&quot;&gt;
     | BUILD
    &lt;/h2&gt;
    &lt;h3 id=&quot;DevOpswithAtlassian-하던작업을잃지않고코드검토,테스트및배포&quot;&gt;
     하던 작업을 잃지 않고 코드 검토, 테스트 및 배포
    &lt;/h3&gt;
   &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;cell aside&quot; data-type=&quot;aside&quot;&gt;
   &lt;div class=&quot;innerCell&quot;&gt;
    &lt;p&gt;
     &lt;span class=&quot;confluence-embedded-file-wrapper image-right-wrapper confluence-embedded-manual-size&quot;&gt;
      &lt;img src=&quot;/assets/images/97478051/3.png&quot;/&gt;
     &lt;/span&gt;
    &lt;/p&gt;
   &lt;/div&gt;
  &lt;/div&gt;
 &lt;/div&gt;
 &lt;div class=&quot;columnLayout single&quot; data-layout=&quot;single&quot;&gt;
  &lt;div class=&quot;cell normal&quot; data-type=&quot;normal&quot;&gt;
   &lt;div class=&quot;innerCell&quot;&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      모든 팀은 코드를 작성하고 검토할 수 있는 최고의 도구를 원합니다.  Atlassian이 Bitbucket Cloud를 통해서 그 요구 사항을 충족시켜 줄 수 있습니다.
     &lt;/span&gt;
     &lt;span style=&quot;color: rgb(0,0,0);letter-spacing: 0.0px;&quot;&gt;
      코드 작성 및 검토와 같이 매일 수행하는 가장 중요한 작업에서 개발자의 생산성을 극대화하십시오.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;div class=&quot;confluence-information-macro has-no-icon confluence-information-macro-information conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;info&quot;&gt;
     &lt;div class=&quot;confluence-information-macro-body&quot;&gt;
      &lt;p&gt;
       Bitbucket에서 작업하든 IDE에서 작업하든 관계없이 목표는 흐름을 유지하고 도구 사이의 불필요한 바운스를 줄이는 것입니다.
      &lt;/p&gt;
     &lt;/div&gt;
    &lt;/div&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;h3 id=&quot;DevOpswithAtlassian-|새로운PullRequest경험&quot;&gt;
     | 새로운 Pull Request 경험
    &lt;/h3&gt;
    &lt;p&gt;
     Bitbucket Cloud의 새로운 Pull Request 경험은 코드 변경을 보다 쉽고 빠르게 검토 할 수있는 혁신적인 설계를 제공합니다.
    &lt;/p&gt;
    &lt;p&gt;
     통합 된 작업 목록, 통합 된 Jira 이슈 생성 및 활동 피드 필터와 같은 새로운 기능을 통해 개발자는 코드 검토를 더 빠르게 완료하고 여러 풀 요청을 한 번에 효율적으로 처리 할 수 있습니다.
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;h3 id=&quot;DevOpswithAtlassian-|VSCode통합&quot;&gt;
     | VS Code 통합
    &lt;/h3&gt;
    &lt;p&gt;
     Atlassian VS Code 통합은 Jira Software Cloud의 작업 목록, 완벽한 코드 검토 경험 및 Bitbucket Pipelines의 CI/CD 추적을 통해 전체 개발 파이프 라인을 편집기로 가져옵니다.
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;hr/&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
   &lt;/div&gt;
  &lt;/div&gt;
 &lt;/div&gt;
 &lt;div class=&quot;columnLayout two-right-sidebar&quot; data-layout=&quot;two-right-sidebar&quot;&gt;
  &lt;div class=&quot;cell normal&quot; data-type=&quot;normal&quot;&gt;
   &lt;div class=&quot;innerCell&quot;&gt;
    &lt;h2 id=&quot;DevOpswithAtlassian-|CI/CD&quot;&gt;
     | CI/CD
    &lt;/h2&gt;
    &lt;h3 id=&quot;DevOpswithAtlassian-Shipfastwithoutbreakingthings&quot;&gt;
     Ship fast without breaking things
    &lt;/h3&gt;
   &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;cell aside&quot; data-type=&quot;aside&quot;&gt;
   &lt;div class=&quot;innerCell&quot;&gt;
    &lt;p&gt;
     &lt;span class=&quot;confluence-embedded-file-wrapper image-right-wrapper confluence-embedded-manual-size&quot;&gt;
      &lt;img src=&quot;/assets/images/97478051/4.png&quot;/&gt;
     &lt;/span&gt;
    &lt;/p&gt;
   &lt;/div&gt;
  &lt;/div&gt;
 &lt;/div&gt;
 &lt;div class=&quot;columnLayout single&quot; data-layout=&quot;single&quot;&gt;
  &lt;div class=&quot;cell normal&quot; data-type=&quot;normal&quot;&gt;
   &lt;div class=&quot;innerCell&quot;&gt;
    &lt;p&gt;
     DevOps 팀은 자동화 및 수동 점검의 &quot;shifting-left&quot;을 통해 CI / CD 프로세스로 파이프 라인을 가속화하려고합니다. 이를 지원하기 위해 Bitbucket Cloud 코드 검토 환경은 이제 코드 스캔 및 품질 보고서와 통합되므로 검토자는 프로덕션으로 전달되기 전에 잠재적인 문제에 대해 경고를 받습니다.
    &lt;/p&gt;
    &lt;p&gt;
     또한 Jira Service Desk Cloud에서 CI/CD 파이프 라인을 손쉽게 변경 승인과 연결하는 새로운 자동 변경 관리 기능을 사용해 볼 수 있습니다.
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;h3 id=&quot;DevOpswithAtlassian-|CodeInsights&quot;&gt;
     | Code Insights
    &lt;/h3&gt;
    &lt;p&gt;
     Bitbucket Cloud의 Code Insights를 사용하면
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      코드 검토 프로세스에 대한 테스트 및 분석이 가능하며, 테스트 자동화를위한 Mabl과 자동화 된 모니터링을위한 Sentry를 포함하여
     &lt;/span&gt;
     최고의 DevOps 스캐닝을 할 수 있습니다.
    &lt;/p&gt;
    &lt;p&gt;
     Snyk가 Sev-1 보안 사고로 전환되기 전에 중요한 보안 취약점을 조기에 검색하고 강조 할 수 있으므로 Atlassian의 새로운 Snyk와 DevSecOps 통합이 특히 중요합니다.
    &lt;/p&gt;
    &lt;p&gt;
     이러한 모든 통합은 개방형 API를 기반으로하기 때문에 자체 도구에 대한 추가 코드 보고서를 사용하여 Bitbucket Cloud를 확장 할 수 있습니다.
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span class=&quot;confluence-embedded-file-wrapper image-center-wrapper confluence-embedded-manual-size&quot;&gt;
      &lt;img src=&quot;/assets/images/97478051/5.png&quot;/&gt;
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;h3 id=&quot;DevOpswithAtlassian-|자동화된변경관리&quot;&gt;
     | 자동화된 변경 관리
    &lt;/h3&gt;
    &lt;p&gt;
     Jira Service Desk Cloud 및 Bitbucket Pipelines(현재 초기 액세스 상태)를 통한 자동 변경 관리는 CI/CD 프로세스를 일시 중지하고 Jira Service Desk에서 변경 요청을 만든 다음 승인되면 배포를 트리거합니다.
    &lt;/p&gt;
    &lt;ul style=&quot;list-style-type: square;&quot;&gt;
     &lt;li&gt;
      &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
       &lt;strong&gt;
        Jira Service Desk Cloud의 Risk Assessment Engine은
       &lt;/strong&gt;
       변경 리스크를 신속하게 파악하여 리스크가 낮은 변경 사항을 자동으로 승인하고 배포합니다.
      &lt;/span&gt;
     &lt;/li&gt;
     &lt;li&gt;
      &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
       &lt;strong&gt;
        Jira Service Desk Cloud의 변경 관리 뷰는
       &lt;/strong&gt;
       팀이 검토하고 필요한 경우 수동으로 승인 할 수있는 변경 가능한 변경 요청에서 모든 정보를 한꺼번에 모아 위험이 높은 변경에 대한 승인 프로세스를 간소화합니다.
      &lt;/span&gt;
     &lt;/li&gt;
     &lt;li&gt;
      &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
       &lt;strong&gt;
        자동 변경 관리는
       &lt;/strong&gt;
       Bitbucket Pipelines, Jenkins, Circle CI 및 Octopus Deploy를 지원합니다
      &lt;/span&gt;
     &lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      &lt;span class=&quot;confluence-embedded-file-wrapper image-center-wrapper confluence-embedded-manual-size&quot;&gt;
       &lt;img src=&quot;/assets/images/97478051/6.png&quot;/&gt;
      &lt;/span&gt;
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;hr/&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
   &lt;/div&gt;
  &lt;/div&gt;
 &lt;/div&gt;
 &lt;div class=&quot;columnLayout two-right-sidebar&quot; data-layout=&quot;two-right-sidebar&quot;&gt;
  &lt;div class=&quot;cell normal&quot; data-type=&quot;normal&quot;&gt;
   &lt;div class=&quot;innerCell&quot;&gt;
    &lt;h2 id=&quot;DevOpswithAtlassian-|OPERATE&amp;amp;MONITOR&quot;&gt;
     | OPERATE &amp;amp; MONITOR
    &lt;/h2&gt;
    &lt;h3 id=&quot;DevOpswithAtlassian-긴급한인시던트를진단하고,사고를더빠르게해결하기&quot;&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      긴급한 인시던트를 진단하고, 사고를 더 빠르게 해결하기
     &lt;/span&gt;
    &lt;/h3&gt;
   &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;cell aside&quot; data-type=&quot;aside&quot;&gt;
   &lt;div class=&quot;innerCell&quot;&gt;
    &lt;p&gt;
     &lt;span class=&quot;confluence-embedded-file-wrapper image-right-wrapper confluence-embedded-manual-size&quot;&gt;
      &lt;img src=&quot;/assets/images/97478051/7.png&quot;/&gt;
     &lt;/span&gt;
    &lt;/p&gt;
   &lt;/div&gt;
  &lt;/div&gt;
 &lt;/div&gt;
 &lt;div class=&quot;columnLayout single&quot; data-layout=&quot;single&quot;&gt;
  &lt;div class=&quot;cell normal&quot; data-type=&quot;normal&quot;&gt;
   &lt;div class=&quot;innerCell&quot;&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      사건이 발생하면 신속한 해결의 핵심은 문제의 원인을 신속하게 파악하는 것입니다. 그리고 팀이 DevOps를 채택하고 구축 프로세스를 자동화함에 따라 변경 관련 실패가 점점 더 일반화되고 있습니다.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);letter-spacing: 0.0px;&quot;&gt;
      최근의 코드 변경으로 인해 문제가 발생했는지 여부를 알고, 즉시 적절한 개발자로부터 도움을 받을 수 있다면 좋지 않을까요?
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);letter-spacing: 0.0px;&quot;&gt;
      오늘날 대부분의 팀은 Git 히스토리 및 Jira 티켓을 통해 트롤링하는 추적 작업이 필요합니다.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);letter-spacing: 0.0px;&quot;&gt;
      &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
       Opsgenie는 Jira Software Cloud와 Bitbucket Cloud에 새롭게 심층적으로 통합되어 팀이 이 모든 과정을 단축할 수 있도록 지원하며, 첫 번째 응답자에게 최근 배포된 Jira 티켓과 관련 Jira 티켓에 대한 감사 추적 정보를 제공합니다.
      &lt;/span&gt;
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;h3 id=&quot;DevOpswithAtlassian-|Opsgenie및BitbucketCloud통합&quot;&gt;
     | Opsgenie 및 Bitbucket Cloud 통합
    &lt;/h3&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      Opsgenie와 Bitbucket Cloud의 통합은 모든 경고를 중앙 집중화하고 노이즈를 걸러냄으로써 올바른 문제가 해결되고, 적절한 사람이 경고를 받으며 올바른 조치가 취해지도록 합니다.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;h3 id=&quot;DevOpswithAtlassian-|IncidentInvestigationDashboard&quot;&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      | Incident Investigation Dashboard
     &lt;/span&gt;
    &lt;/h3&gt;
    &lt;p&gt;
     &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
      Incident Investigation Dashboard를 통해 팀은 사고 직전에 발생한 배포를보고 잠재적 원인으로 추가한 다음, 변경을 한 개발자에게 연락하여 롤백하고 사고를 해결할 수 있습니다.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span class=&quot;confluence-embedded-file-wrapper image-center-wrapper confluence-embedded-manual-size&quot;&gt;
      &lt;img src=&quot;/assets/images/97478051/8.png&quot;/&gt;
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;hr/&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
   &lt;/div&gt;
  &lt;/div&gt;
 &lt;/div&gt;
 &lt;div class=&quot;columnLayout two-right-sidebar&quot; data-layout=&quot;two-right-sidebar&quot;&gt;
  &lt;div class=&quot;cell normal&quot; data-type=&quot;normal&quot;&gt;
   &lt;div class=&quot;innerCell&quot;&gt;
    &lt;h2 id=&quot;DevOpswithAtlassian-|COMMUNICATION&amp;amp;COLLABORATION&quot;&gt;
     | COMMUNICATION &amp;amp; COLLABORATION
    &lt;/h2&gt;
    &lt;h3 id=&quot;DevOpswithAtlassian-DevOps는도구및사례/문화에관한것입니다.&quot;&gt;
     DevOps는 도구 및 사례 / 문화에 관한 것입니다.
    &lt;/h3&gt;
   &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&quot;cell aside&quot; data-type=&quot;aside&quot;&gt;
   &lt;div class=&quot;innerCell&quot;&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
   &lt;/div&gt;
  &lt;/div&gt;
 &lt;/div&gt;
 &lt;div class=&quot;columnLayout single&quot; data-layout=&quot;single&quot;&gt;
  &lt;div class=&quot;cell normal&quot; data-type=&quot;normal&quot;&gt;
   &lt;div class=&quot;innerCell&quot;&gt;
    &lt;p&gt;
     성공적인 DevOps 구현은 도구 연결로 끝나지 않습니다. 대부분의 DevOps 실무자들은 DevOps를 성공적으로 구현하는 데 사람과 문화를 가장 중요한 요소로 꼽습니다.
    &lt;/p&gt;
    &lt;p&gt;
     이러한 균형을 맞추기 위해 Atlassian은 DevOps best practice를 배우고 공유 할 수있는 새로운 리소스 허브를 만들었습니다.
    &lt;/p&gt;
    &lt;ul style=&quot;list-style-type: square;&quot;&gt;
     &lt;li&gt;
      DevOps Community
     &lt;/li&gt;
     &lt;li&gt;
      DevOps Confluence templates
      &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
       (DevOps 의식을 개선하고 장기적인 목표를 설정하기 위한)
      &lt;/span&gt;
     &lt;/li&gt;
     &lt;li&gt;
      DevOps Guides(Jira와 같은 도구를 CI/CD와 같은 모범 사례와 연결하는 방법에 대해)
     &lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class=&quot;confluence-information-macro has-no-icon confluence-information-macro-information conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;info&quot;&gt;
     &lt;div class=&quot;confluence-information-macro-body&quot;&gt;
      &lt;p&gt;
       &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
        일상적인 커뮤니케이션을 위해 새로운 Slack 통합 및 Statuspage 통합은 내부 및 외부 커뮤니케이션 모두에서 DevOps 모범 사례를 채택하는 데 도움이 될 수 있습니다.
       &lt;/span&gt;
      &lt;/p&gt;
     &lt;/div&gt;
    &lt;/div&gt;
   &lt;/div&gt;
  &lt;/div&gt;
 &lt;/div&gt;
 &lt;div class=&quot;columnLayout single&quot; data-layout=&quot;single&quot;&gt;
  &lt;div class=&quot;cell normal&quot; data-type=&quot;normal&quot;&gt;
   &lt;div class=&quot;innerCell&quot;&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;hr/&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;p&gt;
     원문 PDF :
     &lt;a class=&quot;external-link&quot; href=&quot;https://static.ziftsolutions.com/files/8a9983c372bab3890172cb343db53375/DevopsLaunchforChannelPartnerscustomizeversion.pdf&quot; rel=&quot;nofollow&quot;&gt;
      DevOps with Atlassian
     &lt;/a&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;p&gt;
     Atlassian 솔루션에 대해
     &lt;span style=&quot;letter-spacing: 0.0px;&quot;&gt;
      궁금한 점이 있으시다면 언제든지 오픈소스컨설팅 아틀라시안팀에게 문의해 주세요.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span style=&quot;letter-spacing: 0.0px;&quot;&gt;
      감사합니다.
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;span style=&quot;letter-spacing: 0.0px;&quot;&gt;
      &lt;a class=&quot;external-link&quot; href=&quot;mailto:atlassian@osci.kr&quot; rel=&quot;nofollow&quot; style=&quot;text-decoration: none;&quot;&gt;
       atlassian@osci.kr
      &lt;/a&gt;
     &lt;/span&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
    &lt;p&gt;
     &lt;br/&gt;
    &lt;/p&gt;
   &lt;/div&gt;
  &lt;/div&gt;
 &lt;/div&gt;
&lt;/div&gt;</description>
        <pubDate>Wed, 05 Aug 2020 00:00:00 +0900</pubDate>
        <link>https://tech.osci.kr/2020/08/05/97478051/</link>
        <guid isPermaLink="true">https://tech.osci.kr/2020/08/05/97478051/</guid>
        
        <category>atlassian</category>
        
        <category>releasenote</category>
        
        
      </item>
    
      <item>
        <title>Atlassian 8월 Release Note</title>
        <description>&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 안녕하세요. 아틀라시안 플래티넘 파트너, 오픈소스컨설팅 입니다.
 &lt;br/&gt;
 이번 포스팅에서는 아틀라시안 제품군의 Jira와 Confluence 그리고 Jira Service Desk의 Release Note를 전해드리고자 합니다.
&lt;/p&gt;
&lt;h1 id=&quot;Atlassian8월ReleaseNote-Jira8.10.xReleaseNote&quot;&gt;
 &lt;br/&gt;
 &lt;strong&gt;
  Jira 8.10.x Release Note
 &lt;/strong&gt;
&lt;/h1&gt;
&lt;h3 id=&quot;Atlassian8월ReleaseNote-|OAuth2.0foryourmailserver/메일서버를위한OAuth2.0&quot;&gt;
 | OAuth 2.0 for your mail server  /
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  메일 서버를 위한 OAuth 2.0
 &lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(48,48,48);&quot;&gt;
  &lt;span style=&quot;color: rgb(48,48,48);&quot;&gt;
   구글과 마이크로소프트가 기존에 사용하던 인증방식을 비활성화할 계획인 가운데,
   &lt;br/&gt;
  &lt;/span&gt;
 &lt;/span&gt;
 &lt;span style=&quot;color: rgb(48,48,48);&quot;&gt;
  &lt;span style=&quot;color: rgb(48,48,48);&quot;&gt;
   계속해서 이메일을 사용하여 Jira에 의견을 추가하고 이슈를 생성할 수 있도록 OAuth 2.0 지원을 추가했습니다.
   &lt;br/&gt;
   비밀번호 대신
  &lt;/span&gt;
 &lt;/span&gt;
 &lt;span style=&quot;color: rgb(48,48,48);&quot;&gt;
  &lt;span style=&quot;color: rgb(48,48,48);&quot;&gt;
   Gmail 또는 Microsoft Exchange 온라인의 인증 방법으로 이용 가능
  &lt;/span&gt;
  합니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(48,48,48);&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97477897/0.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;h3 id=&quot;Atlassian8월ReleaseNote-|Useranonymization(GDPR)improvements/사용자익명화개선&quot;&gt;
 | User anonymization (GDPR) improvements / 사용자 익명화 개선
&lt;/h3&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  Jira 8.7에서 GDPR을 준수할 수 있도록 사용자 익명화를 도입 했었습니다.
  &lt;br/&gt;
  초기 기능에는 몇가지 제한이 있었지만 계속해서 새로운 버전으로 업데이트 중입니다.
  &lt;br/&gt;
  이번 릴리스에서는 익명화의 범위를 다음과 같은 항목을 포함하도록 확대하였습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;
  &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
   이슈 수집기의 보고자 및 생성자
  &lt;/span&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
   &lt;span class=&quot;inline-comment-marker&quot; data-ref=&quot;0917544c-d16e-4d1a-a475-a3d4e5a23fbb&quot;&gt;
    이슈 히스토리 탭의 이름 관련 필드 전체 (할당자, 보고자, 단일 및 다중 사용자 선택기 필드)
   &lt;/span&gt;
  &lt;/span&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
   삭제된 사용자를 익명화 하는 기능
  &lt;/span&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  *GDPR: 유럽연합 일반 데이터 보호 규칙
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h3 id=&quot;Atlassian8월ReleaseNote-|Moreinsightintoyourcustomfields/사용자정의필드에대한더자세한정보확인&quot;&gt;
 | More insight into your custom fields /
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  사용자 정의 필드에 대한 더 자세한 정보 확인
 &lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
   특정 사용자 정의 필드가 JIRA 의 인덱싱 시간에 얼마나 영향을 미치는 지 확인할 수 있습니다.
  &lt;/span&gt;
  &lt;br/&gt;
 &lt;/span&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  이제 해당 정보에 쉽게 접근 할 수 있어 로그를 일일히 검색할 필요가 없습니다.
  &lt;span&gt;
   &lt;br/&gt;
  &lt;/span&gt;
  &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
   사용자 정의 필드 인덱싱 화면에서 인덱싱이 가장 오래 걸리는 사용자 정의 필드 10개가 표시되어 속도 문제를 분석하고 조치하는데 용이합니다.
  &lt;/span&gt;
  &lt;br/&gt;
 &lt;/span&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  규모가 큰 환경에서는 사용자 정의 필드를 분석하는데 어려움을 겪을 수 있기 때문에
  &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
   엔터프라이즈 환경에서 특히 유용합니다.
  &lt;/span&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
   해당 정보는 다음 경로에서 확인할 수 있습니다.
  &lt;/span&gt;
  &lt;strong&gt;
   Jira Administration &amp;gt; System &amp;gt; Clustering &amp;gt; Actions &amp;gt; Custom field indexing
  &lt;/strong&gt;
  &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
   .
  &lt;/span&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
   &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
    &lt;img src=&quot;/assets/images/97477897/1.png&quot;/&gt;
   &lt;/span&gt;
  &lt;/span&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;h3 id=&quot;Atlassian8월ReleaseNote-|Stalenodesautomaticallyremoved/오래된노드들을자동으로제거&quot;&gt;
 | Stale nodes automatically removed / 오래된 노드들을 자동으로 제거
&lt;/h3&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(48,48,48);&quot;&gt;
  클러스터 관리에 자동화를 도입했습니다. 이제 클러스터에서 오프라인 노드들을  제거하거나 하트비트 신호가 없는 노드들을 오프라인으로 이동시키는 것들을 수동으로 할 필요가 없습니다.
  &lt;br/&gt;
 &lt;/span&gt;
 &lt;span style=&quot;color: rgb(48,48,48);&quot;&gt;
  하트비트 신호가 없다고 보고된 노드는 이틀 뒤에 자동으로 오프라인으로 이동되며, 오프라인 상태로 유지된 후 이틀 뒤에 클러스터에서 자동으로 제거됩니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;h3 id=&quot;Atlassian8월ReleaseNote-|Optimizedcustomfields/최적화된사용자정의필드&quot;&gt;
 | Optimized custom fields /
 &lt;span style=&quot;color: rgb(0,0,0);&quot;&gt;
  최적화된 사용자 정의 필드
 &lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;
 많은 수의 사용자 정의 필드는 Jira의 성능 및 인덱싱 시간에 부정적인 영향을 미칠 수 있습니다.
 &lt;span&gt;
  &lt;br/&gt;
 &lt;/span&gt;
 이러한 영향을 최소화하기 위해 필드 인덱서 수를 줄이는 새로운 최적화 방법을 도입했습니다.
 &lt;br/&gt;
 &lt;span&gt;
  &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
   이제 지라의 이슈에서 사용자 정의 필드를 사용하지 않는 경우 인덱싱의 정렬을 위한 Marker 를 저장하지 않습니다.
   &lt;br/&gt;
   즉, 지라의 이슈에서 사용되지 않는 사용자 정의 필드는 인덱싱 작업에 포함되지 않도록 바뀌었습니다.
  &lt;/span&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h1 id=&quot;Atlassian8월ReleaseNote-Confluence7.6ReleaseNote&quot;&gt;
 &lt;strong&gt;
  Confluence 7.6 Release Note
 &lt;/strong&gt;
&lt;/h1&gt;
&lt;h3 id=&quot;Atlassian8월ReleaseNote-|Capturemoreend-useractivityintheauditlog/감사로그에서엔드유저의더많은활동을확인가능&quot;&gt;
 | Capture more end-user activity in the audit log / 감사 로그에서 엔드 유저의 더 많은 활동을 확인 가능
&lt;/h3&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
  많은 분들이 Compliance 와 Regulation 충족을 위해 많은 경우 감사 로그를 저장해야 할 필요가 있다는 것을 알고 있습니다.
 &lt;/span&gt;
 &lt;br/&gt;
 이제 감사 로그는 다음과 같은 경우에도 이벤트를 기록할 수 있습니다
&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;
  페이지 또는 블로그 게시물로 이동
 &lt;/li&gt;
 &lt;li&gt;
  페이지 또는 블로그 게시물을 공유.
 &lt;/li&gt;
 &lt;li&gt;
  페이지 또는 블로그 게시물에 대한 액세스 요청
 &lt;/li&gt;
 &lt;li&gt;
  페이지 또는 블로그 게시물에 대한 액세스 권한 부여(액세스 요청으로부터)
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
 이러한 이벤트는 데이터 센터 라이센스에서 적용할 수 있는 고급 적용 범위 수준입니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97477897/2.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;h3 id=&quot;Atlassian8월ReleaseNote-|TrusteddomainsforCompanionapp/Companion앱의신뢰할수있는도메인&quot;&gt;
 | Trusted domains for Companion app / Companion앱의 신뢰할 수 있는 도메인
&lt;/h3&gt;
&lt;p&gt;
 이제 Companion 앱을 모든 사용자에게 출시하기 전에 신뢰할 수 있는 도메인/사이트를 설정할 수 있습니다.
 &lt;br/&gt;
 Confluence URL을 신뢰할 수 있는 도메인으로 설정하면 추후 사용자가 파일을 처음 편집할 때 '이 도메인 신뢰'를 선택할 필요가 없어집니다.
 &lt;br/&gt;
 환경 변수를 사용하거나 MSI를 설치하는 중에 신뢰할 수 있는 도메인으로 설정할 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h1 class=&quot;page-title&quot; id=&quot;Atlassian8월ReleaseNote-JiraServiceDesk4.11.xReleaseNote&quot;&gt;
 &lt;strong&gt;
  Jira Service Desk 4.11.xRelease Note
 &lt;/strong&gt;
&lt;/h1&gt;
&lt;h3 class=&quot;page-title&quot; id=&quot;Atlassian8월ReleaseNote-|Helpyourcustomersintheirpreferredlanguage/고객이선호하는언어로지원&quot;&gt;
 | Help your customers in their preferred language / 고객이 선호하는 언어로 지원
&lt;/h3&gt;
&lt;p&gt;
 지라 서비스 데스크는 이제 다국어 고객 포털과 헬프 센터를 함께 제공합니다. 고객이 원하는 언어로 고객에게 지원이 가능합니다.
 &lt;br/&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97477897/3.jpeg&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 서비스 데스크에 언어를 추가하고 중요한 항목에 대한 번역을 제공할 수 있으며,
 &lt;br/&gt;
 이러한 번역은 포털 이름, 요청 유형 및 공지 사항에 반영되어 표시됩니다.
 &lt;br/&gt;
 이제는 고객이 자신에게 익숙한 언어로 서비스 데스크에 접근할 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
 .
&lt;/p&gt;
&lt;h3 id=&quot;Atlassian8월ReleaseNote-|AdvancedauditinginJiraServiceDesk/JiraServiceDesk고급감사&quot;&gt;
 | Advanced auditing in Jira Service Desk / Jira Service Desk 고급 감사
&lt;/h3&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
  JIRA Service Desk (SR관리) 에만 특화된 메트릭 측정 및 보고서를 제공할 예정입니다.
 &lt;/span&gt;
 &lt;br/&gt;
 이제 Jira 인스턴스와 관련된 일반 이벤트를 모니터링하는 것 외에도 다음과 같은 카테고리 및 이벤트를 확인 하실 수 있습니다.
&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;
  &lt;span&gt;
   SLA(SLA 캘린더, SLA 목표, SLA 이름)
  &lt;/span&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;span&gt;
   보고서(생성, 삭제)
  &lt;/span&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;span&gt;
   에이전트(초대 또는 프로젝트에서 제거)
  &lt;/span&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;span&gt;
   이메일 채널(활성화, 비활성화)
  &lt;/span&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;span&gt;
   요청 유형(생성, 삭제)
  &lt;/span&gt;
  &lt;br/&gt;
  &lt;span&gt;
  &lt;/span&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;span&gt;
   조직(생성, 삭제, 업데이트)
  &lt;/span&gt;
  &lt;br/&gt;
  &lt;span&gt;
  &lt;/span&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;span&gt;
   일반 구성(공용 등록 사용 혹은 사용 안 함)
  &lt;/span&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
 &lt;span&gt;
  이 카테고리의 이벤트들은 Advanced coverage level에 있으며 Jira Data Center에서 사용 가능합니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p class=&quot;auto-cursor-target&quot;&gt;
  다음 기능은 Jira 플랫폼에 라이브로 제공되며, 이는 Jira Core, Jira Software, Jira Service Desk 등 Jira 제품군 전체가 사용할 수 있습니다.
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Atlassian8월ReleaseNote-|Managingprivatefiltersanddashboards/개인필터및대시보드관리&quot;&gt;
 | Managing private filters and dashboards / 개인 필터 및 대시보드 관리
&lt;/h3&gt;
&lt;p&gt;
 Jira 관리자에게 개인 필터 및 대시 보드를 편집하고 삭제할 수있는 기능을 제공합니다.
 &lt;br/&gt;
 이제 모든(공유 혹은 비공개) 기존 필터 및 대시 보드를 보고 처리 방법을 선택할 수 있습니다
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97477897/4.jpeg&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
  비효율적인 검색 기준들이 적용된 대시보드나 성능에 안좋은 영향을 끼칠 수 있는 가젯들로 구성된 대시보드를 관리자 권한으로 삭제할 수 있도록 했습니다.
 &lt;/span&gt;
 &lt;br/&gt;
 &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
  이제 대시보드나 필터로 인해 인스턴스가 느려지지 않도록 관리할 수 있습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;h3 id=&quot;Atlassian8월ReleaseNote-|EmbeddedCrowdupgrade/지라에임배디드된CROWD모듈업그레이드&quot;&gt;
 | Embedded Crowd upgrade /
 &lt;span style=&quot;color: rgb(23,43,77);&quot;&gt;
  지라에 임배디드된 CROWD 모듈 업그레이드
 &lt;/span&gt;
&lt;/h3&gt;
&lt;p&gt;
 임베디드 Crowd는 Jira에서 사용자 관리를 위해 사용되는 라이브러리이며 최신 버전인 4.0으로 업그레이드 되었습니다.
 &lt;br/&gt;
 사용자 및 그룹과 관련된 페이지는 이 라이브러리에 의존하지만 필요한 사용자 인터페이스와 상호 작용은 기존과 동일하게 유지됩니다.
 &lt;br/&gt;
 동시에 새 버전은 여러 가지 개선 사항을 제공하며 그 중 일부는 다음과 같습니다.
&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;
  &lt;span&gt;
   성능 향상(시간 동기화 향상)
  &lt;/span&gt;
  &lt;br/&gt;
  &lt;span&gt;
  &lt;/span&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;span&gt;
   클러스터링 지원
  &lt;/span&gt;
  &lt;br/&gt;
  &lt;span&gt;
  &lt;/span&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;span&gt;
   향상된 디렉토리 장애 조치
  &lt;/span&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;span&gt;
   많은 버그 및 제안 해결
  &lt;/span&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h3 id=&quot;Atlassian8월ReleaseNote-|MorestabilityintheFavoriteFiltersgadget/즐겨찾기필터가젯의안정성향상&quot;&gt;
 | More stability in the Favorite Filters gadget / 즐겨찾기 필터 가젯의 안정성향상
&lt;/h3&gt;
&lt;p&gt;
 즐겨찾기 필터 가젯은 가장 인기있는 가젯으로 선호하는 필터의 목록과 각각의 필터에 포함된 이슈의 수를 표시해 줍니다.
 &lt;br/&gt;
 큰 규모의 필터의 경우, 모든 이슈를 세는것은 성능에 영향을 미칠 수 있기 때문에 우리는 Jira 관리자에게 더 많은 권한을 주었습니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97477897/5.jpeg&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 가젯이 이슈를 불러들일 때 걸리는 최대 시간 값을 제어할 수 있는 글로벌 설정을 추가했습니다.
 &lt;br/&gt;
 모든 대시보드에서 모든 가젯들에서 이슈가 카운트 되는 데 최대 시간보다 오래 걸린다면, 카운트를 중지하고 대신 &quot;Too many issues&quot; 메시지를 표시합니다.
&lt;/p&gt;
&lt;h3 id=&quot;Atlassian8월ReleaseNote-|Configurehowfaststalenodesaremovedoffline/오래된노드를오프라인으로이동시키는기간설정&quot;&gt;
 | Configure how fast stale nodes are moved offline / 오래된 노드를 오프라인으로 이동시키는 기간 설정
&lt;/h3&gt;
&lt;p&gt;
 Jira Service Desk 4.10에서는 이틀 동안 하트비트 신호가 없는 클러스터의 오래된 노드를 자동으로 오프라인으로 이동할 수 있도록 하였습니다.
 &lt;br/&gt;
 이제는
 &lt;a class=&quot;external-link&quot; href=&quot;http://jira.not.alive.active.nodes.retention.period.in/&quot; rel=&quot;nofollow&quot;&gt;
  jira.not.alive.active.nodes.retention.period.in
 &lt;/a&gt;
 .hours 의 시스템 속성을 수정하여 더 빠르게 오래된 노드들을 오프라인으로 옮길 수 있습니다.
 &lt;br/&gt;
 &lt;br/&gt;
 &lt;br/&gt;
 &lt;br/&gt;
 앞으로도 아틀라시안 제품군의 Release Note를 지속적으로 전해드릴 수 있도록 하겠습니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 Jira, Confluence 사용에 불편함을 느끼시거나, 향상된 팀 협업이 필요하십니까?
&lt;/p&gt;
&lt;p&gt;
 업무를 가속화하고 최상의 품질로 시장을 선점하는데 도움을 주는 Atlassian 솔루션에 대해
&lt;/p&gt;
&lt;p&gt;
 궁금한 점이 있으시다면 언제든지 오픈소스컨설팅 아틀라시안팀에게 문의해 주세요!
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 감사합니다!
&lt;/p&gt;
&lt;p&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;mailto:atlassian@osci.kr&quot; rel=&quot;nofollow&quot;&gt;
  atlassian@osci.kr
 &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;</description>
        <pubDate>Wed, 05 Aug 2020 00:00:00 +0900</pubDate>
        <link>https://tech.osci.kr/2020/08/05/97477897/</link>
        <guid isPermaLink="true">https://tech.osci.kr/2020/08/05/97477897/</guid>
        
        <category>releasenote</category>
        
        <category>아틀라시안</category>
        
        
      </item>
    
      <item>
        <title>openstack helm을 이용한 kubernetes환경에서 openstack 배포</title>
        <description>&lt;p&gt;
 Openstack Helm을 Centos 환경에서  Ceph RBD로 구축 하는 방법에 대하여 이야기 합니다.
&lt;/p&gt;
&lt;p&gt;
 공식 매뉴얼이 Ubuntu 및 Swift기반이기 때문에 커스텀하게 수정한 부분이 다소 존재 합니다. 하지만, 기본 배경은 공식 문서(
 &lt;a class=&quot;external-link&quot; href=&quot;https://docs.openstack.org/openstack-helm/latest/&quot; rel=&quot;nofollow&quot;&gt;
  https://docs.openstack.org/openstack-helm/latest/
 &lt;/a&gt;
 )를 기반으로 작성 되었습니다.
&lt;/p&gt;
&lt;h2 id=&quot;openstackhelm을이용한kubernetes환경에서openstack배포-Openstackhelm?&quot;&gt;
 Openstack helm ?
&lt;/h2&gt;
&lt;p&gt;
 openstack helm은 이름에서 알수 있듯이 openstack을 kubernetes환경에서 helm chart를 이용하여 배포할 수 있는 프로젝트입니다. Kubernetes의 기본 기능인  Self-Healing 을 비롯하여 Kubernetes의 많은 장점들을 이용하여 Openstack을 관리 하기 때문에 확장등의 라이프 사이클 관리에 도움이 되며 을 구축, 업그레이드, 확장등의 관리를 손쉽게 할 수 있습니다. 대부분 AT&amp;amp;T를 주도적으로 99cloud , Suse등과 함께 국내에서는 SK Telecom이 많은 기여 하고 있는 프로젝트입니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97477266/0.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;
  &lt;a class=&quot;external-link&quot; href=&quot;https://www.stackalytics.com/?module=openstack-helm-group&quot; rel=&quot;nofollow&quot;&gt;
   https://www.stackalytics.com/?module=openstack-helm-group
  &lt;/a&gt;
 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;openstackhelm을이용한kubernetes환경에서openstack배포-환경설정&quot;&gt;
 환경 설정
&lt;/h2&gt;
&lt;p&gt;
 아래의 환경과 같이 Centos7의 동일한 운영체제를 사용하며, 총 5개의 NIC이 용도별로 설정 되어 있어야 합니다. 이중 001노드에서는 Kubernetes Master및 Ceph Monitor의 역할과 배포의 역할을 담당하게 됩니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97477266/1.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;table-wrap&quot;&gt;
 &lt;table class=&quot;wrapped fixed-table confluenceTable&quot;&gt;
  &lt;colgroup&gt;
   &lt;col style=&quot;width: 155.0px;&quot;/&gt;
   &lt;col style=&quot;width: 248.0px;&quot;/&gt;
   &lt;col style=&quot;width: 501.0px;&quot;/&gt;
   &lt;col style=&quot;width: 156.0px;&quot;/&gt;
  &lt;/colgroup&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;th class=&quot;confluenceTh&quot;&gt;
     hostname
    &lt;/th&gt;
    &lt;th class=&quot;confluenceTh&quot;&gt;
     OS
    &lt;/th&gt;
    &lt;th class=&quot;confluenceTh&quot;&gt;
     IP address
    &lt;/th&gt;
    &lt;th class=&quot;confluenceTh&quot;&gt;
     ETC
    &lt;/th&gt;
   &lt;/tr&gt;
   &lt;tr&gt;
    &lt;td class=&quot;confluenceTd&quot;&gt;
     kube-cy4-kube001
    &lt;/td&gt;
    &lt;td class=&quot;confluenceTd&quot;&gt;
     CentOS Linux release 7.8.2003
    &lt;/td&gt;
    &lt;td class=&quot;confluenceTd&quot;&gt;
     &lt;p&gt;
      eth0 : 10.4.10.21 (API, Deploy )
     &lt;/p&gt;
     &lt;p&gt;
      eth1 : 10.4.20.21 (Ceph Storage Public  )
     &lt;/p&gt;
     &lt;p&gt;
      eth2 : 10.4.30.21 (Ceph Storage Replication )
     &lt;/p&gt;
     &lt;p&gt;
      eth3 : 10.4.40.21 (Openstack Tanent Network )
     &lt;/p&gt;
     &lt;p&gt;
      eth4 : 192.168.193.21 (Openstack External Netowkr: Provider Network )
     &lt;/p&gt;
    &lt;/td&gt;
    &lt;td class=&quot;confluenceTd&quot;&gt;
     &lt;p&gt;
      Kubernetes Master
     &lt;/p&gt;
     &lt;p&gt;
      Ceph Monitor
     &lt;/p&gt;
    &lt;/td&gt;
   &lt;/tr&gt;
   &lt;tr&gt;
    &lt;td class=&quot;confluenceTd&quot;&gt;
     kube-cy4-kube002
    &lt;/td&gt;
    &lt;td class=&quot;confluenceTd&quot;&gt;
     CentOS Linux release 7.8.2003
    &lt;/td&gt;
    &lt;td class=&quot;confluenceTd&quot;&gt;
     &lt;p&gt;
      eth0 : 10.4.20.22 (API, Deploy )
     &lt;/p&gt;
     &lt;p&gt;
      eth1 : 10.4.20.22 (Ceph Storage Public  )
     &lt;/p&gt;
     &lt;p&gt;
      eth2 : 10.4.30.22 (Ceph Storage Replication )
     &lt;/p&gt;
     &lt;p&gt;
      eth3 : 10.4.40.22 (Openstack Tanent Network )
     &lt;/p&gt;
     &lt;p&gt;
      eth4 : 192.168.193.22 (Openstack External Netowkr: Provider Network )
     &lt;/p&gt;
    &lt;/td&gt;
    &lt;td class=&quot;confluenceTd&quot;&gt;
     &lt;p&gt;
      Kubernetes Worker
     &lt;/p&gt;
     &lt;p&gt;
      Ceph OSD
     &lt;/p&gt;
    &lt;/td&gt;
   &lt;/tr&gt;
   &lt;tr&gt;
    &lt;td class=&quot;confluenceTd&quot;&gt;
     kube-cy4-kube003
    &lt;/td&gt;
    &lt;td class=&quot;confluenceTd&quot;&gt;
     CentOS Linux release 7.8.2003
    &lt;/td&gt;
    &lt;td class=&quot;confluenceTd&quot;&gt;
     &lt;p&gt;
      eth0 : 10.4.10.23 (API, Deploy )
     &lt;/p&gt;
     &lt;p&gt;
      eth1 : 10.4.20.23 (Ceph Storage Public  )
     &lt;/p&gt;
     &lt;p&gt;
      eth2 : 10.4.30.23 (Ceph Storage Replication )
     &lt;/p&gt;
     &lt;p&gt;
      eth3 : 10.4.40.23 (Openstack Tanent Network )
     &lt;/p&gt;
     &lt;p&gt;
      eth4 : 192.168.193.23 (Openstack External Netowkr: Provider Network )
     &lt;/p&gt;
    &lt;/td&gt;
    &lt;td class=&quot;confluenceTd&quot;&gt;
     &lt;p&gt;
      Kubernetes Worker
     &lt;/p&gt;
     &lt;p&gt;
      Ceph OSD
     &lt;/p&gt;
    &lt;/td&gt;
   &lt;/tr&gt;
   &lt;tr&gt;
    &lt;td class=&quot;confluenceTd&quot; colspan=&quot;1&quot;&gt;
     kube-cy4-kube004
    &lt;/td&gt;
    &lt;td class=&quot;confluenceTd&quot; colspan=&quot;1&quot;&gt;
     CentOS Linux release 7.8.2003
    &lt;/td&gt;
    &lt;td class=&quot;confluenceTd&quot; colspan=&quot;1&quot;&gt;
     &lt;p&gt;
      eth0 : 10.4.10.24 (API, Deploy )
     &lt;/p&gt;
     &lt;p&gt;
      eth1 : 10.4.20.24 (Ceph Storage Public  )
     &lt;/p&gt;
     &lt;p&gt;
      eth2 : 10.4.30.24 (Ceph Storage Replication )
     &lt;/p&gt;
     &lt;p&gt;
      eth3 : 10.4.40.24 (Openstack Tanent Network )
     &lt;/p&gt;
     &lt;p&gt;
      eth4 : 192.168.193.24 (Openstack External Netowkr: Provider Network )
     &lt;/p&gt;
    &lt;/td&gt;
    &lt;td class=&quot;confluenceTd&quot; colspan=&quot;1&quot;&gt;
     &lt;p&gt;
      Kubernetes Worker
     &lt;/p&gt;
     &lt;p&gt;
      Ceph OSD
     &lt;/p&gt;
    &lt;/td&gt;
   &lt;/tr&gt;
  &lt;/tbody&gt;
 &lt;/table&gt;
&lt;/div&gt;
&lt;h2 class=&quot;auto-cursor-target&quot; id=&quot;openstackhelm을이용한kubernetes환경에서openstack배포-DeployCeph&quot;&gt;
 &lt;span style=&quot;letter-spacing: 0.0px;&quot;&gt;
  Deploy Ceph
 &lt;/span&gt;
&lt;/h2&gt;
&lt;p&gt;
 Ceph는 RBD형태로 Openstack상에서 볼륨을 사용하거나 인스턴스를 이용할 경우 사용되는 스토리지로 사용되며, Kubernetes상에 배포되는 Openstack-helm-infra의 Mariadb,RabbitMQ의 PV로 사용 됩니다.
&lt;/p&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 배포에 필요한 스크립트는
 &lt;em&gt;
  &quot;/hoem/deploy&quot;
 &lt;/em&gt;
 에서 관리하기 위하여 해당 디렉토리를 생성하며, 프로젝트를 클론 받기 위하여  git과 배포시 필요한 파이선 패키지 관리를 위하여  pip 패키지를 설치합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ~]# mkdir  /home/deploy ; cd  /home/deploy
[root@kube-cy4-kube001 deploy]# yum install -y git epel*
[root@kube-cy4-kube001 deploy]# yum install -y python-pip&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 ceph 배포를 위하여  ceph-ansible을 클론받고, v4.0.20 로 checkout합니다. 그리고 배포를 위한 파이선 패키지 설치를 위하여 requirements.txt 파일을 기반으로 파이선 패키지를 설치 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 deploy]# git clone https://github.com/ceph/ceph-ansible.git
[root@kube-cy4-kube001 deploy]# cd ceph-ansible/
[root@kube-cy4-kube001 ceph-ansible]# git checkout v4.0.20
[root@kube-cy4-kube001 ceph-ansible]# pip install -r requirements.txt&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 ceph은 ansible을 통하여 배포하기 때문에 deploy 인터페이스 아이피로
 &lt;em&gt;
  &quot;/etc/hosts&quot;
 &lt;/em&gt;
 파일을 수정 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ceph-ansible]# tee /etc/hosts &amp;lt;&amp;lt; EOF
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
10.4.10.21 kube-cy4-kube001 kube1
10.4.10.22 kube-cy4-kube003 kube2
10.4.10.23 kube-cy4-kube002 kube3
10.4.10.24 kube-cy4-kube004 kube4
EOF&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 ceph-ansible에서 각 역할별로 구분하여 배포 하기 때문에 Group 별로 나눠 ceph-ansible의 inventory파일을 생성하며, 해당 inventory파일로 통신이 되는지 확인 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ceph-ansible]# tee ./ceph-hosts &amp;lt;&amp;lt; EOF
[mons]
kube-cy4-kube001
[osds]
kube-cy4-kube002
kube-cy4-kube003
kube-cy4-kube004
[mdss]
[rgws]
[nfss]
[rbdmirrors]
[clients]
kube-cy4-kube001
[mgrs]
kube-cy4-kube001
[iscsigws]
[iscsi-gws]
[grafana-server]
[rgwloadbalancers]
[all:vars]
ansible_become=true
#### 설정된 User로 변경 필요
ansible_user=centos
#### 설정된 Password로 변경 필요
ansible_ssh_pass=password
EOF

[root@kube-cy4-kube001 ceph-ansible]# yum install -y sshpass
[root@kube-cy4-kube001 ceph-ansible]# ansible -i ceph-hosts -m ping  all
kube-cy4-kube003 | SUCCESS =&amp;gt; {
    &quot;ansible_facts&quot;: {
        &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;
    },
    &quot;changed&quot;: false,
    &quot;ping&quot;: &quot;pong&quot;
}
kube-cy4-kube002 | SUCCESS =&amp;gt; {
    &quot;ansible_facts&quot;: {
        &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;
    },
    &quot;changed&quot;: false,
    &quot;ping&quot;: &quot;pong&quot;
}
...&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 group_vars/all.yml 파일은 ceph-ansible을 이용하여 배포시 설정할 수 있는 전반적인 배포 변수를 설정합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ceph-ansible]# tee  group_vars/all.yml &amp;lt;&amp;lt; EOF
osd_scenario: lvm
osd_objectstore: bluestore

## monitor로 통신할 인터페이스로 실제 rbd를 사용할 경우 해당 인터페이스를 사용하게 됩니다.
monitor_interface: eth1
## monitor_interface 에 설정되어 있는 ip 대역으로 설정
public_network: 10.4.20.0/24
## 각 osd마다 복제를 위해 사용하는 인터페이스의 ip 대역으로 설정 합니다.
cluster_network: 10.4.30.0/24

ceph_stable_release: nautilus
ceph_origin: repository
ceph_repository: community
ceph_mirror: http://download.ceph.com
ceph_stable_key: https://download.ceph.com/keys/release.asc

ntp_service_enabled: true
osd_auto_discovery: false
dashboard_enabled: false
cluster: ceph
ceph_conf_overrides:
  global:
    mon_allow_pool_delete: false
    mon_osd_down_out_subtree_limit: host
    osd_pool_default_size: 2
    osd_pool_default_min_size: 1
  osd:
    osd_min_pg_log_entries: 10
    osd_max_pg_log_entries: 10
    osd_pg_log_dups_tracked: 10
    osd_pg_log_trim_min: 10
EOF&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 osds.yml 에서는 실제 osd로 사용할 디바이스를 지정합니다. osd 노드의 연결되어 있는 디바이스를 확인후 아래와 같이 osds.yml파일을 설정합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ceph-ansible]# ansible -i ceph-hosts  -ba 'lsblk' osds
kube-cy4-kube004 | CHANGED | rc=0 &amp;gt;&amp;gt;
NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sr0     11:0    1  366K  0 rom
vda    253:0    0   68G  0 disk
└─vda1 253:1    0   68G  0 part /
vdb    253:16   0   40G  0 disk
vdc    253:32   0   40G  0 disk
kube-cy4-kube002 | CHANGED | rc=0 &amp;gt;&amp;gt;
NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sr0     11:0    1  366K  0 rom
vda    253:0    0   68G  0 disk
└─vda1 253:1    0   68G  0 part /
vdb    253:16   0   40G  0 disk
vdc    253:32   0   40G  0 disk
kube-cy4-kube003 | CHANGED | rc=0 &amp;gt;&amp;gt;
NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sr0     11:0    1  366K  0 rom
vda    253:0    0   68G  0 disk
└─vda1 253:1    0   68G  0 part /
vdb    253:16   0   40G  0 disk
vdc    253:32   0   40G  0 disk

[root@kube-cy4-kube001 ceph-ansible]# tee  group_vars/osds.yml &amp;lt;&amp;lt; EOF
---
devices:
 - /dev/vdb
 - /dev/vdc
EOF&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 clients.yml 파일에 admin key를 복사하여 ceph client명령이 수행할 수 있도록 설정 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-deploy ceph-ansible]#  tee  group_vars/clients.yml &amp;lt;&amp;lt; EOF
---
copy_admin_key: true
EOF&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 site.yml.sample 을 이용하여 설정한 group_vars의 변수를 기반으로 ansible-playbook 명령을 이용하여 ceph를 배포합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[[root@kube-cy4-kube001 ceph-ansible]# ansible-playbook  -i ceph-hosts  site.yml.sample&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;confluence-information-macro confluence-information-macro-warning conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;warning&quot;&gt;
 &lt;span class=&quot;aui-icon aui-icon-small aui-iconfont-error confluence-information-macro-icon&quot;&gt;
 &lt;/span&gt;
 &lt;div class=&quot;confluence-information-macro-body&quot;&gt;
  &lt;p&gt;
   만약 아래와 같은 에러가 발생하여 정상적으로 설치가 안되는 경우가 발생할 수 있습니다.
  &lt;/p&gt;
  &lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
   &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
    &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;...
TASK [check for python] *******************************************************************************
Saturday 01 August 2020  15:46:14 +0900 (0:00:00.058)       0:00:00.058 *******
fatal: [kube-cy4-kube001]: FAILED! =&amp;gt;
  msg: The ips_in_ranges filter requires python's netaddr be installed on the ansible controller.
fatal: [kube-cy4-kube002]: FAILED! =&amp;gt;
  msg: The ips_in_ranges filter requires python's netaddr be installed on the ansible controller.
fatal: [kube-cy4-kube003]: FAILED! =&amp;gt;
  msg: The ips_in_ranges filter requires python's netaddr be installed on the ansible controller.
fatal: [kube-cy4-kube004]: FAILED! =&amp;gt;
  msg: The ips_in_ranges filter requires python's netaddr be installed on the ansible controller.
...&lt;/pre&gt;
   &lt;/div&gt;
  &lt;/div&gt;
  &lt;p class=&quot;auto-cursor-target&quot;&gt;
   배포하는 호스트에서 netaddr 패키지를 설치한뒤 다시 배포를 진행 하면 정상적으로 배포가 진행됩니다.
  &lt;/p&gt;
  &lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
   &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
    &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ceph-ansible]# yum install python-netaddr.noarch -y&lt;/pre&gt;
   &lt;/div&gt;
  &lt;/div&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;confluence-information-macro confluence-information-macro-warning conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;warning&quot;&gt;
 &lt;span class=&quot;aui-icon aui-icon-small aui-iconfont-error confluence-information-macro-icon&quot;&gt;
 &lt;/span&gt;
 &lt;div class=&quot;confluence-information-macro-body&quot;&gt;
  &lt;p&gt;
   만약, ceph cluster를 삭제 하기 위해서는 아래와 같이 purge-cluster.yml  플레이북을 실행하여 삭제할 수 있습니다.
  &lt;/p&gt;
  &lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
   &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
    &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ceph-ansible]# ansible-playbook  -i ceph-hosts infrastructure-playbooks/purge-cluster.yml &lt;/pre&gt;
   &lt;/div&gt;
  &lt;/div&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 배포가 완료 되면
 &lt;em&gt;
  &quot;ceph -s
 &lt;/em&gt;
 &quot;명령을 이용하여 &quot;
 &lt;em&gt;
  health: HEALTH_OK&quot;
 &lt;/em&gt;
 상태를 확인 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ceph-ansible]# ceph -s
  cluster:
    id:     f9b17cb6-b38c-455b-b10d-5c44d7bcc36b
    health: HEALTH_OK

  services:
    mon: 1 daemons, quorum kube-cy4-kube001 (age 3m)
    mgr: kube-cy4-kube001(active, since 2m)
    osd: 6 osds: 6 up (since 85s), 6 in (since 98s)

  data:
    pools:   0 pools, 0 pgs
    objects: 0 objects, 0 B
    usage:   6.0 GiB used, 234 GiB / 240 GiB avail
    pgs:&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;auto-cursor-target&quot; id=&quot;openstackhelm을이용한kubernetes환경에서openstack배포-InstallDocker&quot;&gt;
 Install Docker
&lt;/h2&gt;
&lt;p&gt;
 Kubernetes를 배포하기전 Container Runtime으로 사용될 Docker를 설치 합니다.
&lt;/p&gt;
&lt;p&gt;
 아래와 같이 docker-ce repository를 등록한뒤 docker-ce를 yum으로 설치 합니다. 해당 과정은 모든 노드에서 진행 하게 됩니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ~]# yum install -y yum-utils

[root@kube-cy4-kube001 ~]# yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo

[root@kube-cy4-kube001 ~]# yum install docker-ce docker-ce-cli containerd.io

[root@kube-cy4-kube001 ~]# systemctl enable --now  docker

[root@kube-cy4-kube001 ~]# systemctl  status docker
● docker.service - Docker Application Container Engine
   Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; vendor preset: disabled)
   Active: active (running) since Sat 2020-08-01 13:56:13 KST; 2h 34min ago
     Docs: https://docs.docker.com
 Main PID: 1368 (dockerd)
    Tasks: 15
   Memory: 147.2M
   CGroup: /system.slice/docker.service
           └─1368 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
...&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;h2 class=&quot;auto-cursor-target&quot; id=&quot;openstackhelm을이용한kubernetes환경에서openstack배포-DeployKubernetes&quot;&gt;
 Deploy Kubernetes
&lt;/h2&gt;
&lt;p&gt;
 kubernetes를 설치하기 위해서 kubeadm을 사용할것 입니다. kubeadm설치와 kubelet설치를 위하여 kubernetes upstream repository를 등록 하여 kubeadm,kubelet를 설치 합니다.
&lt;/p&gt;
&lt;p&gt;
 해당 설치는 모든 호스트에서 진행 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ~]#  cat &amp;lt;&amp;lt;EOF &amp;gt; /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
        https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF
 
[root@kube-cy4-kube001 ~]# yum install kubeadm  -y
[root@kube-cy4-kube001 ~]#  systemctl enable kubelet --now&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 &lt;em&gt;
  &quot;kubeadm init &quot;
 &lt;/em&gt;
 명령을 이용하여 master노드로 사용할 kube-cy4-kube001 호스트에서 초기화 과정을 진행 합니다.
&lt;/p&gt;
&lt;p&gt;
 이때 kubernetes api를 사용할 인터페이스인 eth0의 ip로 &quot;
 &lt;em&gt;
  --apiserver-advertise-address&quot;
 &lt;/em&gt;
 옵션을 추가 하며, pod들이 통신하기 위하여 사용되는 네트워크 cidr를 172.16.0.0/16으로 진행 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ~]# echo 1 &amp;gt; /proc/sys/net/ipv4/ip_forward
[root@kube-cy4-kube001 ~]# kubeadm init  --apiserver-advertise-address=10.4.10.21  --pod-network-cidr=172.16.0.0/16&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 정상적으로 진행 되었습니다면 아래와 같이
 &lt;em&gt;
  &quot;initialized successfully&quot;
 &lt;/em&gt;
 메시지를 확인할 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
 마지막에 나온 hash 값을 통하여 다른 노드들이 join할 수 있도록 메시지를 출력한것을 확인 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;...
Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

You should now deploy a pod network to the cluster.
Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 10.4.10.21:6443 --token 26amyi.687200qzjh5lkkxw \
    --discovery-token-ca-cert-hash sha256:e1a4959da94c40d0d21aaf8fb39878608c0002a4a6be6122bc8fa3d116b5db9f&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 위에서 중간에 나온 메시지 처럼  master노드인 kube-cy4-kube001 에서 kubernetes clinet를 위해 사용되는 kube config파일을 복사하도록 하여 kubernetes clinet(kubectl)을 실행하여 봅니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ~]#   mkdir -p $HOME/.kube
[root@kube-cy4-kube001 ~]#   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
[root@kube-cy4-kube001 ~]#   sudo chown $(id -u):$(id -g) $HOME/.kube/config
[root@kube-cy4-kube001 ~]# kubectl get nodes
NAME               STATUS     ROLES    AGE     VERSION
kube-cy4-kube001   NotReady   master   2m45s   v1.18.6&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 kube-cy4-kube002 노드에서  master 노드로 join을 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube002 ~]# echo 1 &amp;gt; /proc/sys/net/ipv4/ip_forward
[root@kube-cy4-kube002 ~]# kubeadm join 10.4.10.21:6443 --token 26amyi.687200qzjh5lkkxw \
&amp;gt;     --discovery-token-ca-cert-hash sha256:e1a4959da94c40d0d21aaf8fb39878608c0002a4a6be6122bc8fa3d116b5db9f&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 kube-cy4-kube003 노드에서  master 노드로 join을 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube003 ~]# echo 1 &amp;gt; /proc/sys/net/ipv4/ip_forward
[root@kube-cy4-kube003 ~]# kubeadm join 10.4.10.21:6443 --token 26amyi.687200qzjh5lkkxw \
&amp;gt;     --discovery-token-ca-cert-hash sha256:e1a4959da94c40d0d21aaf8fb39878608c0002a4a6be6122bc8fa3d116b5db9f&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 kube-cy4-kube004 노드에서  master 노드로 join을 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube004 ~]# echo 1 &amp;gt; /proc/sys/net/ipv4/ip_forward
[root@kube-cy4-kube004 ~]# kubeadm join 10.4.10.21:6443 --token 26amyi.687200qzjh5lkkxw \
&amp;gt;     --discovery-token-ca-cert-hash sha256:e1a4959da94c40d0d21aaf8fb39878608c0002a4a6be6122bc8fa3d116b5db9f&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 다시 master노드로 들어와서  &quot;kubectl get nodes -o wide&quot; 명령을 수행하여 join된  노드를 확인할 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
 하지만 아직 CNI(Container Network Interface)가 설정이 안되어 있기 때문에  STATUS 가 아직 NotReady 상태입니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ~]# kubectl get nodes -o wide
NAME               STATUS     ROLES    AGE    VERSION   INTERNAL-IP   EXTERNAL-IP   OS-IMAGE                KERNEL-VERSION                CONTAINER-RUNTIME
kube-cy4-kube001   NotReady   master   6m8s   v1.18.6   10.4.10.21    &amp;lt;none&amp;gt;        CentOS Linux 7 (Core)   3.10.0-1127.13.1.el7.x86_64   docker://19.3.12
kube-cy4-kube002   NotReady   &amp;lt;none&amp;gt;   40s    v1.18.6   10.4.20.22    &amp;lt;none&amp;gt;        CentOS Linux 7 (Core)   3.10.0-1127.13.1.el7.x86_64   docker://19.3.12
kube-cy4-kube003   NotReady   &amp;lt;none&amp;gt;   38s    v1.18.6   10.4.20.23    &amp;lt;none&amp;gt;        CentOS Linux 7 (Core)   3.10.0-1127.13.1.el7.x86_64   docker://19.3.12
kube-cy4-kube004   NotReady   &amp;lt;none&amp;gt;   36s    v1.18.6   10.4.20.24    &amp;lt;none&amp;gt;        CentOS Linux 7 (Core)   3.10.0-1127.13.1.el7.x86_64   docker://19.3.12&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;openstackhelm을이용한kubernetes환경에서openstack배포-DeployCalico&quot;&gt;
 Deploy Calico
&lt;/h2&gt;
&lt;p&gt;
 calico배포를 위한 매니패스트를 다운로드 한뒤 pod 네트워크를 위한 인터페이스 추가 및 IP in IP 모드를 Never로 변경하여 L2 통신간에 encapsulation없이 통신하도록 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ~]# mkdir /home/deploy/calico ; cd /home/deploy/calico
[root@kube-cy4-kube001 calico]# yum install -y wget
[root@kube-cy4-kube001 calico]# wget https://docs.projectcalico.org/manifests/calico.yaml
[root@kube-cy4-kube001 calico]# vi calico.yaml
...
      containers:
        # Runs calico-node container on each Kubernetes node. This
        # container programs network policy and routes on each
        # host.
        - name: calico-node
          image: calico/node:v3.15.1
          env:
            ### pod네트워크 인터페이스 추가 
            - name: IP_AUTODETECTION_METHOD
              value: &quot;interface=eth0&quot;
            # Use Kubernetes API as the backing datastore.
            - name: DATASTORE_TYPE
              value: &quot;kubernetes&quot;
            # Wait for the datastore.
            - name: WAIT_FOR_DATASTORE
              value: &quot;true&quot;
            # Set based on the k8s node name.
....
            ### IP in IP 모드를 사용하지 않도록 하기 위하여 Always를 Never로 변경
            - name: CALICO_IPV4POOL_IPIP
            #  value: &quot;Always&quot;
              value: &quot;Never&quot;
[root@kube-cy4-kube001 calico]# kubectl  create -f calico.yaml&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 이제, calico-system namespace에 pod들이 정상적으로 동작하는것을 확인할 수 있으며, &quot;
 &lt;em&gt;
  kubectl get nodes&quot;
 &lt;/em&gt;
 명령 수행시 Ready 상태로 변경된것을 확인할 수 있습니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 calico]#  kubectl get pods -n calico-system -o wide
NAME                                       READY   STATUS    RESTARTS   AGE    IP              NODE               NOMINATED NODE   READINESS GATES
calico-kube-controllers-5687f44fd5-nj49z   1/1     Running   0          2m8s   172.16.10.130   kube-cy4-kube004   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
calico-node-48lw6                          1/1     Running   0          2m8s   10.4.20.24      kube-cy4-kube004   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
calico-node-6kt28                          1/1     Running   0          2m8s   10.4.10.21      kube-cy4-kube001   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
calico-node-jpqf5                          1/1     Running   0          2m8s   10.4.20.23      kube-cy4-kube003   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
calico-node-lh7fp                          1/1     Running   0          2m8s   10.4.20.22      kube-cy4-kube002   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
calico-typha-7648bcdddb-4cblz              1/1     Running   0          60s    10.4.20.22      kube-cy4-kube002   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
calico-typha-7648bcdddb-4mjvp              1/1     Running   0          60s    10.4.20.24      kube-cy4-kube004   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
calico-typha-7648bcdddb-5qz8m              1/1     Running   0          2m8s   10.4.20.23      kube-cy4-kube003   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
calico-typha-7648bcdddb-kq5q6              1/1     Running   0          60s    10.4.10.21      kube-cy4-kube001   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;

[root@kube-cy4-kube001 calico]# kubectl  get nodes -o wide
NAME               STATUS   ROLES    AGE   VERSION   INTERNAL-IP   EXTERNAL-IP   OS-IMAGE                KERNEL-VERSION                CONTAINER-RUNTIME
kube-cy4-kube001   Ready    master   24m   v1.18.6   10.4.10.21    &amp;lt;none&amp;gt;        CentOS Linux 7 (Core)   3.10.0-1127.13.1.el7.x86_64   docker://19.3.12
kube-cy4-kube002   Ready    &amp;lt;none&amp;gt;   19m   v1.18.6   10.4.20.22    &amp;lt;none&amp;gt;        CentOS Linux 7 (Core)   3.10.0-1127.13.1.el7.x86_64   docker://19.3.12
kube-cy4-kube003   Ready    &amp;lt;none&amp;gt;   19m   v1.18.6   10.4.20.23    &amp;lt;none&amp;gt;        CentOS Linux 7 (Core)   3.10.0-1127.13.1.el7.x86_64   docker://19.3.12
kube-cy4-kube004   Ready    &amp;lt;none&amp;gt;   18m   v1.18.6   10.4.20.24    &amp;lt;none&amp;gt;        CentOS Linux 7 (Core)   3.10.0-1127.13.1.el7.x86_64   docker://19.3.12&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 calicoctl 바이너리를 다운로드 받아 calico cni 가 제어할 pod들의 ippool의 목록과 bgp peer정보를 확인 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 calico]# curl -O -L  https://github.com/projectcalico/calicoctl/releases/download/v3.15.1/calicoctl
[root@kube-cy4-kube001 calico]# chmod +x calicoctl
[root@kube-cy4-kube001 calico]# sudo mv calicoctl /usr/local/bin/
[root@kube-cy4-kube001 calico]# tee /root/calico.rc &amp;lt;&amp;lt; EOF
export KUBECONFIG=/root/.kube/config
export DATASTORE_TYPE=kubernetes
EOF
[root@kube-cy4-kube001 calico]# source  ~/calico.rc
[root@kube-cy4-kube001 calico]# calicoctl get ippools
NAME                  CIDR            SELECTOR
default-ipv4-ippool   172.16.0.0/16   all()

[root@kube-cy4-kube001 calico]# calicoctl get nodes -o wide
NAME               ASN       IPV4            IPV6
kube-cy4-kube001   (64512)   10.4.10.21/24
kube-cy4-kube002   (64512)   10.4.10.22/24
kube-cy4-kube003   (64512)   10.4.10.23/24
kube-cy4-kube004   (64512)   10.4.10.24/24&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 실제 pod통신은 아래와 같이 eth0인터페이스를 통하여 172.16.0.0/16 대역에서 각 노드별 block 대역으로 직접 라우팅 되는것을 확인할 수 있습니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 calico]# route -n | grep 172.16
172.16.10.128   10.4.10.24      255.255.255.192 UG    0      0        0 eth0
172.16.39.128   10.4.10.22      255.255.255.192 UG    0      0        0 eth0
172.16.43.192   10.4.10.23      255.255.255.192 UG    0      0        0 eth0&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;openstackhelm을이용한kubernetes환경에서openstack배포-InstallHelm&quot;&gt;
 Install Helm
&lt;/h2&gt;
&lt;p&gt;
 openstack helm과 openstack helm infra는 helm기반으로 배포가 되기 때문에 helm을 설치 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ~ ]#  curl -LO https://git.io/get_helm.sh
[root@kube-cy4-kube001 ~ ]#  chmod 700 get_helm.sh
[root@kube-cy4-kube001 ~ ]#  ./get_helm.sh
[root@kube-cy4-kube001 ~ ]# kubectl create serviceaccount --namespace kube-system tiller
[root@kube-cy4-kube001 ~ ]# kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller
[root@kube-cy4-kube001 ~ ]# kubectl patch deploy --namespace kube-system tiller-deploy -p '{&quot;spec&quot;:{&quot;template&quot;:{&quot;spec&quot;:{&quot;serviceAccount&quot;:&quot;tiller&quot;}}}}'
[root@kube-cy4-kube001 ~ ]# helm init --service-account tiller --upgrade
[root@kube-cy4-kube001 ~ ]# helm version
Client: &amp;amp;version.Version{SemVer:&quot;v2.16.9&quot;, GitCommit:&quot;8ad7037828e5a0fca1009dabe290130da6368e39&quot;, GitTreeState:&quot;clean&quot;}
Server: &amp;amp;version.Version{SemVer:&quot;v2.16.9&quot;, GitCommit:&quot;8ad7037828e5a0fca1009dabe290130da6368e39&quot;, GitTreeState:&quot;clean&quot;}&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 local helm repository를 등록 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ~ ]#  tee /etc/systemd/system/helm-serve.service &amp;lt;&amp;lt;EOF
[Unit]
Description=Helm Server
After=network.target
 
[Service]
User=root
Restart=always
ExecStart=/usr/local/bin/helm serve
 
[Install]
WantedBy=multi-user.target
EOF

[root@kube-cy4-kube001 ~ ]#  systemctl daemon-reload ; systemctl enable helm-serve --now
[root@kube-cy4-kube001 calico]# helm repo list
NAME 	URL
local	http://localhost:8879/charts&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&quot;openstackhelm을이용한kubernetes환경에서openstack배포-SettingCSI(CephRBD)&quot;&gt;
 Setting CSI(Ceph RBD)
&lt;/h2&gt;
&lt;p&gt;
 앞에서 배포한 ceph cluster 를 kubernetes에서 storage class를 총하여 pv를 생성하기 위하여 csi를 설정 합니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;em&gt;
  &quot;ceph mon dump&quot;
 &lt;/em&gt;
 명령을 이용하여 cluster fsid를 확인합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ~]# ceph mon dump
dumped monmap epoch 1
epoch 1
fsid f9b17cb6-b38c-455b-b10d-5c44d7bcc36b
last_changed 2020-08-01 16:23:11.258185
created 2020-08-01 16:23:11.258185
min_mon_release 14 (nautilus)
0: [v2:10.4.20.21:3300/0,v1:10.4.20.21:6789/0] mon.kube-cy4-kube001&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 storage class로 사용할 &quot;kubernetes&quot;이름의 pool을 생성하며, kubernetes pool 인증에 사용할 kubernetes유저를 생성합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ~]# ceph osd pool create kubernetes 64 64
pool 'kubernetes' created
[root@kube-cy4-kube001 ~]# rbd pool init kubernetes
[root@kube-cy4-kube001 ~]# ceph auth get-or-create client.kubernetes mon 'profile rbd' osd 'profile rbd pool=kubernetes'
[client.kubernetes]
	key = AQBMeiVf1CKrHBAAYeIVScZlRiDo6D58xvPM4Q==&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 ceph-csi 프로젝트를 클론 받는다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ~]# cd /home/deploy/
[root@kube-cy4-kube001 deploy]# git clone https://github.com/ceph/ceph-csi.git ; cd ceph-csi/&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 csi-config-map에서는 앞에서 확인한 fsid와 초기 ceph구성시 monitor로 지정한 노드의 public network 대역의 아이피로 수정 한뒤 configmap을 적용합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ceph-csi]# vi deploy/rbd/kubernetes/csi-config-map.yaml 
---
apiVersion: v1
kind: ConfigMap
data:
  config.json: |-
    [
      {
##### fsid 
        &quot;clusterID&quot;: &quot;f9b17cb6-b38c-455b-b10d-5c44d7bcc36b&quot;,
        &quot;monitors&quot;: [
##### Monitor 호스트의 아이피
          &quot;10.4.20.21:6789&quot;
        ]
      }
    ]
metadata:
  name: ceph-csi-config
[root@kube-cy4-kube001 ceph-csi]# kubectl  create -f deploy/rbd/kubernetes/csi-config-map.yaml&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 secret에는 앞에서 생성한 pool에 인증하기 위한 userkey와 id를 추가 한뒤 secret을 생성 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ceph-csi]# vi examples/rbd/secret.yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: csi-rbd-secret
  namespace: default
stringData:
  # Key values correspond to a user name and its key, as defined in the
  # ceph cluster. User ID should have required access to the 'pool'
  # specified in the storage class
  #userID: &amp;lt;plaintext ID&amp;gt;
  userID: kubernetes
  #userKey: &amp;lt;Ceph auth key corresponding to ID above&amp;gt;
  userKey: AQBMeiVf1CKrHBAAYeIVScZlRiDo6D58xvPM4Q==

  # Encryption passphrase
  encryptionPassphrase: test_passphrase

[root@kube-cy4-kube001 ceph-csi]# kubectl  create -f  examples/rbd/secret.yaml&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 pool은 앞서 생성한 pool의 이름으로, clusterID는 ceph fsid를 입력합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ceph-csi]# vi  examples/rbd/storageclass.yaml
...

   #clusterID: &amp;lt;cluster-id&amp;gt;
   clusterID: f9b17cb6-b38c-455b-b10d-5c44d7bcc36b
   # If you want to use erasure coded pool with RBD, you need to create
   # two pools. one erasure coded and one replicated.
   # You need to specify the replicated pool here in the `pool` parameter, it is
   # used for the metadata of the images.
   # The erasure coded pool must be set as the `dataPool` parameter below.
   # dataPool: ec-data-pool
   #pool: rbd
   pool: kubernetes
...
[root@kube-cy4-kube001 ceph-csi]# kubectl create -f examples/rbd/storageclass.yaml&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 ceph-csi가 vault를 이용한 키관리를 하기 때문에 해당부분을 적용합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ceph-csi]# kubectl create -f examples/kms/vault/kms-config.yaml&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 이제 적용한 내용으로 plugin을 배포 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ceph-csi]# cd examples/rbd/
[root@kube-cy4-kube001 rbd]# ./plugin-deploy.sh&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 정상적으로 배포가 완료 되었습니다면 아래와 같이 pod를 확인할 수 있으며, storage class를 이용하여 pvc를 정상적으로 생성할 수 있습니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 rbd]# kubectl  get pod
NAME                                        READY   STATUS    RESTARTS   AGE
csi-rbdplugin-2m68m                         3/3     Running   0          19s
csi-rbdplugin-8xfpd                         3/3     Running   0          19s
csi-rbdplugin-provisioner-b77dfc64c-469b6   6/6     Running   0          20s
csi-rbdplugin-provisioner-b77dfc64c-lwgg9   6/6     Running   0          20s
csi-rbdplugin-provisioner-b77dfc64c-wnxkt   6/6     Running   0          20s
csi-rbdplugin-r9v28                         3/3     Running   0          19s


[root@kube-cy4-kube001 rbd]# kubectl  get sc
NAME         PROVISIONER        RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE
csi-rbd-sc   rbd.csi.ceph.com   Delete          Immediate           true                   79s

[root@kube-cy4-kube001 rbd]# cd /home/deploy/ceph-csi/
[root@kube-cy4-kube001 ceph-csi]# kubectl create -f examples/rbd/pvc.yaml
[root@kube-cy4-kube001 ceph-csi]# kubectl  get pvc
NAME      STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE
rbd-pvc   Bound    pvc-a33aeeec-e51a-463a-a708-f6ede4dbbc8a   1Gi        RWO            csi-rbd-sc     3s&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 ceph cluster에서 rbd명령을 이용하여 해당 이미지를 확인할 수 있습니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ceph-csi]# rbd ls -p kubernetes
csi-vol-91ae5b24-d477-11ea-8fdb-1a270cdb0b8f&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;openstackhelm을이용한kubernetes환경에서openstack배포-DeployOpenstackHelm/Helminfra&quot;&gt;
 Deploy Openstack Helm/Helm infra
&lt;/h2&gt;
&lt;p&gt;
 openstack helm,helm infra배포를 하기전 배포를 진행하는 노드에서 필요한 패키지를 설치 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 ~]# yum install git jq python2-pip gcc python-devel -y&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 openstack helm,helm infra 프로젝트를 clone합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 deploy]# git clone https://opendev.org/openstack/openstack-helm.git
[root@kube-cy4-kube001 deploy]# git clone https://opendev.org/openstack/openstack-helm-infra.git&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 각 프로젝트에서 make all 명령을 수행합니다. 수행이 완료되면 앞서 생성한 local helm repository에 각 차트들이 업로드 됩니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 deploy]# cd openstack-helm ; make all
[root@kube-cy4-kube001 openstack-helm]# cd ../openstack-helm-infra ; make all

[root@kube-cy4-kube001 openstack-helm-infra]# helm search
NAME                                  	CHART VERSION	APP VERSION	DESCRIPTION
local/aodh                            	0.1.0        	           	Openstack-Helm Aodh
local/barbican                        	0.1.0        	           	OpenStack-Helm Barbican
local/ca-issuer                       	0.1.0        	1.0        	Certificate Issuer chart for OSH
local/calico                          	0.1.0        	           	OpenStack-Helm Calico
local/ceilometer                      	0.1.0        	           	OpenStack-Helm Ceilometer
local/ceph-client                     	0.1.0        	           	OpenStack-Helm Ceph Client
...&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 배포 전 OSH_INFRA_PATH 환경변수에 openstack-helm-infra 프로젝트의 경로를 선언해준다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm-infra]# cd /home/deploy/openstack-helm
[root@kube-cy4-kube001 openstack-helm-infra]# export OSH_INFRA_PATH=&quot;/home/deploy/openstack-helm-infra&quot;&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 각 노드에 대한 label을 지정합니다. 002~4 노드는 control plane의 역할을 할것입니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]# kubectl  get nodes
NAME               STATUS   ROLES    AGE   VERSION
kube-cy4-kube001   Ready    master   15h   v1.18.6
kube-cy4-kube002   Ready    &amp;lt;none&amp;gt;   15h   v1.18.6
kube-cy4-kube003   Ready    &amp;lt;none&amp;gt;   15h   v1.18.6
kube-cy4-kube004   Ready    &amp;lt;none&amp;gt;   15h   v1.18.6

[root@kube-cy4-kube001 openstack-helm]# kubectl label node  kube-cy4-kube002 openstack-control-plane=enabled

[root@kube-cy4-kube001 openstack-helm]# kubectl label node  kube-cy4-kube003 openstack-control-plane=enabled

[root@kube-cy4-kube001 openstack-helm]# kubectl label node  kube-cy4-kube004 openstack-control-plane=enabled&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&quot;openstackhelm을이용한kubernetes환경에서openstack배포-1.ingress&quot;&gt;
 1. ingress
&lt;/h3&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 ingress는 openstack component 간의 통신시 도메인 기반으로 통신시 사용 됩니다. 기본 chart의 value에 override하여 helm chart를 배포하기 위하여  배포전 value파일을 만들어 변경사항만 추가하여 배포하도록합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]# tee /tmp/ingress-kube-system.yaml &amp;lt;&amp;lt; EOF
pod:
  replicas:
    error_page: 2
deployment:
  mode: cluster
  type: DaemonSet
network:
  host_namespace: true
EOF&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 kube-system namespace에 ingress 차트를 배포합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]#  helm upgrade --install ingress-kube-system ${OSH_INFRA_PATH}/ingress --namespace=kube-system --values=/tmp/ingress-kube-system.yaml
[root@kube-cy4-kube001 openstack-helm]# ./tools/deployment/common/wait-for-pods.sh kube-system&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 openstack namespace에 ingress를 배포합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]#  tee /tmp/ingress-openstack.yaml &amp;lt;&amp;lt; EOF
pod:
  replicas:
    ingress: 2
    error_page: 2
EOF

[root@kube-cy4-kube001 openstack-helm]#  helm upgrade --install ingress-openstack ${OSH_INFRA_PATH}/ingress --namespace=openstack --values=/tmp/ingress-openstack.yaml

[root@kube-cy4-kube001 openstack-helm]#  ./tools/deployment/common/wait-for-pods.sh openstack&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;h3 class=&quot;auto-cursor-target&quot; id=&quot;openstackhelm을이용한kubernetes환경에서openstack배포-2.MariaDB&quot;&gt;
 2. MariaDB
&lt;/h3&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 MariaDB 차트를 배포합니다. 이때, storage class의 이름을 csi-rbd-sc로 앞서 생성한  storage class이름으로 변경합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]# tee /tmp/mariadb.yaml &amp;lt;&amp;lt; EOF
pod:
  replicas:
    server: 3
    ingress: 3
volume:
  class_name: csi-rbd-sc
  size: 5Gi
EOF
[root@kube-cy4-kube001 openstack-helm]#  helm upgrade --install mariadb ${OSH_INFRA_PATH}/mariadb --namespace=openstack --values=/tmp/mariadb.yaml

[root@kube-cy4-kube001 openstack-helm]# ./tools/deployment/common/wait-for-pods.sh openstack&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;h3 class=&quot;auto-cursor-target&quot; id=&quot;openstackhelm을이용한kubernetes환경에서openstack배포-3.RabbitMQ&quot;&gt;
 3. RabbitMQ
&lt;/h3&gt;
&lt;p&gt;
 rabbitmq도 mariadb와 동일하게 배포 storage class이름을 수정하여 배포합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;
[root@kube-cy4-kube001 openstack-helm]# tee  /tmp/rabbitmq.yaml &amp;lt;&amp;lt; EOF
volume:
  size: 10Gi
  class_name: csi-rbd-sc

[root@kube-cy4-kube001 openstack-helm]#  helm upgrade --install rabbitmq ${OSH_INFRA_PATH}/rabbitmq --namespace=openstack --values=/tmp/rabbitmq.yaml

[root@kube-cy4-kube001 openstack-helm]# ./tools/deployment/common/wait-for-pods.sh openstack&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;h3 class=&quot;auto-cursor-target&quot; id=&quot;openstackhelm을이용한kubernetes환경에서openstack배포-4.Memcached&quot;&gt;
 4. Memcached
&lt;/h3&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 memcached는 사용할 pod selector를 지정하여 value 파일을 생성뒤 배포합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]# tee /tmp/memcached.yaml &amp;lt;&amp;lt;EOF
manifests:
  network_policy: true
network_policy:
  memcached:
    ingress:
      - from:
        - podSelector:
            matchLabels:
              application: keystone
        - podSelector:
            matchLabels:
              application: heat
        - podSelector:
            matchLabels:
              application: glance
        - podSelector:
            matchLabels:
              application: cinder
        - podSelector:
            matchLabels:
              application: horizon
        - podSelector:
            matchLabels:
              application: nova
        - podSelector:
            matchLabels:
              application: neutron
        ports:
        - protocol: TCP
          port: 11211
EOF
[root@kube-cy4-kube001 openstack-helm]#  helm upgrade --install memcached ${OSH_INFRA_PATH}/memcached --namespace=openstack --values=/tmp/memcached.yaml

[root@kube-cy4-kube001 openstack-helm]# ./tools/deployment/common/wait-for-pods.sh openstack&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;h3 class=&quot;auto-cursor-target&quot; id=&quot;openstackhelm을이용한kubernetes환경에서openstack배포-5.Keystone&quot;&gt;
 5. Keystone
&lt;/h3&gt;
&lt;p&gt;
 keystone도 동일한 방법으로 배포합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]# tee /tmp/keystone.yaml &amp;lt;&amp;lt; EOF
pod:
  replicas:
    api: 2
EOF
[root@kube-cy4-kube001 openstack-helm]#  helm upgrade --install keystone ./keystone --namespace=openstack  --values=/tmp/keystone.yaml

[root@kube-cy4-kube001 openstack-helm]# ./tools/deployment/common/wait-for-pods.sh openstack&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 openstack 인증정보를 파일로 작성하고 openstack client 컨테이너를 이용하여 keystone이 정상적으로 작동하는지 확인합니다.
&lt;/p&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 client는 host 에 직접 설치하지 않고 아래 방법과 같이 컨테이너를 이용하여 사용합니다. keystone의 ingress도메인은 호스트파일에 worker로 사용되는 노드의 아이피로 설정합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm-infra]# mkdir -p /etc/openstack
[root@kube-cy4-kube001 openstack-helm-infra]# tee /etc/openstack/openrc.env &amp;lt;&amp;lt; EOF
OS_AUTH_URL=http://keystone.openstack.svc.cluster.local:80/v3
OS_IDENTITY_API_VERSION=3
OS_IMAGE_API_VERSION=2
OS_PROJECT_DOMAIN_NAME=default
OS_USER_DOMAIN_NAME=default
OS_PROJECT_NAME=admin
OS_USERNAME=admin
OS_PASSWORD=password
EOF

[root@kube-cy4-kube001 openstack-helm]# echo &quot;10.4.10.22 keystone.openstack.svc.cluster.local&quot; &amp;gt;&amp;gt; /etc/hosts

[root@kube-cy4-kube001 openstack-helm-infra]# docker run -it --network host -v /images:/images --env-file /etc/openstack/openrc.env docker.io/sktdev/openstackclient:stein bash


openstackclient@kube-cy4-kube001:~$ openstack endpoint list
+----------------------------------+-----------+--------------+--------------+---------+-----------+---------------------------------------------------------+
| ID                               | Region    | Service Name | Service Type | Enabled | Interface | URL                                                     |
+----------------------------------+-----------+--------------+--------------+---------+-----------+---------------------------------------------------------+
| 0b33f6a61fdb4860b49ab2278e6ff50c | RegionOne | keystone     | identity     | True    | internal  | http://keystone-api.openstack.svc.cluster.local:5000/v3 |
| 24103bb6eacb403facc31812019e6fbf | RegionOne | keystone     | identity     | True    | public    | http://keystone.openstack.svc.cluster.local/v3          |
| 52edf255656c421f978bea28fd22f023 | RegionOne | keystone     | identity     | True    | admin     | http://keystone.openstack.svc.cluster.local/v3          |
+----------------------------------+-----------+--------------+--------------+---------+-----------+---------------------------------------------------------+&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;h3 class=&quot;auto-cursor-target&quot; id=&quot;openstackhelm을이용한kubernetes환경에서openstack배포-6.Glance&quot;&gt;
 6. Glance
&lt;/h3&gt;
&lt;p&gt;
 glance는 ceph의 rbd pool을 자동적으로 생성하여 사용 됩니다. 그러기 위해서는 glance에서  ceph cluster에 접속할 정보가 있는  ceph.conf 파일을 configmap형태로 필요하기 때문에 config map을 생성합니다. 이때, ceph의 monitor버전이 nautilus버전 부터 v1,v2를 선택적으로 사용할 수 있도록 리스트 형태로 생성되지만 glance에서 해당 버전을 인식하지 못하기 때문에 아래와 같이 버전을 v1만 명시 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]# vi /etc/ceph/ceph.conf
...
# Please do not change this file directly since it is managed by Ansible and will be overwritten
[global]
cluster network = 10.4.30.0/24
fsid = f9b17cb6-b38c-455b-b10d-5c44d7bcc36b
#mon host = [v2:10.4.20.21:3300,v1:10.4.20.21:6789]
mon host = 10.4.20.21:6789
...

[root@kube-cy4-kube001 openstack-helm]# kubectl create configmap ceph-etc -n openstack --from-file=/etc/ceph/ceph.conf

&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 ceph의 admin 인증정보가 필요하기 때문에 admin keyring정보를 추가한뒤 glance를 배포 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]# ceph auth get client.admin | grep key
exported keyring for client.admin
	key = AQBgGCVfjOayKBAAT4iPx2CSDEMU60aSQtgBXg==
[root@kube-cy4-kube001 openstack-helm]# tee /tmp/glance.yaml  &amp;lt;&amp;lt; EOF
storage: rbd
pod:
  replicas:
    api: 2
    registry: 2
conf:
  ceph:
    enabled: true
    admin_keyring: AQBgGCVfjOayKBAAT4iPx2CSDEMU60aSQtgBXg==
  glance:
    DEFAULT:
      enable_v1_api: true
      enable_v2_registry: true
EOF

[root@kube-cy4-kube001 openstack-helm]#  helm upgrade --install glance ./glance --namespace=openstack --values=/tmp/glance.yaml

[root@kube-cy4-kube001 openstack-helm]# ./tools/deployment/common/wait-for-pods.sh openstack&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 정상적으로 pod가 배포 된것을 확인 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]#kubectl  get pod -n openstack  | grep glance                       

glance-api-ff94f9577-ph6fx                     1/1     Running     0          2m50s
glance-api-ff94f9577-scs69                     1/1     Running     0          2m50s
glance-bootstrap-csjd4                         0/1     Completed   0          2m49s
glance-db-init-8lfws                           0/1     Completed   0          2m50s
glance-db-sync-24t8f                           0/1     Completed   0          2m50s
glance-ks-endpoints-fjczv                      0/3     Completed   0          2m50s
glance-ks-service-d59gp                        0/1     Completed   0          2m50s
glance-ks-user-q2jv6                           0/1     Completed   0          2m50s
glance-metadefs-load-tgtwn                     0/1     Completed   0          2m50s
glance-rabbit-init-sq4k4                       0/1     Completed   0          2m50s
glance-storage-init-d68nf                      0/1     Completed   0          2m50s&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 glance ingress 도메인을 hosts파일에 추가후 openstack client에 접속하면 bootstrap과정에서 업로드된 cirros이미지를 확인할 수 있습니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]# echo &quot;10.4.10.22 glance.openstack.svc.cluster.local&quot; &amp;gt;&amp;gt; /etc/hosts
[root@kube-cy4-kube001 openstack-helm]#  docker run -it --network host -v /images:/images --env-file /etc/openstack/openrc.env docker.io/sktdev/openstackclient:stein bash
openstackclient@kube-cy4-kube001:~$ openstack image list
+--------------------------------------+---------------------+--------+
| ID                                   | Name                | Status |
+--------------------------------------+---------------------+--------+
| 8869f634-9f67-4990-9e9a-84c110d816f4 | Cirros 0.3.5 64-bit | active |
+--------------------------------------+---------------------+--------+
openstackclient@kube-cy4-kube001:~$&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;h3 class=&quot;auto-cursor-target&quot; id=&quot;openstackhelm을이용한kubernetes환경에서openstack배포-7.Cinder&quot;&gt;
 7. Cinder
&lt;/h3&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 cinder는 glance와 동일하게 ceph의 rbd pool을 사용하기 때문에 admin keyring정보를 추가한뒤 배포 합니다.
&lt;/p&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 기본적으로 cinder volume과 cinder volume backup 두가지 서비스를 위한 pool을 각각 ceph의 pool로 자동 생성합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]# ceph auth get  client.admin | grep key
exported keyring for client.admin
	key = AQBgGCVfjOayKBAAT4iPx2CSDEMU60aSQtgBXg==

[root@kube-cy4-kube001 openstack-helm]# tee  /tmp/cinder.yaml &amp;lt;&amp;lt; EOF
pod:
  replicas:
    api: 2
    volume: 1
    scheduler: 1
    backup: 1
conf:
  ceph:
    admin_keyring: AQBgGCVfjOayKBAAT4iPx2CSDEMU60aSQtgBXg==
    enabled: true
  cinder:
    DEFAULT:
      backup_driver: cinder.backup.drivers.ceph.CephBackupDriver
EOF


[root@kube-cy4-kube001 openstack-helm]#  helm upgrade --install cinder ./cinder --namespace=openstack --values=/tmp/cinder.yaml

[root@kube-cy4-kube001 openstack-helm]# ./tools/deployment/common/wait-for-pods.sh openstack&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 완료되면 cinder의 pod를 확인할 수 있습니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]# kubectl  get pod -n openstack | grep cinder
cinder-api-64f59cbcb-5jjzq                     1/1     Running     0          112s
cinder-api-64f59cbcb-jsjjp                     1/1     Running     0          112s
cinder-backup-6c47fff559-2w2xm                 1/1     Running     0          112s
cinder-backup-storage-init-cjlb4               0/1     Completed   0          112s
cinder-bootstrap-h7bbj                         0/1     Completed   0          112s
cinder-create-internal-tenant-52s8p            0/1     Completed   0          112s
cinder-db-init-6gpws                           0/1     Completed   0          113s
cinder-db-sync-xt9kq                           0/1     Completed   0          113s
cinder-ks-endpoints-mqb9c                      0/9     Completed   0          112s
cinder-ks-service-d4bdf                        0/3     Completed   0          113s
cinder-ks-user-jx8wn                           0/1     Completed   0          113s
cinder-rabbit-init-x7659                       0/1     Completed   0          113s
cinder-scheduler-f8b98c7b4-p42jm               1/1     Running     0          113s
cinder-storage-init-6rz8c                      0/1     Completed   0          113s
cinder-volume-5d67df7bdd-sq2hx                 1/1     Running     0          112s&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 cinder ingress 도메인 정보를 hosts파일에 추가후 openstack client를 통하여 볼륨 서비스 확인 및 테스트 볼륨을 생성하여 확인 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]# echo &quot;10.4.10.22 cinder.openstack.svc.cluster.local&quot; &amp;gt;&amp;gt; /etc/hosts
[root@kube-cy4-kube001 openstack-helm]#  docker run -it --network host -v /images:/images --env-file /etc/openstack/openrc.env docker.io/sktdev/openstackclient:stein bash
openstackclient@kube-cy4-kube001:~$ openstack voluem lki

openstackclient@kube-cy4-kube001:~$ openstack volume service list
+------------------+---------------------------+------+---------+-------+----------------------------+
| Binary           | Host                      | Zone | Status  | State | Updated At                 |
+------------------+---------------------------+------+---------+-------+----------------------------+
| cinder-scheduler | cinder-volume-worker      | nova | enabled | up    | 2020-08-02T05:56:41.000000 |
| cinder-backup    | cinder-volume-worker      | nova | enabled | up    | 2020-08-02T05:56:40.000000 |
| cinder-volume    | cinder-volume-worker@rbd1 | nova | enabled | up    | 2020-08-02T05:56:41.000000 |
+------------------+---------------------------+------+---------+-------+----------------------------+
openstackclient@kube-cy4-kube001:~$ openstack volume create --size 1 test

openstackclient@kube-cy4-kube001:~$ cinder list
+--------------------------------------+-----------+------+------+-------------+----------+-------------+
| ID                                   | Status    | Name | Size | Volume Type | Bootable | Attached to |
+--------------------------------------+-----------+------+------+-------------+----------+-------------+
| d47b5120-3d57-465f-aeb2-c655aceb565a | available | test | 1    | rbd1        | false    |             |
+--------------------------------------+-----------+------+------+-------------+----------+-------------+&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;h3 class=&quot;auto-cursor-target&quot; id=&quot;openstackhelm을이용한kubernetes환경에서openstack배포-8.Openvswitch&quot;&gt;
 8. Openvswitch
&lt;/h3&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 openvswitch 차트는 daemonset으로 &quot;openvswitch=enabled &quot; label이 설정된 노드에만 배포 됩니다. worker노드에 openvswitch label을 설정 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]# kubectl label node kube-cy4-kube002 openvswitch=enabled
node/kube-cy4-kube002 labeled
[root@kube-cy4-kube001 openstack-helm]# kubectl label node kube-cy4-kube003 openvswitch=enabled
node/kube-cy4-kube003 labeled
[root@kube-cy4-kube001 openstack-helm]# kubectl label node kube-cy4-kube004 openvswitch=enabled
node/kube-cy4-kube004 labeled&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 openvswitch 차트를 배포 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt; [root@kube-cy4-kube001 openstack-helm]# helm upgrade --install openvswitch ${OSH_INFRA_PATH}/openvswitch --namespace=openstack&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 배포가 완료된 openvswitch pod를 확인 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]# kubectl  get pod -n openstack  | grep openv
openvswitch-db-8llk2                           1/1     Running     0          3m29s
openvswitch-db-gw9w5                           1/1     Running     0          3m33s
openvswitch-db-q86zr                           1/1     Running     0          3m37s
openvswitch-vswitchd-2chg8                     1/1     Running     0          3m37s
openvswitch-vswitchd-lvntw                     1/1     Running     0          3m29s
openvswitch-vswitchd-vdwmx                     1/1     Running     0          3m33s&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;h3 class=&quot;auto-cursor-target&quot; id=&quot;openstackhelm을이용한kubernetes환경에서openstack배포-9.Libvirt,Neutron,Nova&quot;&gt;
 9. Libvirt,Neutron,Nova
&lt;/h3&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 Libvirt,Neutron,Nova 차트는 서로 의존성이 있기 때문에 모두 정상적으로 동작해야 차트 배포가 완료 됩니다.
&lt;/p&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 각 노드에 label을 지정합니다.003,004노드는 compute노드로 사용 됩니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]# kubectl label node  kube-cy4-kube002 openstack-helm-node-class=primary
node/kube-cy4-kube002 labeled
[root@kube-cy4-kube001 openstack-helm]# kubectl label node  kube-cy4-kube003 openstack-compute-node=enabled
node/kube-cy4-kube003 labeled
[root@kube-cy4-kube001 openstack-helm]# kubectl label node  kube-cy4-kube004 openstack-compute-node=enabled
node/kube-cy4-kube004 labeled&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 ceph admin과 cinder 유저 인증 정보를 추가한뒤 libvirt 차트를 배포 합니다. 아직 다른 component가 정상적으로 안올라와서 pod가 생성되지 않는다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]# ceph auth get client.admin | grep key
exported keyring for client.admin
	key = AQBgGCVfjOayKBAAT4iPx2CSDEMU60aSQtgBXg==

[root@kube-cy4-kube001 openstack-helm]# ceph auth get client.cinder | grep key
exported keyring for client.cinder
	key = AQDHVCZfithVDBAALjJxP9UZob3Y0IC3KhGsrA==
[root@kube-cy4-kube001 openstack-helm]# tee /tmp/libvirt.yaml &amp;lt;&amp;lt; EOF
network:
  backend:
    - openvswitch
conf:
  ceph:
    enabled: true
    admin_keyring: AQBgGCVfjOayKBAAT4iPx2CSDEMU60aSQtgBXg==
    cinder:
      keyring: AQDHVCZfithVDBAALjJxP9UZob3Y0IC3KhGsrA==
      secret_uuid: 582393ff-9a5c-4a2e-ae0d-86ec18c36afc


EOF

[root@kube-cy4-kube001 openstack-helm]# helm upgrade --install libvirt ${OSH_INFRA_PATH}/libvirt --namespace=openstack --values=/tmp/libvirt.yaml

[root@kube-cy4-kube001 openstack-helm]# kubectl  get pod -n openstack | grep libvirt
libvirt-libvirt-default-4vxp5                  0/1     Init:0/3    0          27s
libvirt-libvirt-default-5spwb                  0/1     Init:0/3    0          27s&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 nova에서 ceph의 admin정보와 cinder 인정 정보를 차트에 추가 해주며 , virt type을 qemu로 설정 하여 배포 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]# ceph auth get client.admin | grep key
exported keyring for client.admin
	key = AQBgGCVfjOayKBAAT4iPx2CSDEMU60aSQtgBXg==

[root@kube-cy4-kube001 openstack-helm]# ceph auth get client.cinder | grep key
exported keyring for client.cinder
	key = AQDHVCZfithVDBAALjJxP9UZob3Y0IC3KhGsrA==

[root@kube-cy4-kube001 openstack-helm]# tee /tmp/nova.yaml &amp;lt;&amp;lt; EOF
labels:
  api_metadata:
    node_selector_key: openstack-helm-node-class
    node_selector_value: primary
conf:
  ceph:
    enabled: true
    admin_keyring: AQBgGCVfjOayKBAAT4iPx2CSDEMU60aSQtgBXg==
    cinder:
      user: cinder
      keyring: AQDHVCZfithVDBAALjJxP9UZob3Y0IC3KhGsrA==
    nova:
      libvirt:
        images_type: rbd
        rbd_user: cinder
        rbd_secret_uuid: 582393ff-9a5c-4a2e-ae0d-86ec18c36afc
        virt_type: qemu
pod:
  replicas:
    api_metadata: 1
    placement: 2
    osapi: 2
    conductor: 2
    consoleauth: 2
    scheduler: 1
    novncproxy: 1
EOF

[root@kube-cy4-kube001 openstack-helm]#  helm upgrade --install nova ./nova --namespace=openstack --values=/tmp/nova.yaml&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 앞서 이야기 한것 처럼 compute노드들의  eth3인터페이스는 tanent 네트워크로 사용 하기 때문에 명시 하며, eth4 인터페이스는 자동으로 ovs 브릿지를 만들기 위해서 auto_bridge_add 변수에 추가 합니다.br-ex로 만든 인터페이스는 provider 이름의 flat network로 floating ip를 사용하기 위해서 생성 됩니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]# tee /tmp/neutron.yaml &amp;lt;&amp;lt; EOF
network:
  interface:
    tunnel: eth3
pod:
  replicas:
    server: 1
conf:
  auto_bridge_add:
    br-ex: eth4
  neutron:
    DEFAULT:
      l3_ha: False
      max_l3_agents_per_router: 1
      l3_ha_network_type: vxlan
      dhcp_agents_per_network: 1
  plugins:
    ml2_conf:
      ml2_type_flat:
        flat_networks: provider
    openvswitch_agent:
      agent:
        tunnel_types: vxlan
        l2_population: True
        arp_responder: True
      ovs:
        bridge_mappings: provider:br-ex

EOF

[root@kube-cy4-kube001 openstack-helm]#  helm upgrade --install neutron ./neutron --namespace=openstack --values=/tmp/neutron.yaml&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 모든 pod와 서비스 job들이 종료 될때 까지 스크립트를 통하여 대기 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]# ./tools/deployment/common/wait-for-pods.sh openstack&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 정상적으로 종료 되었습니다면  client에 접속 하여  nova, neutron서비스를 확인 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]# echo &quot;10.4.10.22 nova.openstack.svc.cluster.local&quot; &amp;gt;&amp;gt; /etc/hosts
10.4.10.22 nova.openstack.svc.cluster.local /etc/hosts
[root@kube-cy4-kube001 openstack-helm]# echo &quot;10.4.10.22 neutron.openstack.svc.cluster.local&quot; &amp;gt;&amp;gt; /etc/hosts

[root@kube-cy4-kube001 openstack-helm]#  docker run -it --network host -v /images:/images --env-file /etc/openstack/openrc.env docker.io/sktdev/openstackclient:stein bash


openstackclient@kube-cy4-kube001:~$ openstack compute service list
+----+------------------+-----------------------------------+----------+---------+-------+----------------------------+
| ID | Binary           | Host                              | Zone     | Status  | State | Updated At                 |
+----+------------------+-----------------------------------+----------+---------+-------+----------------------------+
| 34 | nova-consoleauth | nova-consoleauth-5468477744-qlr5d | internal | enabled | up    | 2020-08-02T07:10:37.000000 |
| 37 | nova-consoleauth | nova-consoleauth-5468477744-d27wr | internal | enabled | up    | 2020-08-02T07:10:37.000000 |
| 40 | nova-conductor   | nova-conductor-54f649d6bd-nznqv   | internal | enabled | up    | 2020-08-02T07:10:38.000000 |
| 43 | nova-scheduler   | nova-scheduler-c5f45fb88-whbr5    | internal | enabled | up    | 2020-08-02T07:10:29.000000 |
| 58 | nova-conductor   | nova-conductor-54f649d6bd-9w5hg   | internal | enabled | up    | 2020-08-02T07:10:29.000000 |
| 61 | nova-compute     | kube-cy4-kube004                  | nova     | enabled | up    | 2020-08-02T07:10:38.000000 |
| 64 | nova-compute     | kube-cy4-kube003                  | nova     | enabled | up    | 2020-08-02T07:10:37.000000 |
+----+------------------+-----------------------------------+----------+---------+-------+----------------------------+
openstackclient@kube-cy4-kube001:~$ openstack network agent list
+--------------------------------------+--------------------+------------------+-------------------+-------+-------+---------------------------+
| ID                                   | Agent Type         | Host             | Availability Zone | Alive | State | Binary                    |
+--------------------------------------+--------------------+------------------+-------------------+-------+-------+---------------------------+
| 261a37c4-58fc-4512-aafc-81bba3519003 | Metadata agent     | kube-cy4-kube004 | None              | :-)   | UP    | neutron-metadata-agent    |
| 2f015c71-9243-4774-bb2a-5d0d070ef4f3 | Open vSwitch agent | kube-cy4-kube004 | None              | :-)   | UP    | neutron-openvswitch-agent |
| 39f2dcf4-fbf3-46cd-b712-13d808b38dd6 | L3 agent           | kube-cy4-kube002 | nova              | :-)   | UP    | neutron-l3-agent          |
| 4a1266f9-0182-462b-9e8f-3424337483f7 | DHCP agent         | kube-cy4-kube002 | nova              | :-)   | UP    | neutron-dhcp-agent        |
| 4e1bac9f-577a-48d2-b0f7-f981cad85440 | DHCP agent         | kube-cy4-kube003 | nova              | :-)   | UP    | neutron-dhcp-agent        |
| 675ee208-2f49-4b58-9540-8de865fb3865 | Open vSwitch agent | kube-cy4-kube003 | None              | :-)   | UP    | neutron-openvswitch-agent |
| 7d6056bf-9dbb-4e55-99b4-84a056042449 | Open vSwitch agent | kube-cy4-kube002 | None              | :-)   | UP    | neutron-openvswitch-agent |
| 8ba71881-7367-4874-a41a-46f8d81cd0c2 | Metadata agent     | kube-cy4-kube003 | None              | :-)   | UP    | neutron-metadata-agent    |
| 97c7da9e-1a12-4cef-bbdf-e4c021b1345d | DHCP agent         | kube-cy4-kube004 | nova              | :-)   | UP    | neutron-dhcp-agent        |
| d0a5085e-d3a4-408c-bab8-a458d32d047b | Metadata agent     | kube-cy4-kube002 | None              | :-)   | UP    | neutron-metadata-agent    |
| d856ab20-547e-481f-857f-50a0b7a87e87 | L3 agent           | kube-cy4-kube003 | nova              | :-)   | UP    | neutron-l3-agent          |
| decd265a-9ea0-41a4-9516-c7467f2d7cad | L3 agent           | kube-cy4-kube004 | nova              | :-)   | UP    | neutron-l3-agent          |
+--------------------------------------+--------------------+------------------+-------------------+-------+-------+---------------------------+&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 openstack client에서  기본 network 생성하고 ,  인스턴스를 생성해봅니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;openstackclient@kube-cy4-kube001:~$ openstack network create --share --external \
--provider-physical-network provider \
--provider-network-type flat provider
   
openstackclient@kube-cy4-kube001:~$ o openstack subnet create --network provider \
--allocation-pool start=192.168.193.210,end=192.168.193.240 \
--dns-nameserver 8.8.4.4 --gateway 192.168.0.1 \
--subnet-range 192.168.0.1/16 provider
	 
openstackclient@kube-cy4-kube001:~$ o openstack network create selfservice
 
openstackclient@kube-cy4-kube001:~$ o openstack subnet create --network selfservice \
--dns-nameserver 8.8.4.4 --gateway 11.11.1.1 \
--subnet-range 11.11.1.0/24 selfservice
 
openstackclient@kube-cy4-kube001:~$ o openstack router create  router
 
openstackclient@kube-cy4-kube001:~$ o neutron router-interface-add router selfservice
 
openstackclient@kube-cy4-kube001:~$ o neutron router-gateway-set router provider

openstackclient@kube-cy4-kube001:~$ openstack network list
+--------------------------------------+-------------+--------------------------------------+
| ID                                   | Name        | Subnets                              |
+--------------------------------------+-------------+--------------------------------------+
| 3e37ecae-fed8-432d-a7ca-0de991623717 | provider    | 360e99c6-5bdc-43e3-8275-3336a0d6ef80 |
| 9364f2bb-58ea-4ce5-a867-308a0115e3ba | selfservice | 69079fee-decb-41d6-9da2-f2cfca4cc9ca |
+--------------------------------------+-------------+--------------------------------------+


openstackclient@kube-cy4-kube001:~$ openstack flavor list
+--------------------------------------+-----------+-------+------+-----------+-------+-----------+
| ID                                   | Name      |   RAM | Disk | Ephemeral | VCPUs | Is Public |
+--------------------------------------+-----------+-------+------+-----------+-------+-----------+
| 0a866d33-ad39-45c7-8461-e90b21d37524 | m1.large  |  8192 |   80 |         0 |     4 | True      |
| 17b234fc-ff37-493e-a96a-02df7e4cf574 | m1.tiny   |   512 |    1 |         0 |     1 | True      |
| 401af6df-2c9a-4771-803d-f847b4c37d33 | m1.medium |  4096 |   40 |         0 |     2 | True      |
| 7ffcb940-fd02-46e9-9d63-9556210b31d1 | m1.xlarge | 16384 |  160 |         0 |     8 | True      |
| fe9146fa-a62c-41c6-a45c-02931fdedc5a | m1.small  |  2048 |   20 |         0 |     1 | True      |
+--------------------------------------+-----------+-------+------+-----------+-------+-----------+
openstackclient@kube-cy4-kube001:~$ openstack security group list
+--------------------------------------+---------+------------------------+----------------------------------+------+
| ID                                   | Name    | Description            | Project                          | Tags |
+--------------------------------------+---------+------------------------+----------------------------------+------+
| 8c210974-5d4c-4a8a-ac62-669846fb7ded | default | Default security group | d24347196d1a42999290eadba5c51151 | []   |
| ad3441b9-eb4e-475a-a979-517ef556936c | default | Default security group |                                  | []   |
+--------------------------------------+---------+------------------------+----------------------------------+------+
openstackclient@kube-cy4-kube001:~$ openstack   security group rule create --ingress --dst-port 22 8c210974-5d4c-4a8a-ac62-669846fb7ded


openstackclient@kube-cy4-kube001:~$ openstack image list
+--------------------------------------+---------------------+--------+
| ID                                   | Name                | Status |
+--------------------------------------+---------------------+--------+
| 8869f634-9f67-4990-9e9a-84c110d816f4 | Cirros 0.3.5 64-bit | active |
+--------------------------------------+---------------------+--------+


openstackclient@kube-cy4-kube001:~$ ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/home/openstackclient/.ssh/id_rsa):
Created directory '/home/openstackclient/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/openstackclient/.ssh/id_rsa.
Your public key has been saved in /home/openstackclient/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:rmKh6dug9CYW0bCIIcuWjSPLhrcD+woRDLYJoPmm8m0 openstackclient@kube-cy4-kube001
The key's randomart image is:
+---[RSA 2048]----+
|=.               |
|Ooo              |
|O*B              |
|=@ o             |
|*.=     S        |
|+B. .  .         |
|==o+ .  .        |
|==*=E  .         |
|++B*o..          |
+----[SHA256]-----+

openstackclient@kube-cy4-kube001:~$ openstack server create  --image 8869f634-9f67-4990-9e9a-84c110d816f4 --security-group 8c210974-5d4c-4a8a-ac62-669846fb7ded --flavor m1.tiny --key-name admin_client_key --network 9364f2bb-58ea-4ce5-a867-308a0115e3ba test-cirros-vm&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 provider network 에서 floating ip 생성뒤 앞서 생성한 인스턴스에 붙이고 ssh를 이용하여 접속 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;openstackclient@kube-cy4-kube001:~$ openstack floating ip create  provider
+---------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Field               | Value                                                                                                                                                                             |
+---------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| created_at          | 2020-08-02T07:19:31Z                                                                                                                                                              |
| description         |                                                                                                                                                                                   |
| dns_domain          | None                                                                                                                                                                              |
| dns_name            | None                                                                                                                                                                              |
| fixed_ip_address    | None                                                                                                                                                                              |
| floating_ip_address | 192.168.193.235                                                                                                                                                                   |
| floating_network_id | 3e37ecae-fed8-432d-a7ca-0de991623717                                                                                                                                              |
| id                  | 7cfd6a27-4bfb-46fa-b32b-2ce5c0c021e5                                                                                                                                              |
| location            | Munch({'cloud': '', 'region_name': '', 'zone': None, 'project': Munch({'id': 'd24347196d1a42999290eadba5c51151', 'name': 'admin', 'domain_id': None, 'domain_name': 'default'})}) |
| name                | 192.168.193.235                                                                                                                                                                   |
| port_details        | None                                                                                                                                                                              |
| port_id             | None                                                                                                                                                                              |
| project_id          | d24347196d1a42999290eadba5c51151                                                                                                                                                  |
| qos_policy_id       | None                                                                                                                                                                              |
| revision_number     | 0                                                                                                                                                                                 |
| router_id           | None                                                                                                                                                                              |
| status              | DOWN                                                                                                                                                                              |
| subnet_id           | None                                                                                                                                                                              |
| tags                | []                                                                                                                                                                                |
| updated_at          | 2020-08-02T07:19:31Z                                                                                                                                                              |
+---------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
openstackclient@kube-cy4-kube001:~$ openstack   server add floating ip test-cirros-vm 192.168.193.235
openstackclient@kube-cy4-kube001:~$ ssh cirros@192.168.193.235
The authenticity of host '192.168.193.235 (192.168.193.235)' can't be established.
RSA key fingerprint is SHA256:45KMfL6+lSzqdN2fLLkd9vvxnfvfUg+h0kZUFF411uY.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '192.168.193.235' (RSA) to the list of known hosts.
$ ip a
1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 16436 qdisc noqueue
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: eth0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1450 qdisc pfifo_fast qlen 1000
    link/ether fa:16:3e:8b:86:9f brd ff:ff:ff:ff:ff:ff
    inet 11.11.1.198/24 brd 11.11.1.255 scope global eth0
    inet6 fe80::f816:3eff:fe8b:869f/64 scope link
       valid_lft forever preferred_lft forever&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;h3 class=&quot;auto-cursor-target&quot; id=&quot;openstackhelm을이용한kubernetes환경에서openstack배포-10.Horizon&quot;&gt;
 10. Horizon
&lt;/h3&gt;
&lt;p&gt;
 horizon 배포전 브라우저를 통하여 접속 하기 위하여 node port설정이 필요 하다. 31000포트로 지정 하여 loca_settings 변수에 필요한 기능만 활성화 한뒤 배포를 합니다.
&lt;/p&gt;
&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Midnight&quot; data-theme=&quot;Midnight&quot;&gt;[root@kube-cy4-kube001 openstack-helm]# tee /tmp/horizon.yaml &amp;lt;&amp;lt; EOF
network:
  node_port:
    enabled: true
    port: 31000
conf:
  horizon:
    local_settings:
      config:
        openstack_neutron_network:
          enable_router: &quot;True&quot;
          enable_quotas: &quot;True&quot;
          enable_ipv6: &quot;False&quot;
          enable_ha_router: &quot;True&quot;
          enable_lb: &quot;True&quot;
          enable_firewall: &quot;False&quot;
          enable_vpn: &quot;False&quot;
          enable_fip_topology_check: &quot;True&quot;
EOF

[root@kube-cy4-kube001 openstack-helm]#  helm upgrade --install horizon ./horizon --namespace=openstack --values=/tmp/horizon.yaml
[root@kube-cy4-kube001 openstack-helm]# ./tools/deployment/common/wait-for-pods.sh openstack&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 배포가 완료되면 ,  http://{worker노드 ip}:31000 를 브라우저를 통하여 접속 확인 합니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97477266/2.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 앞서 생성한 인스턴스를 확인할 수 있습니다.
&lt;/p&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97477266/3.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id=&quot;openstackhelm을이용한kubernetes환경에서openstack배포-참고사이트&quot;&gt;
 참고 사이트
&lt;/h3&gt;
&lt;ul&gt;
 &lt;li&gt;
  &lt;a class=&quot;external-link&quot; href=&quot;https://github.com/ceph/ceph-ansible&quot; rel=&quot;nofollow&quot;&gt;
   https://github.com/ceph/ceph-ansible
  &lt;/a&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;a class=&quot;external-link&quot; href=&quot;https://docs.docker.com/engine/install/centos/&quot; rel=&quot;nofollow&quot;&gt;
   https://docs.docker.com/engine/install/centos
  &lt;/a&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;a class=&quot;external-link&quot; href=&quot;https://docs.openstack.org/openstack-helm/latest/&quot; rel=&quot;nofollow&quot;&gt;
   https://docs.openstack.org/openstack-helm/latest/
  &lt;/a&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;a class=&quot;external-link&quot; href=&quot;https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/&quot; rel=&quot;nofollow&quot;&gt;
   https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
  &lt;/a&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;a class=&quot;external-link&quot; href=&quot;https://docs.projectcalico.org/&quot; rel=&quot;nofollow&quot;&gt;
   https://docs.projectcalico.org/
  &lt;/a&gt;
 &lt;/li&gt;
&lt;/ul&gt;</description>
        <pubDate>Mon, 03 Aug 2020 00:00:00 +0900</pubDate>
        <link>https://tech.osci.kr/2020/08/03/97477266/</link>
        <guid isPermaLink="true">https://tech.osci.kr/2020/08/03/97477266/</guid>
        
        
      </item>
    
      <item>
        <title>[Success Story] How IT team reduce the costs using Atlassian Marketplace App</title>
        <description>&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97475714/0.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h1 id=&quot;id-[SuccessStory]HowITteamreducethecostsusingAtlassianMarketplaceApp-[SuccessStory]HowITteamreducethecostsusingAtlassianMarketplaceApp&quot; style=&quot;text-align: left;&quot;&gt;
 &lt;strong&gt;
  [Success Story] How IT team reduce the costs using Atlassian Marketplace App
 &lt;/strong&gt;
&lt;/h1&gt;
&lt;h2 id=&quot;id-[SuccessStory]HowITteamreducethecostsusingAtlassianMarketplaceApp-MiraeAssetLifeInsurancesavedabout34%ofITcostsusingtheFlexibleUserLicense&quot; style=&quot;text-align: left;&quot;&gt;
 &lt;strong&gt;
  Mirae Asset Life Insurance saved about 34% of IT costs using the Flexible User License
 &lt;/strong&gt;
&lt;/h2&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 The IT team plays an important role in driving the business growth and innovation of the company by quickly responding to the changing organization scales and market environment.
&lt;/p&gt;
&lt;p&gt;
 At the same time, they also consider reducing IT costs by eliminating unnecessary waste from their business.
&lt;/p&gt;
&lt;p&gt;
 Due to COVID-19 Pandemic, the pressure on IT team for more efficient IT costs and budget savings is growing.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;strong&gt;
  Please read our customer story that how Mirae Asset Life Insurance, a leading financial company in Korea, has been able to reduce IT costs by 34% using Atlassian marketplace app - Flexible User License.
 &lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper&quot;&gt;
  &lt;img src=&quot;/assets/images/97475714/1.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 Mirae Asset Life Insurance Co., Ltd. that is major life insurance company in Korea provides retirement design services through diverse insurance products.
&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;
  Company: Mirae Asset Life Insurance Co., Ltd.
 &lt;/li&gt;
 &lt;li&gt;
  Industry: Insurance
 &lt;/li&gt;
 &lt;li&gt;
  Company size: 34.5 trillion (2018)
 &lt;/li&gt;
 &lt;li&gt;
  Atlassian Products: Jira Software, Confluence , Bitbucket, Bamboo
 &lt;/li&gt;
 &lt;li&gt;
  Hosting type: Server
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h3 id=&quot;id-[SuccessStory]HowITteamreducethecostsusingAtlassianMarketplaceApp-Challenge:Workcomplexityandresourcescontinuetogrow&quot; style=&quot;text-align: left;&quot;&gt;
 &lt;strong&gt;
  Challenge : Work complexity and resources continue to grow
 &lt;/strong&gt;
&lt;/h3&gt;
&lt;p&gt;
 Various regulations in the financial industry and changes in the working environment have resulted in continuous increase in the complexity of work and resources under management. Mirae Asset Life Insurance needs a new ways of working, such as Agile and DevOps to improve work efficiency. At the same time, they were also concerned about ways to reduce IT costs. Mirae Asset Life Insurance was using 250 user tier of Jira and Confluence, but the number of users increased to more than 500 due to increment of inquiries.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h3 id=&quot;id-[SuccessStory]HowITteamreducethecostsusingAtlassianMarketplaceApp-Solution:Respondquicklytothechangethenumberofusers&quot; style=&quot;text-align: left;&quot;&gt;
 &lt;strong&gt;
  Solution : Respond quickly to the change the number of users
 &lt;/strong&gt;
&lt;/h3&gt;
&lt;p style=&quot;text-align: left;&quot;&gt;
 &lt;span class=&quot;tlid-translation translation&quot; lang=&quot;en&quot;&gt;
  &lt;span title=&quot;&quot;&gt;
   The cost of purchasing all Atlassian products, including the marketplace app, was expected to increase significantly due to the increase in the number of users
  &lt;/span&gt;
  &lt;span title=&quot;&quot;&gt;
   , but
  &lt;/span&gt;
 &lt;/span&gt;
 &lt;strong&gt;
  Flexible User License
 &lt;/strong&gt;
 solved this issue instead of purchasing the additional user licenses. Mirae Asset Life Insurance has experienced a 34% cost savings. In addition, Flexible User License handles to maintain 250 user license at all times through the scheduler. They don't have to monitor the system, so it has been improved the convenience of administrator.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;strong&gt;
  Flexible User License
 &lt;/strong&gt;
 is an efficient user license management app that solves the license shortage issue. The administrator does not need to manually deactivate the user, and the app setting allows automatically the assignment of the licenses to the unlicensed users when they log back in. So, they can respond quickly to the change the number of users. Flexible User License is a global-enterprise-proven app by our large enterprise clients in areas such as IT, manufacturing and finance.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97475714/2.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h3 id=&quot;id-[SuccessStory]HowITteamreducethecostsusingAtlassianMarketplaceApp-Getstaredwithatrialforyourbusiness&quot;&gt;
 &lt;strong&gt;
  Get stared with a trial for your business
 &lt;/strong&gt;
&lt;/h3&gt;
&lt;ul&gt;
 &lt;li&gt;
  &lt;p class=&quot;fs20 fw300&quot;&gt;
   &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1222216&quot; rel=&quot;nofollow&quot;&gt;
    Flexible User License for Jira
   &lt;/a&gt;
  &lt;/p&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;p class=&quot;fs20 fw300&quot;&gt;
   &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1220252&quot; rel=&quot;nofollow&quot;&gt;
    Flexible User License for Confluence
   &lt;/a&gt;
  &lt;/p&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
 Learn more about Flexible User License, please
 &lt;a class=&quot;external-link&quot; href=&quot;https://osci.kr/en/flex_user.php?utm_source=techblog&amp;amp;utm_medium=posting&amp;amp;utm_campaign=appsforeveryteam&amp;amp;utm_term=July_2020&quot; rel=&quot;nofollow&quot;&gt;
  visit our website
 &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
 Or to see how to set up your own license management, please
 &lt;a class=&quot;external-link&quot; href=&quot;https://www.youtube.com/watch?v=3TkVf6tI49A&quot; rel=&quot;nofollow&quot;&gt;
  see this guide video.
 &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h3 id=&quot;id-[SuccessStory]HowITteamreducethecostsusingAtlassianMarketplaceApp-AboutOpenSourceConsulting...&quot;&gt;
 &lt;strong&gt;
  About Open Source Consulting...
 &lt;/strong&gt;
&lt;/h3&gt;
&lt;p&gt;
 &lt;strong&gt;
  Open Source Consulting Inc.,
 &lt;/strong&gt;
 a platinum partner of Atlassian, has provided  ITSM and DevOps solutions to customers based on our technical experiences in technical/application/system architecture consulting and developments. We also developing and serving the marketplace apps that help customers use Atlassian more efficiently.
&lt;/p&gt;
&lt;p class=&quot;con-title tc&quot; style=&quot;text-align: left;&quot;&gt;
 &lt;span class=&quot;fs30&quot;&gt;
  Open Source Consulting is honored as
 &lt;/span&gt;
 ‘Atlassian Partner of the Year 2019 : Marketing Innovator’ for our outstanding contribution and achievements. This means that implementing the most creative and integrated marketing strategy has contributed to creating customer demand and improving market awareness in Atlassian.
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97475714/3.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id=&quot;id-[SuccessStory]HowITteamreducethecostsusingAtlassianMarketplaceApp-[고객사례]IT팀이AtlassianMarketplaceApp을활용하여비용을절감하는방법&quot;&gt;
 [고객사례] IT팀이 Atlassian Marketplace App을 활용하여 비용을 절감하는 방법
&lt;/h2&gt;
&lt;h3 id=&quot;id-[SuccessStory]HowITteamreducethecostsusingAtlassianMarketplaceApp-FlexibleUserLicense앱을사용해IT비용의약34%를절감한미래에셋생명의사례를확인해보세요!&quot;&gt;
 &lt;strong&gt;
  Flexible User License 앱을 사용해 IT비용의 약 34%를 절감한 미래에셋생명의 사례를 확인해 보세요!
 &lt;/strong&gt;
&lt;/h3&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 기업의 IT부서는 조직이 확장되고 변화하는 시장 환경에 신속하게 대응함으로써 기업의 비즈니스 성장과 혁신을 주도하는 중요한 역할을 하고 있습니다.
&lt;/p&gt;
&lt;p&gt;
 이와 동시에 기업의 불필요한 낭비를 없애 IT비용 절감이라는 미션을 수행해야 합니다.
&lt;/p&gt;
&lt;p&gt;
 최근 코로나 펜데믹 사태에 따라, IT부서에서도 보다 효율적인 IT비용 집행과 예산 절감에 대한 압박이 커지는 상황입니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 이 포스팅에서는 대표적인 생명보험 회사인
 &lt;strong&gt;
  미래에셋생명이 Atlassian Marketplace App - Flexible User License를 활용하여
 &lt;/strong&gt;
 &lt;strong&gt;
  어떻게 IT 비용을 34% 가량 절감할 수 있었는지
 &lt;/strong&gt;
 소개하고자 합니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper&quot;&gt;
  &lt;img src=&quot;/assets/images/97475714/4.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;h3 id=&quot;id-[SuccessStory]HowITteamreducethecostsusingAtlassianMarketplaceApp-Challenge:업무의복잡도및리소스의계속적인증가&quot; style=&quot;text-align: left;&quot;&gt;
 &lt;strong&gt;
  Challenge : 업무의 복잡도 및 리소스의 계속적인 증가
 &lt;/strong&gt;
&lt;/h3&gt;
&lt;p&gt;
 금융권의 각종 규제와 업무 환경의 변화로 업무의 복잡도와 관리 대상 자원이 지속적으로 증가함에 따라, 미래에셋생명은 업무 효율을 개선하기 위한 Agile, DevOps와 같은 새로운 업무 방식이 필요했습니다. 이에 미래에셋생명은 전반적인 요청 관리 프로세스를 통합하는 ITSM 시스템을 아틀라시안 기반으로 새롭게 구축하였습니다. 미래에셋생명은 사용자 수 250명 기준의 Jira와 Confluence 제품을 사용 중이었는데, 점차 문의가 증가하면서 사용자 수도 계속해서 증가하는 상황이었기 때문에 어떻게 IT비용을 줄일 수 있을지에 대한 고민이 있었습니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h3 id=&quot;id-[SuccessStory]HowITteamreducethecostsusingAtlassianMarketplaceApp-Solution:사용자수증감에신속하게대응&quot; style=&quot;text-align: left;&quot;&gt;
 &lt;strong&gt;
  Solution: 사용자 수 증감에 신속하게 대응
 &lt;/strong&gt;
&lt;/h3&gt;
&lt;p style=&quot;text-align: left;&quot;&gt;
 미래에셋생명은 사용자 수가 500명 이상으로 증가함에 따라, 마켓플레이스 앱을 포함한 아틀라시안 전체 제품의 구매 비용이 대폭적으로 증가할 수 있는 상황이었습니다. 하지만 Flexible User License 앱 제품을 도입함으로써 문제를 해결할 수 있었습니다. 미래에셋생명은 라이선스를 추가적으로 구매하지 않고도 사용자 수를 모두 감당할 수 있게 됨으로써, 약 34%의 비용 절감 효과를 누리게 되었습니다.
&lt;/p&gt;
&lt;p style=&quot;text-align: left;&quot;&gt;
 또한 Flexible User License 제품의 스케쥴러 기능을 통해 항상 250명의 유저 라이선스를 유지시킬 수 있습니다. 별도의 모니터링을 하지 않아도 되기 때문에 관리자의 편의성도 향상 시킬 수 있었습니다.
&lt;/p&gt;
&lt;p style=&quot;text-align: left;&quot;&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h3 id=&quot;id-[SuccessStory]HowITteamreducethecostsusingAtlassianMarketplaceApp-FlexibleUserLicense?&quot; style=&quot;text-align: left;&quot;&gt;
 Flexible User License?
&lt;/h3&gt;
&lt;p style=&quot;text-align: left;&quot;&gt;
 &lt;span&gt;
  Flexible User License는 라이선스 그룹의 사용자 수를 유연하게 관리할 수 있는 Atlassian marketplace app입니다. 쉽고 간단한
 &lt;/span&gt;
 &lt;span&gt;
  라이선스 관리를 통해 사용자 증감에 신속하게 대응하고 IT비용을 절감할 수 있습니다. Flexible User license 제품은 사용자 기반의 라이선스 자동 할당 및 삭제 기능을 제공하여,
 &lt;/span&gt;
 &lt;span&gt;
  관리자가 수동으로 사용자를 비활성화할 필요가 없으며 일정 기간 로그인 하지 않은 사용자가 다시 로그인할 때 자동으로 라이선스가 할당됩니다.
 &lt;/span&gt;
 &lt;span&gt;
  IT, 제조, 금융 등 많은 기업들이 Flexible User License 앱을 통해 효율적으로 라이선스 관리를 하고 있습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align: left;&quot;&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97475714/5.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align: left;&quot;&gt;
 &lt;strong&gt;
  지금 바로 Atlassian Marketplace에서 Flexible User License 앱을 무료로 사용해 보세요!
 &lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;
  &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1222216&quot; rel=&quot;nofollow&quot;&gt;
   [Atlassian Marketplace] Flexible User License for Jira
  &lt;/a&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1220252&quot; rel=&quot;nofollow&quot;&gt;
   [Atlassian Marketplace] Flexible User License for Confluence
  &lt;/a&gt;
 &lt;/li&gt;
 &lt;li&gt;
  &lt;span&gt;
   &lt;a class=&quot;external-link&quot; href=&quot;https://osci.kr/page/view.php?m_id=60&amp;amp;utm_source=techblog&amp;amp;utm_medium=posting&amp;amp;utm_campaign=appsforeveryteam&amp;amp;utm_term=July_2020&quot; rel=&quot;nofollow&quot;&gt;
    Flexible User License 제품 홈페이지 방문하기&amp;gt;&amp;gt;
   &lt;/a&gt;
  &lt;/span&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://osci.kr/page/view.php?m_id=60&amp;amp;utm_source=techblog&amp;amp;utm_medium=posting&amp;amp;utm_campaign=appsforeveryteam&amp;amp;utm_term=July_2020&quot; rel=&quot;nofollow&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97475714/6.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/a&gt;
&lt;/p&gt;
&lt;p style=&quot;text-align: left;&quot;&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;</description>
        <pubDate>Tue, 21 Jul 2020 00:00:00 +0900</pubDate>
        <link>https://tech.osci.kr/2020/07/21/97475714/</link>
        <guid isPermaLink="true">https://tech.osci.kr/2020/07/21/97475714/</guid>
        
        <category>atlassian</category>
        
        <category>atlassian-marketplace</category>
        
        <category>atlassian-customer-story</category>
        
        <category>atlassian-app</category>
        
        <category>cost-saving</category>
        
        <category>license-management</category>
        
        <category>atlassian-admin-tool</category>
        
        <category>atlassian-user-license</category>
        
        <category>apps-for-every-team</category>
        
        <category>atlassian-platinum-partner</category>
        
        <category>atlassian-partner-of-the-year</category>
        
        <category>open-source-consulting</category>
        
        
      </item>
    
      <item>
        <title>아틀라시안 마켓플레이스 소개 및 Jira Add-on 추천</title>
        <description>&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97469335/0.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 안녕하세요!
&lt;/p&gt;
&lt;p&gt;
 오픈소스컨설팅의 아틀라시안팀입니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 우리나라의 많은 기업들을 포함해 전세계의 150,000개가 넘는 기업들이 Atlassian의 솔루션을 통해서
&lt;/p&gt;
&lt;p&gt;
 업무 효율성을 개선하고 보다 혁신적인 팀워크를 이루고 있다는 것은 모두 잘 알고 계실 것 같아요.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;strong&gt;
  Jira, Confluence
 &lt;/strong&gt;
 와 같은 협업 및 애자일 도구와
&lt;/p&gt;
&lt;p&gt;
 개발에서 운영, 서비스까지 통합하여 관리할 수 있도록 도와주는
 &lt;strong&gt;
  Jira Service Desk, OpsGenie, Bitbucket
 &lt;/strong&gt;
 등
&lt;/p&gt;
&lt;p&gt;
 Atlassian에서 제공하는 대표적인 제품들만으로도 '팀'을 위한 워크플로우를 개선하고 업무 생산성을 높일 수 있지만,
&lt;/p&gt;
&lt;p&gt;
 Atlassian Marketplace에 올라와 있는 다양한 Add-on(또는 Plugin) 제품들을 통해서 보다 확장된 기능을 구현하고 활용할 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 Atlassian 제품을 사용하고 있지만 좀 더 높은 수준의 커스터마이징과 부가적인 기능을 원하시는 분들,
&lt;/p&gt;
&lt;p&gt;
 또는 Atlassian 솔루션의 도입을 계획하고 있는 분들께서는 본 포스팅을 주목해주세요
 &lt;img src=&quot;/assets/images/97469335/1.svg&quot;/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;id-아틀라시안마켓플레이스소개및JiraAdd-on추천-AtlassianMarketplace란?&quot;&gt;
 Atlassian Marketplace 란?
&lt;/h2&gt;
&lt;hr/&gt;
&lt;p&gt;
 Atlssian Marketplace는 IT부터 HR팀까지, 모든 팀이 사용할 수 있는 Add-on을 구매할 수 있는 일종의 &quot;App Store&quot; 입니다.
&lt;/p&gt;
&lt;p&gt;
 Atlassian Marketplace에는 무려
 &lt;strong&gt;
  4,000개
  &lt;img src=&quot;/assets/images/97469335/2.svg&quot;/&gt;
 &lt;/strong&gt;
 가 넘는 Add-on이 있어요.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 먼저, Atlassian Marketplace(
 &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/&quot; rel=&quot;nofollow&quot;&gt;
  https://marketplace.atlassian.com/
 &lt;/a&gt;
 ) 페이지에 대해서 간략하게 소개해드릴게요.
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97469335/3.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 메인 페이지의 오른쪽의 필터기능을 통해서 구성하려는 제품, 카테고리등을 선택하면 그에 맞는 제품들만 추려서 탐색할 수 있고,
&lt;/p&gt;
&lt;p&gt;
 Marketplace에서도 자체적으로 새롭게 출시된 제품과 추천 Add-on 제품, 인기 제품들을  소개해주고 있습니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 앞서 말씀드린 것처럼 다양한 조직의 요구사항을 충족시켜 줄 강력한 도구들이 4000개가 넘게 있지만,
&lt;/p&gt;
&lt;p&gt;
 종류도 너무 많고 또 모든 내용이 영어로 기재되어 있어 정말 내가 원하는 Add-on을 찾기가 쉽지 않게 느껴지실 것 같아요.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 그래서
 &lt;img src=&quot;/assets/images/97469335/4.svg&quot;/&gt;
 많은 고객분들이 이미 사용하고 계시는 검증된 Add-on들을 추천해드리려고 합니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;id-아틀라시안마켓플레이스소개및JiraAdd-on추천-1.ProjectManagement-WBS(WorkBreakdownStructure)&quot;&gt;
 1. Project Management - WBS(Work Breakdown Structure)
&lt;/h2&gt;
&lt;h2 id=&quot;id-아틀라시안마켓플레이스소개및JiraAdd-on추천-“프로젝트계획부터포트폴리오관리까지”&quot;&gt;
 &lt;em&gt;
  &lt;strong&gt;
   “
  &lt;/strong&gt;
  프로젝트 계획부터 포트폴리오 관리까지
  &lt;strong&gt;
   ”
  &lt;/strong&gt;
 &lt;/em&gt;
&lt;/h2&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97469335/5.png&quot;/&gt;
 &lt;/span&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97469335/6.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 하나의 프로젝트를 진행할 때 업무별, 파트별, 기간별 작업 리소스를 분배하고 진행 스케줄을 관리하기 위해서 WBS를 작성하는 것은 이미 익숙하실텐데요.
&lt;/p&gt;
&lt;p&gt;
 Jira 에서도 WBS 형식으로 프로젝트를 계획하고 관리할 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
 Gantt-Chart 기능을 활용하여 직접 작업을 작성하고 작업 진행률 및 마감일을 확인하여 프로젝트를 효율적으로 관리할 수 있어요.
&lt;/p&gt;
&lt;p&gt;
 Drag &amp;amp; Drop 형식으로 손쉬운 변경이 가능하고, Jira 이슈 연결을 생성하여 여러 이슈와 프로젝트를 관리할 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
 또한 MS Project와도 연동이 가능해서 MS Project의 작업을 가져오거나 내보낼 수 있도록 도와줍니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;img src=&quot;/assets/images/97469335/7.svg&quot;/&gt;
 &lt;strong&gt;
  추천 Add-on
 &lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1213016/biggantt-gantt-chart-for-jira?hosting=cloud&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97469335/8.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/a&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1212259/bigpicture-project-management-ppm?hosting=cloud&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97469335/9.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/a&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1211768/wbs-gantt-chart-for-jira?hosting=cloud&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97469335/10.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;id-아틀라시안마켓플레이스소개및JiraAdd-on추천-2.JiraWorkflowManagement&quot;&gt;
 2. Jira Workflow Management
&lt;/h2&gt;
&lt;h2 id=&quot;id-아틀라시안마켓플레이스소개및JiraAdd-on추천-“효율적인워크플로우관리와업무자동화”&quot;&gt;
 &lt;em&gt;
  &lt;strong&gt;
   “
  &lt;/strong&gt;
  효율적인 워크플로우 관리와 업무 자동화
  &lt;strong&gt;
   ”
  &lt;/strong&gt;
 &lt;/em&gt;
&lt;/h2&gt;
&lt;p&gt;
 &lt;em&gt;
  &lt;strong&gt;
   &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
    &lt;img src=&quot;/assets/images/97469335/11.png&quot;/&gt;
   &lt;/span&gt;
   &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
    &lt;img src=&quot;/assets/images/97469335/12.png&quot;/&gt;
   &lt;/span&gt;
  &lt;/strong&gt;
 &lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
 커스터마이징과 자동화. 이 2가지 키워드 만으로도 많은 사용자께서 높은 관심을 보이실 것 같아요.
&lt;/p&gt;
&lt;p&gt;
 Atlassian Marketplace의 워크플로우 관련 Add-on을 통해서 Jira의 업무 프로세스를 자동화할 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
 또한 필드, 템플릿, 이슈의 인터페이스를 사용자가 원하는 방식으로 커스터마이징해서 효율성을 높여보세요.
&lt;/p&gt;
&lt;p&gt;
 서로 다른 워크플로우간의 연결도 가능하며, 필드 값 복사, 이슈 업데이트, 이슈 연결 등 다양한 Post Function을 제공합니다.
&lt;/p&gt;
&lt;p&gt;
 이슈를 복제하기 전에 원하는 필드의 값을 수정하고, 프로젝트와 이슈 유형을 복제하면서 조정할 수 있는 기능을 통해서,
&lt;/p&gt;
&lt;p&gt;
 시간을 절약하고 오류가 발생하는 것을 줄일 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;img src=&quot;/assets/images/97469335/13.svg&quot;/&gt;
 &lt;strong&gt;
  추천 Add-on
 &lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/6820/scriptrunner-for-jira?hosting=cloud&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97469335/14.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/a&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/5048/jsu-automation-suite-for-jira-workflows?hosting=cloud&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97469335/15.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/a&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/44043/clone-plus-for-jira?hosting=cloud&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97469335/16.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;id-아틀라시안마켓플레이스소개및JiraAdd-on추천-3.UserManagement&quot;&gt;
 3. User Management
&lt;/h2&gt;
&lt;h2 id=&quot;id-아틀라시안마켓플레이스소개및JiraAdd-on추천-“JiraAdmin을위한효율적인사용자관리방안”&quot;&gt;
 &lt;em&gt;
  &lt;strong&gt;
   “
  &lt;/strong&gt;
  Jira Admin을 위한  효율적인 사용자 관리 방안
  &lt;strong&gt;
   ”
  &lt;/strong&gt;
 &lt;/em&gt;
&lt;/h2&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97469335/17.png&quot;/&gt;
 &lt;/span&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97469335/18.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 회사내의 특정 조직이나 팀뿐만 아니라 여러 협력사와의 협업, 대규모 조직의 전사적 사용 목적으로 사용자수가 증가하게 될 수록,
&lt;/p&gt;
&lt;p&gt;
 많게는 10,000명에 가까운 사용자를 관리하는 것이 Admin에게는 매우 큰 숙제로 느껴지실 것 같아요.
&lt;/p&gt;
&lt;p&gt;
 1,000명이 넘는 사용자를 보유한 조직이라면 Add-on을 통해서 사용자 증감에 대해 스케줄러 설정을 통해 알림을 받아보세요.
&lt;/p&gt;
&lt;p&gt;
 또한 활성 사용자를 식별하여 라이선스를 할당하고 오랫동안 활동이 없는 사용자는 삭제해주는 기능으로 쉽고 간단하게 라이선스를 관리할 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;inline-comment-marker&quot; data-ref=&quot;930bb705-c753-449b-98b9-bd92adca4f97&quot;&gt;
  사용자 수가 유동적이고 급격하게 증가하게 될 경우 사용자 수를 유연하게 관리할 수 있도록 돕는 Add-on을 활용하시면,
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;inline-comment-marker&quot; data-ref=&quot;930bb705-c753-449b-98b9-bd92adca4f97&quot;&gt;
  유저 라이선스의 약 20% 내외정도는 추가 구매를 하지 않아도 사용자 수를 감당할 수 있어 시간과 비용을 절감할 수 있습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;inline-comment-marker&quot; data-ref=&quot;930bb705-c753-449b-98b9-bd92adca4f97&quot;&gt;
  (물론 장기적인 관점에서 사용자수가 계속해서 증가할 경우, User Tier를 올리는 것을 고려해야 겠지만요. ^^)
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 사용자 프로필도 좀 더 구체적이고 다채롭게 구성하여 원하는 동료를 빠르게 찾을 수 있다면 더욱 효율적으로 협업이 가능해집니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;img src=&quot;/assets/images/97469335/19.svg&quot;/&gt;
 &lt;strong&gt;
  추천 Add-on
 &lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;strong&gt;
  &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1222216/flexible-user-license-for-jira?hosting=server&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
   &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
    &lt;img src=&quot;/assets/images/97469335/20.png&quot;/&gt;
   &lt;/span&gt;
  &lt;/a&gt;
  &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1215285/user-management-for-jira?hosting=datacenter&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
   &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
    &lt;img src=&quot;/assets/images/97469335/21.png&quot;/&gt;
   &lt;/span&gt;
  &lt;/a&gt;
  &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1212508/user-profiles-for-jira?hosting=datacenter&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
   &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
    &lt;img src=&quot;/assets/images/97469335/22.png&quot;/&gt;
   &lt;/span&gt;
  &lt;/a&gt;
 &lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;id-아틀라시안마켓플레이스소개및JiraAdd-on추천-4.Theme&amp;amp;Style&quot;&gt;
 4. Theme &amp;amp; Style
&lt;/h2&gt;
&lt;h2 id='id-아틀라시안마켓플레이스소개및JiraAdd-on추천-&quot;우리조직에최적화된인터페이스구현&quot;'&gt;
 &lt;em&gt;
  &quot;우리 조직에 최적화된 인터페이스 구현&quot;
 &lt;/em&gt;
&lt;/h2&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97469335/23.png&quot;/&gt;
 &lt;/span&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97469335/24.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 Jira 뿐만 아니라 Atlassian 제품에서 우리 조직의 브랜드를 표현하고 최적화된 환경을 조성하고 싶다면, Atlassian Marketplace의 Add-on을 활용해보세요.
&lt;/p&gt;
&lt;p&gt;
 팀의 성격과 사용 목적에 따른 맞춤형 레이아웃과 스타일, 테마를 지정하여 사용자들이 보다 쉽고 친숙하게 이용할 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
 향상된 검색 기능과 드롭 다운 형식의 메뉴 탐색을 통해서 유용한 리소스를 바로 찾을 수 있는 편리한 사이트 환경을 조성하세요.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 뿐만 아니라 스크린샷, 복잡한 표등을 삽입하고 내장된 템플릿이나 스타일을 통해 보다 풍부한 컨텐츠를 제작할 수 있으며,
&lt;/p&gt;
&lt;p&gt;
 프로젝트와 이슈 유형에 따라 템플릿을 만들어 생산성을 향상시키도록 도와줍니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;img src=&quot;/assets/images/97469335/25.svg&quot;/&gt;
 &lt;strong&gt;
  추천 Add-on
 &lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1216711/refined-for-jira-sites-themes?hosting=datacenter&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97469335/26.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/a&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1210768/jeditor-rich-text-editor-for-jira?hosting=datacenter&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97469335/27.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;id-아틀라시안마켓플레이스소개및JiraAdd-on추천-5.Integration&quot;&gt;
 5. Integration
&lt;/h2&gt;
&lt;h2 id='id-아틀라시안마켓플레이스소개및JiraAdd-on추천-&quot;다양한외부시스템/툴과의원활한통합&quot;'&gt;
 &lt;em&gt;
  &quot;다양한 외부 시스템/툴과의 원활한 통합&quot;
 &lt;/em&gt;
&lt;/h2&gt;
&lt;p&gt;
 Atlassian Marketplace에는 여러 외부 툴과의 원활한 연동과 통합을 도와주는 Add-on들이 많이 있어요.
&lt;/p&gt;
&lt;p&gt;
 우리 조직에서 이미 사용하고 있는 기존 시스템과 연동해서 보다 풍부하게 활용하고 한 곳에서 리소스를 편리하게 관리하세요.
&lt;/p&gt;
&lt;p&gt;
 &lt;img src=&quot;/assets/images/97469335/28.svg&quot;/&gt;
 &lt;strong&gt;
  추천 Add-on
 &lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1216787/google-drive-docs-for-jira?hosting=cloud&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97469335/29.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/a&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1214214/connector-for-salesforce-jira?hosting=cloud&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97469335/30.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/4984/git-integration-for-jira?hosting=cloud&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97469335/31.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/a&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1213138/outlook-email-for-jira?hosting=cloud&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97469335/32.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1212130/saml-single-sign-on-sso-jira-saml-sso?hosting=datacenter&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97469335/33.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/a&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1215229/bigtemplate-export-to-pdf-word-excel?hosting=cloud&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97469335/34.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 이 밖에도 Atlassian Marketplace에는 정말 다양하고 유용한 Add-on 들이 많이 있습니다!
&lt;/p&gt;
&lt;p&gt;
 Add-on을 통해서 더욱 다양하게 Atlassian 제품을 활용하기 위한 제품구성이나 금액이 궁금하시다면,
&lt;/p&gt;
&lt;p&gt;
 아래 연락처로 언제든지 편하게 문의해주세요.
 &lt;img src=&quot;/assets/images/97469335/35.svg&quot;/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(0,0,255);&quot;&gt;
  &lt;strong&gt;
   E-mail: atlassian
   &lt;a class=&quot;external-link&quot; href=&quot;mailto:atlassian@osci.kr&quot; rel=&quot;nofollow&quot; style=&quot;color: rgb(0,0,255);&quot;&gt;
    @
   &lt;/a&gt;
   osci.kr / Tel: 02-516-0711
  &lt;/strong&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 다음 포스팅에서는 Confluence 와 관련하여 매우 유용한 Add-on 들을 소개해드릴 예정입니다.
&lt;/p&gt;
&lt;p&gt;
 감사합니다!
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;</description>
        <pubDate>Wed, 24 Jun 2020 00:00:00 +0900</pubDate>
        <link>https://tech.osci.kr/2020/06/24/97469335/</link>
        <guid isPermaLink="true">https://tech.osci.kr/2020/06/24/97469335/</guid>
        
        <category>atlassian</category>
        
        <category>아틀라시안</category>
        
        <category>marketplace</category>
        
        <category>jira</category>
        
        
      </item>
    
      <item>
        <title>[Container 시리즈] 05. Kubernetes란?</title>
        <description>&lt;div class=&quot;code panel pdl conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;code&quot; style=&quot;border-width: 1px;&quot;&gt;
 &lt;div class=&quot;codeContent panelContent pdl&quot;&gt;
  &lt;pre class=&quot;syntaxhighlighter-pre&quot; data-syntaxhighlighter-params=&quot;brush: bash; gutter: false; theme: Confluence&quot; data-theme=&quot;Confluence&quot;&gt;쿠버네티스를 들어는봤는데... 컨테이너를 관리하는거라고 알고는 있는데...
정확히 이 녀석이 무엇을 하는건지 이해가 잘 안가는 분들을 위한 
Kubernetes 기초개념!&lt;/pre&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;div class=&quot;conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;markdown&quot;&gt;
 &lt;p&gt;
  안녕하세요!
지난시간에 Container와 Docker에 대한 글을 작성하였었는데 Kubernetes가 과연 무엇인지?
왜 컨테이너를 이야기하면 쿠버네티스가 나오는지?
그럼 컨테이너와 쿠버네티스가 같은것인지?
이번시간에 자세히 다뤄보도록 하겠습니다!
 &lt;/p&gt;
 &lt;script&gt;
  //&lt;![CDATA[

AJS.$('[data-macro-name=&quot;markdown&quot;] code').each(function(i, block) {
    hljs.highlightBlock(block);
  });

//]]&gt;
 &lt;/script&gt;
 &lt;style&gt;
  .hljs {display: inline;}
pre &gt; code {display: block !important;}
 &lt;/style&gt;
 &lt;script&gt;
  //&lt;![CDATA[
 AJS.$('[data-macro-name=&quot;markdown&quot;] table thead th').each(function(i, block) {
    block.classList.add(&quot;confluenceTh&quot;);
});

AJS.$('[data-macro-name=&quot;markdown&quot;] table tbody tr td').each(function(i, block) {
    block.classList.add(&quot;confluenceTd&quot;);
});
//]]&gt;
 &lt;/script&gt;
&lt;/div&gt;
&lt;div class=&quot;conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;markdown&quot;&gt;
 &lt;p&gt;
  지난글에서 설명드린 Container와 Docker가 기억나시나요?
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  예를들어 여러분이 새롭게 오픈한 신규 서비스가 있다고 가정해보겠습니다.
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  개발자들이 열씸히 코드를 개발하여 요즘 핫하디 핫한 컨테이너화 하게 구축을 한 후 서버에 이 컨테이너를 배포를 하였습니다.
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;script&gt;
  //&lt;![CDATA[

AJS.$('[data-macro-name=&quot;markdown&quot;] code').each(function(i, block) {
    hljs.highlightBlock(block);
  });

//]]&gt;
 &lt;/script&gt;
 &lt;style&gt;
  .hljs {display: inline;}
pre &gt; code {display: block !important;}
 &lt;/style&gt;
 &lt;script&gt;
  //&lt;![CDATA[
 AJS.$('[data-macro-name=&quot;markdown&quot;] table thead th').each(function(i, block) {
    block.classList.add(&quot;confluenceTh&quot;);
});

AJS.$('[data-macro-name=&quot;markdown&quot;] table tbody tr td').each(function(i, block) {
    block.classList.add(&quot;confluenceTd&quot;);
});
//]]&gt;
 &lt;/script&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper image-center-wrapper&quot;&gt;
  &lt;img src=&quot;/assets/images/97465347/0.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;markdown&quot;&gt;
 &lt;p&gt;
  대망의 오픈 첫날! 사용자가 신규 서비스로 접속을 하기 시작합니다.
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  가장 떨리는 순간이죠
  &lt;br/&gt;
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  하지만? 너무나 핫한 신규서비스이기에 저희가 예측했던 사용자보다 훨씬 더 많은 사용자가 몰리기 시작하네요...
  &lt;br/&gt;
  즐거운 비명입니다.
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;script&gt;
  //&lt;![CDATA[

AJS.$('[data-macro-name=&quot;markdown&quot;] code').each(function(i, block) {
    hljs.highlightBlock(block);
  });

//]]&gt;
 &lt;/script&gt;
 &lt;style&gt;
  .hljs {display: inline;}
pre &gt; code {display: block !important;}
 &lt;/style&gt;
 &lt;script&gt;
  //&lt;![CDATA[
 AJS.$('[data-macro-name=&quot;markdown&quot;] table thead th').each(function(i, block) {
    block.classList.add(&quot;confluenceTh&quot;);
});

AJS.$('[data-macro-name=&quot;markdown&quot;] table tbody tr td').each(function(i, block) {
    block.classList.add(&quot;confluenceTd&quot;);
});
//]]&gt;
 &lt;/script&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper image-center-wrapper&quot;&gt;
  &lt;img src=&quot;/assets/images/97465347/1.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;markdown&quot;&gt;
 &lt;p&gt;
  음... 사용자가 몰리니...
  &lt;br/&gt;
  scale out을 해야할 시점인 것 같습니다.
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  서버의 확장? 자신있습니다!
  &lt;br/&gt;
  클라우드 환경이라면 더더욱 간단하죠
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;script&gt;
  //&lt;![CDATA[

AJS.$('[data-macro-name=&quot;markdown&quot;] code').each(function(i, block) {
    hljs.highlightBlock(block);
  });

//]]&gt;
 &lt;/script&gt;
 &lt;style&gt;
  .hljs {display: inline;}
pre &gt; code {display: block !important;}
 &lt;/style&gt;
 &lt;script&gt;
  //&lt;![CDATA[
 AJS.$('[data-macro-name=&quot;markdown&quot;] table thead th').each(function(i, block) {
    block.classList.add(&quot;confluenceTh&quot;);
});

AJS.$('[data-macro-name=&quot;markdown&quot;] table tbody tr td').each(function(i, block) {
    block.classList.add(&quot;confluenceTd&quot;);
});
//]]&gt;
 &lt;/script&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper image-center-wrapper&quot;&gt;
  &lt;img src=&quot;/assets/images/97465347/2.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;markdown&quot;&gt;
 &lt;p&gt;
  서버를 확장하였어요!!!
 &lt;/p&gt;
 &lt;p&gt;
  근데 잠시만....
  &lt;br/&gt;
  저희 신규서비스는 컨테이너 환경인데......
  &lt;br/&gt;
  안에있는 컨테이너들은..... 어떻게 옮겨야하지....?
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;script&gt;
  //&lt;![CDATA[

AJS.$('[data-macro-name=&quot;markdown&quot;] code').each(function(i, block) {
    hljs.highlightBlock(block);
  });

//]]&gt;
 &lt;/script&gt;
 &lt;style&gt;
  .hljs {display: inline;}
pre &gt; code {display: block !important;}
 &lt;/style&gt;
 &lt;script&gt;
  //&lt;![CDATA[
 AJS.$('[data-macro-name=&quot;markdown&quot;] table thead th').each(function(i, block) {
    block.classList.add(&quot;confluenceTh&quot;);
});

AJS.$('[data-macro-name=&quot;markdown&quot;] table tbody tr td').each(function(i, block) {
    block.classList.add(&quot;confluenceTd&quot;);
});
//]]&gt;
 &lt;/script&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper image-center-wrapper&quot;&gt;
  &lt;img src=&quot;/assets/images/97465347/3.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;div class=&quot;conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;markdown&quot;&gt;
 &lt;p&gt;
  여차저차해서 새롭게 확장한 서버에 컨테이너를 가져왔습니다!!
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  하지만.....
  &lt;br/&gt;
  이렇게 가져온 컨테이너를 어떻게 적절하게 배치를 해야하는걸까요......
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  이렇게해서
  &lt;br/&gt;
  다수의 컨테이너를 관리해주는
  &lt;br/&gt;
  Container Orchestration 이라는 개념이 나오게 되었습니다!
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;script&gt;
  //&lt;![CDATA[

AJS.$('[data-macro-name=&quot;markdown&quot;] code').each(function(i, block) {
    hljs.highlightBlock(block);
  });

//]]&gt;
 &lt;/script&gt;
 &lt;style&gt;
  .hljs {display: inline;}
pre &gt; code {display: block !important;}
 &lt;/style&gt;
 &lt;script&gt;
  //&lt;![CDATA[
 AJS.$('[data-macro-name=&quot;markdown&quot;] table thead th').each(function(i, block) {
    block.classList.add(&quot;confluenceTh&quot;);
});

AJS.$('[data-macro-name=&quot;markdown&quot;] table tbody tr td').each(function(i, block) {
    block.classList.add(&quot;confluenceTd&quot;);
});
//]]&gt;
 &lt;/script&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper image-center-wrapper&quot;&gt;
  &lt;img src=&quot;/assets/images/97465347/4.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;markdown&quot;&gt;
 &lt;p&gt;
  즉,
  &lt;br/&gt;
  오케스트레이션 이란 단어를 들으면 다음의 이미지를 떠올리신 분들이 계시리라 생각되는데
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;script&gt;
  //&lt;![CDATA[

AJS.$('[data-macro-name=&quot;markdown&quot;] code').each(function(i, block) {
    hljs.highlightBlock(block);
  });

//]]&gt;
 &lt;/script&gt;
 &lt;style&gt;
  .hljs {display: inline;}
pre &gt; code {display: block !important;}
 &lt;/style&gt;
 &lt;script&gt;
  //&lt;![CDATA[
 AJS.$('[data-macro-name=&quot;markdown&quot;] table thead th').each(function(i, block) {
    block.classList.add(&quot;confluenceTh&quot;);
});

AJS.$('[data-macro-name=&quot;markdown&quot;] table tbody tr td').each(function(i, block) {
    block.classList.add(&quot;confluenceTd&quot;);
});
//]]&gt;
 &lt;/script&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper image-center-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97465347/5.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p class=&quot;auto-cursor-target&quot; style=&quot;text-align: center;&quot;&gt;
 출처 : KBS 교향악단
&lt;/p&gt;
&lt;div class=&quot;conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;markdown&quot;&gt;
 &lt;br/&gt;
 저희 컨테이너 환경에서의 오케스트레이션은
 &lt;br/&gt;
 다음의 이미지라 생각하시면 조금 쉬우실 것 같습니다!
 &lt;br/&gt;
 &lt;script&gt;
  //&lt;![CDATA[

AJS.$('[data-macro-name=&quot;markdown&quot;] code').each(function(i, block) {
    hljs.highlightBlock(block);
  });

//]]&gt;
 &lt;/script&gt;
 &lt;style&gt;
  .hljs {display: inline;}
pre &gt; code {display: block !important;}
 &lt;/style&gt;
 &lt;script&gt;
  //&lt;![CDATA[
 AJS.$('[data-macro-name=&quot;markdown&quot;] table thead th').each(function(i, block) {
    block.classList.add(&quot;confluenceTh&quot;);
});

AJS.$('[data-macro-name=&quot;markdown&quot;] table tbody tr td').each(function(i, block) {
    block.classList.add(&quot;confluenceTd&quot;);
});
//]]&gt;
 &lt;/script&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper image-center-wrapper&quot;&gt;
  &lt;img src=&quot;/assets/images/97465347/6.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;markdown&quot;&gt;
 &lt;br/&gt;
 쿠버네티스도 이러한 컨테이너 오케스트레이션 중 하나의 툴인데
쿠버네티스 뿐만아니라, Docker Swarm, Rancher, Apache Mesos 등등 여러가지 툴이 존재하고 있습니다.
 &lt;p&gt;
  그중에서 이번 글에서는 대표적인, De facto(사실상 업계표준) Kubernetes에 대하여 알아보겠습니다!!
 &lt;/p&gt;
 &lt;script&gt;
  //&lt;![CDATA[

AJS.$('[data-macro-name=&quot;markdown&quot;] code').each(function(i, block) {
    hljs.highlightBlock(block);
  });

//]]&gt;
 &lt;/script&gt;
 &lt;style&gt;
  .hljs {display: inline;}
pre &gt; code {display: block !important;}
 &lt;/style&gt;
 &lt;script&gt;
  //&lt;![CDATA[
 AJS.$('[data-macro-name=&quot;markdown&quot;] table thead th').each(function(i, block) {
    block.classList.add(&quot;confluenceTh&quot;);
});

AJS.$('[data-macro-name=&quot;markdown&quot;] table tbody tr td').each(function(i, block) {
    block.classList.add(&quot;confluenceTd&quot;);
});
//]]&gt;
 &lt;/script&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper image-center-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97465347/7.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;markdown&quot;&gt;
 &lt;h2&gt;
  &lt;a href=&quot;#kubernetes란&quot; id=&quot;kubernetes란&quot;&gt;
   Kubernetes란?
  &lt;/a&gt;
 &lt;/h2&gt;
 &lt;blockquote&gt;
  &lt;p&gt;
   Kubernetes
  &lt;/p&gt;
  &lt;blockquote&gt;
   &lt;p&gt;
    쿠버네티스는 컨테이너화된 워크로드와 서비스를 관리하기 위한 이식성이 있고, 확장가능한 오픈소스 플랫폼이다.
    &lt;br/&gt;
    쿠버네티스는 선언적 구성과 자동화를 모두 용이하게 해준다. 쿠버네티스는 크고, 빠르게 성장하는 생태계를 가지고 있다.
    &lt;br/&gt;
    쿠버네티스 서비스, 기술 지원 및 도구는 어디서나 쉽게 이용할 수 있다.
    &lt;br/&gt;
   &lt;/p&gt;
  &lt;/blockquote&gt;
 &lt;/blockquote&gt;
 &lt;blockquote&gt;
  &lt;blockquote&gt;
   &lt;p&gt;
    쿠버네티스란 명칭은 키잡이(helmsman)나 파일럿을 뜻하는 그리스어에서 유래했다.
    &lt;br/&gt;
    구글이 2014년에 쿠버네티스 프로젝트를 오픈소스화했다.
    &lt;br/&gt;
    쿠버네티스는 프로덕션 워크로드를 대규모로 운영하는 15년 이상의 구글 경험과 커뮤니티의 최고의 아이디어와 적용 사례가 결합되어 있다.
    &lt;br/&gt;
    &lt;del&gt;
     라고 kubernetes의 공식 문서에 나와있습니다 ㅎ_ㅎ
    &lt;/del&gt;
   &lt;/p&gt;
  &lt;/blockquote&gt;
 &lt;/blockquote&gt;
 &lt;p&gt;
  즉 쿠버네티스는 앞에서 설명드린대로 컨테이너를 관리를 위해 나온 오픈소스 플랫폼입니다! (갓구글이 만듬)
 &lt;/p&gt;
 &lt;p&gt;
  쿠버네티스 특징이라고 하면 굉장히 많은 정보들이 쏟아져 나오는데요
대표적으로 아래의 3가지 특징이 있습니다.
 &lt;/p&gt;
 &lt;script&gt;
  //&lt;![CDATA[

AJS.$('[data-macro-name=&quot;markdown&quot;] code').each(function(i, block) {
    hljs.highlightBlock(block);
  });

//]]&gt;
 &lt;/script&gt;
 &lt;style&gt;
  .hljs {display: inline;}
pre &gt; code {display: block !important;}
 &lt;/style&gt;
 &lt;script&gt;
  //&lt;![CDATA[
 AJS.$('[data-macro-name=&quot;markdown&quot;] table thead th').each(function(i, block) {
    block.classList.add(&quot;confluenceTh&quot;);
});

AJS.$('[data-macro-name=&quot;markdown&quot;] table tbody tr td').each(function(i, block) {
    block.classList.add(&quot;confluenceTd&quot;);
});
//]]&gt;
 &lt;/script&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper image-center-wrapper&quot;&gt;
  &lt;img src=&quot;/assets/images/97465347/8.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;markdown&quot;&gt;
 &lt;p&gt;
  &lt;strong&gt;
   1. 확장성
  &lt;/strong&gt;
  &lt;br/&gt;
  Google에서 만든것의 명성에 걸맞게 일주일에 수십억 개의 컨테이너들을 운영하게 해준 경험에 따라 쿠버네티스가 디자인되었기 때문에, 손쉽게 확장될 수 있습니다.
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  &lt;strong&gt;
   2. 유연성
  &lt;/strong&gt;
  &lt;br/&gt;
  로컬 테스트, 프로덕트 운영이든 환경에 상관없이, 사용자의 복잡한 니즈를 모두 수용할 수 있는 유연성을 가지기에 사용자의 애플리케이션들을 끊임없고 쉽게 전달할 수 있습니다.
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  &lt;strong&gt;
   3. 이식성
  &lt;/strong&gt;
  &lt;br/&gt;
  쿠버네티스는 오픈소스로서 on-prem, 하이브리드, 또는 퍼블릭 클라우드 인프라스트럭처등 여러 환경에서 기동됩니다.
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  그 밖에 수 많은 장점, 특징을 가지고 있는 쿠버네티스 이지만 굉장히 단순한 로직을 가지고있습니다.
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  현재상태를 모니터링하면서 관리자가 설정한 상태의 값과 다르면, 관리자가 설정한값으로 바꿔주는 3단계의 심플한 법칙
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  그렇기에 관리자는 명령어로 관리하는것이 아니라,
  &lt;strong&gt;
   설정한 값이 들어있는 yaml 파일
  &lt;/strong&gt;
  등으로 관리를 해 줍니다.
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;h2&gt;
  &lt;a href=&quot;#kubernetes-workflow&quot; id=&quot;kubernetes-workflow&quot;&gt;
   Kubernetes workflow
  &lt;/a&gt;
 &lt;/h2&gt;
 &lt;p&gt;
  쿠버네티스는 다음과 같은 흐름을 가지고 있습니다.
 &lt;/p&gt;
 &lt;script&gt;
  //&lt;![CDATA[

AJS.$('[data-macro-name=&quot;markdown&quot;] code').each(function(i, block) {
    hljs.highlightBlock(block);
  });

//]]&gt;
 &lt;/script&gt;
 &lt;style&gt;
  .hljs {display: inline;}
pre &gt; code {display: block !important;}
 &lt;/style&gt;
 &lt;script&gt;
  //&lt;![CDATA[
 AJS.$('[data-macro-name=&quot;markdown&quot;] table thead th').each(function(i, block) {
    block.classList.add(&quot;confluenceTh&quot;);
});

AJS.$('[data-macro-name=&quot;markdown&quot;] table tbody tr td').each(function(i, block) {
    block.classList.add(&quot;confluenceTd&quot;);
});
//]]&gt;
 &lt;/script&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper image-center-wrapper&quot;&gt;
  &lt;img src=&quot;/assets/images/97465347/9.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;markdown&quot;&gt;
 &lt;p&gt;
  보통은 조직마다 다르겠지만 협업사 혹은 협업부서에서 서비스에 해당하는 요청을 관리자 에게 전달합니다.
  &lt;br/&gt;
  관리자는 이 명렁을
  &lt;strong&gt;
   Master Node
  &lt;/strong&gt;
  에 전달하고
  &lt;br/&gt;
  Master Node는
  &lt;strong&gt;
   Worker Node
  &lt;/strong&gt;
  에게 명령어를 전달함과 동시에 트래픽을 분배해줍니다.
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  위와같은 다이어그램을 조금 더 자세히 살펴보자면
  &lt;br/&gt;
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;script&gt;
  //&lt;![CDATA[

AJS.$('[data-macro-name=&quot;markdown&quot;] code').each(function(i, block) {
    hljs.highlightBlock(block);
  });

//]]&gt;
 &lt;/script&gt;
 &lt;style&gt;
  .hljs {display: inline;}
pre &gt; code {display: block !important;}
 &lt;/style&gt;
 &lt;script&gt;
  //&lt;![CDATA[
 AJS.$('[data-macro-name=&quot;markdown&quot;] table thead th').each(function(i, block) {
    block.classList.add(&quot;confluenceTh&quot;);
});

AJS.$('[data-macro-name=&quot;markdown&quot;] table tbody tr td').each(function(i, block) {
    block.classList.add(&quot;confluenceTd&quot;);
});
//]]&gt;
 &lt;/script&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper image-center-wrapper&quot;&gt;
  &lt;img src=&quot;/assets/images/97465347/10.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;markdown&quot;&gt;
 &lt;p&gt;
  위와 같은 아키텍처가 나옵니다!
  &lt;br/&gt;
  기본적으로 쿠버네티스는 하나의 마스터노드와 여러개의 워커노드로 구성이 되어져있는데
  &lt;br/&gt;
  &lt;del&gt;
   굉장히 복잡하고 뭐가 내부에 있는지 궁금하지도, 알고싶지도 않게 생겼지만
  &lt;/del&gt;
  &lt;br/&gt;
  해당 아키텍처에 있는 Kubernetes의 컴포넌트에 대해서 하나하나 간략하게 살펴보겠습니다
  &lt;sup&gt;
   0
  &lt;/sup&gt;
  (해맑)
 &lt;/p&gt;
 &lt;h2&gt;
  &lt;a href=&quot;#kubernetes-components&quot; id=&quot;kubernetes-components&quot;&gt;
   Kubernetes Components
  &lt;/a&gt;
 &lt;/h2&gt;
 &lt;h3&gt;
  &lt;a href=&quot;#master-node&quot; id=&quot;master-node&quot;&gt;
   Master Node
   &lt;br/&gt;
  &lt;/a&gt;
 &lt;/h3&gt;
 &lt;p&gt;
  : 쿠버네티스의 주요 컨트롤 유닛으로서 Worker Nodes를 관리하는 주체입니다.
  &lt;br/&gt;
  클러스터에 관한 전반적인 결정을 하고 이벤트를 감지, 반응하는 역할을 합니다
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;table class=&quot;confluenceTable&quot;&gt;
  &lt;thead&gt;
   &lt;tr&gt;
    &lt;th align=&quot;left&quot;&gt;
     Component
    &lt;/th&gt;
    &lt;th align=&quot;left&quot;&gt;
     설명
    &lt;/th&gt;
   &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;
     &lt;strong&gt;
      Kubectl
     &lt;/strong&gt;
    &lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;
     -마스터 노드와 통신하는 명령어로서 쿠버네티스 API를 사용해서 마스터노드와 상호작용을 합니다.
    &lt;/td&gt;
   &lt;/tr&gt;
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;
     &lt;strong&gt;
      API Server
     &lt;/strong&gt;
    &lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;
     - REST API 요청을 처리하고 쿠버네티스 클러스터를 구성하는 각 컴포넌트들과 통신을 담당합니다.
    &lt;/td&gt;
   &lt;/tr&gt;
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;
     &lt;strong&gt;
      Scheduler
     &lt;/strong&gt;
    &lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;
     - 노드들의 리소스 상태를 파악하여 pod가 배치될 적절한 노드를 선택해 주는 역할.
    &lt;/td&gt;
   &lt;/tr&gt;
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;
     &lt;strong&gt;
      Controller Manager
     &lt;/strong&gt;
    &lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;
     - 쿠버네티스 클러스터 상태 감시, 설정한 상태로 유지하는 역할.
    &lt;/td&gt;
   &lt;/tr&gt;
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;
     &lt;strong&gt;
      ETCD
     &lt;/strong&gt;
    &lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;
     - 오픈소스 key-value 저장소로서 Kubernetes에서는 Master Node의 API Server가 HTTP/JSON API를 이용하여 접근할 수 있는 구성 데이터를 저장하는 용도로 사용됩니다.
    &lt;/td&gt;
   &lt;/tr&gt;
  &lt;/tbody&gt;
 &lt;/table&gt;
 &lt;h3&gt;
  &lt;a href=&quot;#worker-node&quot; id=&quot;worker-node&quot;&gt;
   Worker Node
   &lt;br/&gt;
  &lt;/a&gt;
 &lt;/h3&gt;
 &lt;p&gt;
  : 워커노드는 할당된 task를 요청대로 수행하는 시스템입니다.
  &lt;br/&gt;
  예전에는 Minions 라고도 불렸으며 컨테이너들간의 네트워크 등 서비스에 필요한 전반적인 일들을 마스터 노드와 통신하며 수행합니다.
 &lt;/p&gt;
 &lt;table class=&quot;confluenceTable&quot;&gt;
  &lt;thead&gt;
   &lt;tr&gt;
    &lt;th align=&quot;left&quot;&gt;
     Component
    &lt;/th&gt;
    &lt;th align=&quot;left&quot;&gt;
     설명
    &lt;/th&gt;
   &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;
     &lt;strong&gt;
      Kubelet
     &lt;/strong&gt;
    &lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;
     - 쿠버네티스 마스터 노드간의 통신을 담당하는 에이전트로서 노드에서 동작하는 pod들을 관리합니다
    &lt;/td&gt;
   &lt;/tr&gt;
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;
     &lt;strong&gt;
      Kube-proxy
     &lt;/strong&gt;
    &lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;
     - 각 노드별로 탑재되며 네트워크 프록시 및 로드밸런서 역할을 해줍니다.
    &lt;/td&gt;
   &lt;/tr&gt;
   &lt;tr&gt;
    &lt;td align=&quot;left&quot;&gt;
     &lt;strong&gt;
      Pod
     &lt;/strong&gt;
    &lt;/td&gt;
    &lt;td align=&quot;left&quot;&gt;
     - Pod는 컨테이너의 그룹으로 한 개 또는 여러 개의 컨테이너를 포함하는 쿠버네티스의 작업단위 입니다.
    &lt;/td&gt;
   &lt;/tr&gt;
  &lt;/tbody&gt;
 &lt;/table&gt;
 &lt;p&gt;
  각각의 컴포넌트들이 굉장히 복잡해 보이는데 조금 더 쉬운 다이어그램을 가지고 왔습니다.
 &lt;/p&gt;
 &lt;script&gt;
  //&lt;![CDATA[

AJS.$('[data-macro-name=&quot;markdown&quot;] code').each(function(i, block) {
    hljs.highlightBlock(block);
  });

//]]&gt;
 &lt;/script&gt;
 &lt;style&gt;
  .hljs {display: inline;}
pre &gt; code {display: block !important;}
 &lt;/style&gt;
 &lt;script&gt;
  //&lt;![CDATA[
 AJS.$('[data-macro-name=&quot;markdown&quot;] table thead th').each(function(i, block) {
    block.classList.add(&quot;confluenceTh&quot;);
});

AJS.$('[data-macro-name=&quot;markdown&quot;] table tbody tr td').each(function(i, block) {
    block.classList.add(&quot;confluenceTd&quot;);
});
//]]&gt;
 &lt;/script&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper image-center-wrapper&quot;&gt;
  &lt;img src=&quot;/assets/images/97465347/11.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;markdown&quot;&gt;
 &lt;p&gt;
  Kuberenetes 도큐먼트에 한번쯤 들어가보셨다면 익숙하실 그림일겁니다.
 &lt;/p&gt;
 &lt;p&gt;
  조금더 쉽게 말씀드리자면,
  &lt;br/&gt;
  마스터노드는 쿠버네티스 클러스터를 관리하며
  &lt;br/&gt;
  워커노드는 실질적인 업무를 수행하는 주체입니다.
  &lt;del&gt;
   열일하는 worker node 친근하네요
  &lt;/del&gt;
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  또한 이 워커노드를 확대하면 오른쪽 다이어그램처럼 되는데요,
  &lt;br/&gt;
  워커노드안에는 pod가 들어가게 되고
  &lt;br/&gt;
  이 pod안에는 containerized된 application이 들어가게됩니다!
 &lt;/p&gt;
 &lt;p&gt;
  이 pod는 쿠버네티스의 가장작은 작업단위 요소로서,
  &lt;br/&gt;
  필요에 따라 쉽게 생성되고 쉽게 버려지는 비교적 짧은 수명을 가지는 것이 특징입니다.
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  또한, 각각의 pod마다 다른 ip를 가지고 있고 pod 안에 있는 컨테이너끼리 는 내부 통신이 가능합니다.
  &lt;br/&gt;
  &lt;em&gt;
   (DNS로 통신 (coredns))
  &lt;/em&gt;
 &lt;/p&gt;
 &lt;p&gt;
  Pod안에 있는 컨테이너들 끼리 볼륨을 공유하며
  &lt;br/&gt;
  컨테이너가 죽고 재시작 되어도 pod가 살아있는 한 shared volume은 유지됩니다.
 &lt;/p&gt;
 &lt;p&gt;
  여러분의 Application을 컨테이너로 이쁘게 만들고 이를 사용자들에게 서비스를 하려면
  &lt;br/&gt;
  실질적으로 동일한 pod가 지속적으로 올라와져 있어야하는데요~
  &lt;br/&gt;
  (좀 전에 pod는 쉽게 죽는 특징을 가지고 있다고 했는데 ....)
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  우리의 쿠버네티스는 똑똑한 친구이니 이런 빅픽쳐를 계산해두었습니다.
  &lt;br/&gt;
  &lt;br/&gt;
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  어디에서 많이들어본...
  &lt;br/&gt;
  Replica Set, Deployment, Service, Ingress 등등
  &lt;br/&gt;
  모임에서 한번 쯤 들었던거같은 이름들..
  &lt;br/&gt;
  다음시간에는 이런 Kubernetes의 구성요소들에 대하여 더 깊게 알아보는 시간을 가지도록 하겠습니다!
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  &lt;del&gt;
   뜬금없지만
  &lt;/del&gt;
  다들 코로나 조심하세요!
 &lt;/p&gt;
 &lt;script&gt;
  //&lt;![CDATA[

AJS.$('[data-macro-name=&quot;markdown&quot;] code').each(function(i, block) {
    hljs.highlightBlock(block);
  });

//]]&gt;
 &lt;/script&gt;
 &lt;style&gt;
  .hljs {display: inline;}
pre &gt; code {display: block !important;}
 &lt;/style&gt;
 &lt;script&gt;
  //&lt;![CDATA[
 AJS.$('[data-macro-name=&quot;markdown&quot;] table thead th').each(function(i, block) {
    block.classList.add(&quot;confluenceTh&quot;);
});

AJS.$('[data-macro-name=&quot;markdown&quot;] table tbody tr td').each(function(i, block) {
    block.classList.add(&quot;confluenceTd&quot;);
});
//]]&gt;
 &lt;/script&gt;
&lt;/div&gt;
&lt;div class=&quot;confluence-information-macro has-no-icon confluence-information-macro-information conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;info&quot;&gt;
 &lt;div class=&quot;confluence-information-macro-body&quot;&gt;
  &lt;p&gt;
   참고 URL
  &lt;/p&gt;
  &lt;p&gt;
   Container Orchestration Image :
   &lt;a class=&quot;external-link&quot; href=&quot;https://www.awsforbusiness.com/what-is-container-orchestration/&quot; rel=&quot;nofollow&quot;&gt;
    https://www.awsforbusiness.com/what-is-container-orchestration/
   &lt;/a&gt;
  &lt;/p&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;</description>
        <pubDate>Sat, 06 Jun 2020 00:00:00 +0900</pubDate>
        <link>https://tech.osci.kr/2020/06/06/97465347/</link>
        <guid isPermaLink="true">https://tech.osci.kr/2020/06/06/97465347/</guid>
        
        <category>docker</category>
        
        <category>kubernetes</category>
        
        <category>k8s</category>
        
        <category>kubernetes기초</category>
        
        <category>container</category>
        
        
      </item>
    
      <item>
        <title>아틀라시안 클라우드 마이그레이션에 대한 10가지 오해와 진실</title>
        <description>&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97456877/0.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 안녕하세요, 오픈소스컨설팅 한진규상무입니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 지라와 컨플루언스 같은 아틀라시안 제품을 사용할 때 아직은 직접 서버에 설치형으로 사용하시는 경우가 많은데요, 작년부터는 클라우드 제품을 활용하시는 분들이 늘어가는 것 같습니다.
&lt;/p&gt;
&lt;p&gt;
 최근 아틀라시안을 구매하는 신규 고객의 90%이상이 클라우드 제품을 사용하는 걸 보면, 앞으로는 클라우드 제품이 더 많은 비중을 차지 하지 않을까 하는 생각이 드네요.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(255,0,0);&quot;&gt;
  아, 혹시 모르시는 분들을 위해 설명드리면, 아틀라시안의 대부분의 제품은 자사 서버에 설치 할 수 있는 설치형 제품(서버, 데이터센터)과 클라우드에 접속해서 사용할수 있는 클라우드형(SaaS) 제품 두가지로 공급이 되고 있습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 자, 그럼 본론으로 들어가서
&lt;/p&gt;
&lt;p&gt;
 오늘 이야기할 내용은, 아틀라시안 클라우드로 이전하는데 있어서 사람들이 흔히 알고 있는 오해와 그에 대한 진실에 대해 이야기 해보려고 합니다.
&lt;/p&gt;
&lt;p&gt;
 이 내용은 아틀라시안 블로그에 게재된 내용인데, 편안하게 읽으시라고
 &lt;s&gt;
  오역과
 &lt;/s&gt;
 의역을 담아 한글로 전달하는데 목적을 두고 적는 것이니,
 &lt;s&gt;
  오역과
 &lt;/s&gt;
 의역이 불편하신 경우 상큼하게 영어 원본을 읽으시길 권장 드립니다 ㅎㅎ
&lt;/p&gt;
&lt;p&gt;
 그 마음 충분히 이해하거든요. 워낙 발번역이라.....흠흠..
&lt;/p&gt;
&lt;p&gt;
 &lt;em&gt;
  &lt;strong&gt;
   원본 링크 :
  &lt;/strong&gt;
  &lt;a class=&quot;external-link&quot; href=&quot;https://www.atlassian.com/blog/platform/myths-about-moving-to-atlassian-cloud&quot; rel=&quot;nofollow&quot;&gt;
   https://www.atlassian.com/blog/platform/myths-about-moving-to-atlassian-cloud
  &lt;/a&gt;
 &lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 일단 그럼 어떤 오해가 있는지 한번 알아볼까요?
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 오해1. 클라우드와 서버 제품은 동일하다.
&lt;/p&gt;
&lt;p&gt;
 오해2. 온프레미스(On-premise)가 클라우드보다 더 안전하게 데이터를 보관한다.
&lt;/p&gt;
&lt;p&gt;
 오해3. 온프레미스(On-premise) 관리 비용이 클라우드보다 더 싸다.
&lt;/p&gt;
&lt;p&gt;
 오해4. 대기업은 클라우드를 사용하지 않는다.
&lt;/p&gt;
&lt;p&gt;
 오해5. 운영서버 마이그레이션이 핵심이다.
&lt;/p&gt;
&lt;p&gt;
 오해6. 클라우드 마이그레션 전에 '정리'작업은 필요없다.
&lt;/p&gt;
&lt;p&gt;
 오해7. 클라우드에서는 애드온을 사용할 수 없다.
&lt;/p&gt;
&lt;p&gt;
 오해8. 애드온은 클라우드로 이관되지 않는다.
&lt;/p&gt;
&lt;p&gt;
 오해9. 클라우드 마이그레이션은 우리 조직의 니즈에 부합 할 만큼 유연하지 못하다.
&lt;/p&gt;
&lt;p&gt;
 오해10. 클라우드 마이그레이션은 우리 조직에서 수행하기에 너무 번거로운 일이다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 어떠세요? 맞다~ 맞다~ 하고 계신가요??
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 그렇다면 진실은 무엇일까요??
&lt;/p&gt;
&lt;h2 id=&quot;id-아틀라시안클라우드마이그레이션에대한10가지오해와진실-오해1.클라우드제품과서버제품은똑같은거아녀?지라가그놈이그놈이지....&quot;&gt;
 오해1. 클라우드제품과 서버제품은 똑같은거 아녀? 지라가 그놈이 그놈이지....
&lt;/h2&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(255,0,0);&quot;&gt;
  아닙니다. 아틀라시안 클라우드 제품들이 서버 제품과 동일한 이점을 제공하긴 하지만 서버제품과는 기능과 고객경험에 있어서 약간의 차이가 있습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 즉, Jira Cloud 및 Confluence Cloud 고유의 차이점 뿐만 아니라 플랫폼 차이에서 오는 특징들이 있거든요.
&lt;/p&gt;
&lt;p&gt;
 일단, 클라우드 제품들은 서버제품과 메뉴바 등도 다르고, 애드온이나, 사용자관리 등 다양한 차이가 있습니다.
&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;
  Jira Cloud는 새로운 이슈보기 및 '차세대 프로젝트'를 제공하고 Confluence Cloud에는 서버제품에는 없는 새로운 페이지 편집기가 있습니다. 또한 iOS 및 Android 용 무료 모바일 앱을 사용하여 어디서나 이슈와 페이지에 쉽게 액세스하고 업데이트 할 수 있습니다. 특히, 차세대 프로젝트는 지라를 마치 트렐로처럼 쓸수 있게 해주는데요 즉, 복잡한 설정 없이 클릭만으로 워크플로우를 생성/편집/삭제 할 수 있어서 엄청 편리합니다. 서버제품에는 제공할 생각이 없는 듯 해서 좀 아쉽네요.
 &lt;/li&gt;
 &lt;li&gt;
  클라우드에서는 제품 관리 및 사용자 계정이 중앙 집중화되어 관리 됩니다. 저희가 서버 제품을 쓸때는 주로 크라우드(Crowd)라는 제품을 통해서 계정을 관리하는데요, 클라우드에서는 Atlassian Access라는 제품을 통해 비슷한 역할을 합니다. 하지만 좀 더 강력하죠. Atlassian Access는 Atlassian의 클라우드 제품 전체에 추가적인 엔터프라이즈급 보안 및 강화 된 관리 도구를 제공합니다. 클라우드 별 비용 플랜 및 청구 / 라이센스모델을 관리 할수 있습니다.
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
 이러한 기능을 익히는 가장 좋은 방법은 사용해 보는 거겠죠? 현재 서버 및 데이터센터 고객이라면, 해당 라이센스 기간동안
 &lt;span style=&quot;color: rgb(255,0,0);&quot;&gt;
  클라우드 평가판을 무료로 제공
 &lt;/span&gt;
 해 줍니다. (자세한 사항은 파트너사에 문의해 주세요)
&lt;/p&gt;
&lt;p&gt;
 그리고 저희 오픈소스컨설팅과 같은 파트너사를 통해서도 연단위/월단 빌링이 가능하기 때문에 담당자는 관리에 신경쓰지 않고 편하게 사용하실 수 있다는점. 다시한번 강조드립니다. ㅎㅎ
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;id-아틀라시안클라우드마이그레이션에대한10가지오해와진실-오해2.온프레미스(On-premise)가당연히클라우드보다더안전하게데이터를보관하겠지.중요한데이터는무조건온프레미스야!!마이프레셔~스~&quot;&gt;
 오해2. 온프레미스(On-premise)가 당연히 클라우드보다 더 안전하게 데이터를 보관하겠지. 중요한 데이터는 무조건 온프레미스야!! 마이 프레셔~스~
&lt;/h2&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(255,0,0);&quot;&gt;
  아닙니다. Atlassian 클라우드 플랫폼의 핵심은 보안, 안정성, 개인 정보 및 규정 준수입니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 여러분의 회사가 Atlassian 클라우드로 전환하면, 그 순간부터 아틀라시안이 여러분 회사의 보안팀이 됩니다. 클라우드로 전환했을뿐인데, 보안팀이 딸려왔네? 요런느낌적인 느낌
&lt;/p&gt;
&lt;p&gt;
 Atlassian의 클라우드 제품은 전 세계적으로 업계에서 승인 된 규정 준수 및 데이터 개인 정보 보호 표준을 능가하며 전송 및 저장시 암호화를 통해 데이터를 보호하거든요.
&lt;/p&gt;
&lt;p&gt;
 Atlassian Access는 관리자에게 클라우드 제품을 사용하는 모든 사람을 파악하고 관리 할 수 있는 중앙 위치를 제공합니다.
&lt;/p&gt;
&lt;p&gt;
 그렇게 때문에 많은 기업이 마이그레이션의 첫 단계로 Atlassian Access에 가입합니다. 이를 통해 기존 클라우드 사용량에 대한 가시성이 향상되고 보안 기준이 설정됩니다.
&lt;/p&gt;
&lt;p&gt;
 Atlassian이 사용자를 보호하는 방법에 대해 자세히 알아 보려면
 &lt;a class=&quot;external-link&quot; href=&quot;https://www.atlassian.com/trust&quot; rel=&quot;nofollow&quot;&gt;
  Atlassian 보안 센터
 &lt;/a&gt;
 를 방문해보시길 권장합니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;id-아틀라시안클라우드마이그레이션에대한10가지오해와진실-오해3.온프레미스(On-premise)관리비용이클라우드보다훨씬쌀껄?클라우드로가면비싸다던데...&quot;&gt;
 오해3. 온프레미스(On-premise) 관리 비용이 클라우드보다 훨씬 쌀껄? 클라우드로가면 비싸다던데...
&lt;/h2&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(255,0,0);&quot;&gt;
  아닙니다. TCO (Total cost of ownership)로 보면 클라우드 제품이 온프레미스보다 저렴합니다. 온프레미스를 관리하는데 들어가는 숨은 비용이 많거든요.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97456877/1.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 클라우드로의 원활한 전환을 위해서 아틀라시안이 제공하는 비용절감 방안을 활용하는 것도 좋은 방법입니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;https://www.atlassian.com/cloud-migration/explore-cloud&quot; rel=&quot;nofollow&quot;&gt;
  무료 확장 클라우드 평가판 라이센스
 &lt;/a&gt;
 , 미사용 서버 메인터넌스 할인,
 &lt;a class=&quot;external-link&quot; href=&quot;https://www.atlassian.com/licensing/cloud/cloudmigrationfaq&quot; rel=&quot;nofollow&quot;&gt;
  기업 고객에 대한 로열티 요금정책
 &lt;/a&gt;
 등을 제공하고 있으며, 특히 학교나 비영리단체에는 할인된 가격으로 제품을 공급하고 있으니 참고하세요!
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;id-아틀라시안클라우드마이그레이션에대한10가지오해와진실-오해4.대기업은클라우드를사용하지않는다?&quot;&gt;
 오해4. 대기업은 클라우드를 사용하지 않는다?
&lt;/h2&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(255,0,0);&quot;&gt;
  아닙니다. 많은 수의 대기업이 클라우드로 옮겨가고 있습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 포춘 500대 기업 중 80% 이상(ARM, Oracle 등)이 아틀라시안 클라우드 라이센스를 사용 중이며, 신규 고객의 90%가 클라우드 제품을 선택하고 있습니다.
&lt;/p&gt;
&lt;p&gt;
 아틀라시안의 Maren Hotvedt에 따르면,
&lt;/p&gt;
&lt;p&gt;
 그 어느때보다 많은 수의 Atlassian 서버 및 데이터센터 고객이 클라우드로 마이그레이션하고 있으며 새로운 엔터프라이즈 고객도 클라우드를 선택하고 있다고 합니다.
&lt;/p&gt;
&lt;p&gt;
 소규모 고객만이 아니라, Redfin, Nestle, Lululemon, Pfizer, Unilever 등의 엔터프라이즈 회사도 많다고 하네요.
&lt;/p&gt;
&lt;p&gt;
 엔터프라이즈 마이그레이션에 대한 자세한 내용은 1,000유저 규모의 북미에 위치한 부동산 전문 회사
 &lt;a class=&quot;external-link&quot; href=&quot;https://www.atlassian.com/customers/redfin&quot; rel=&quot;nofollow&quot;&gt;
  Redfin이 최근 Atlassian 클라우드로 마이그레이션
 &lt;/a&gt;
 하고 6 만 달러 이상을 절약하여 경쟁력을 유지하고 미션에 집중할 수 있었던 사례를 확인해 보시기 바랍니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;id-아틀라시안클라우드마이그레이션에대한10가지오해와진실-오해5.운영서버마이그레이션이핵심이다?&quot;&gt;
 오해5. 운영서버 마이그레이션이 핵심이다?
&lt;/h2&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(255,0,0);&quot;&gt;
  아닙니다. 오히려 계획 및 준비 과정이 마이그레이션에서 가장 크고 중요한 부분이며, 이러한 과정이 얼마나 잘 준비되느냐가 마이그레이션 성공에 가장 큰 영향을 미칩니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 특히, 여러 인스턴스를 통합하거나 많은 수의 앱이 설치된 경우 클라우드로 마이그레이션하는 데 6개월 이상이 걸릴 수 있어요.
&lt;/p&gt;
&lt;p&gt;
 이때 운영서버 이전은 하나의 과정일 뿐이며, 오히려 마이그레이션과 관련된 대부분의 작업은 운영서버  마이그레이션전과 마이그레이션 후에 유저들이 새로운 시스템에 적응하면서 이루어집니다.
&lt;/p&gt;
&lt;p&gt;
 그 과정을 살펴보면 다음과 같습니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
  &lt;img src=&quot;/assets/images/97456877/2.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;id-아틀라시안클라우드마이그레이션에대한10가지오해와진실-오해6.클라우드마이그레션전에'정리'작업은필요없다?&quot;&gt;
 오해6. 클라우드 마이그레션 전에 '정리'작업은 필요없다?
&lt;/h2&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(255,0,0);&quot;&gt;
  아닙니다. 클라우드로 이전하기 전에 이주 전에 소위 말하는 &quot;봄맞이 대청소&quot;와 같은 시간을 갖는다면 훨씬 좋은 효과를 가질 수 있습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 많은 조직에서 마이그레이션 전 정리작업이 필수가 아니라 &quot;하면 좋은&quot;것 정도로 간주하는데요,  Atlassian 클라우드 마이그레이션 전에 자체 관리 형 인스턴스를 구성하는 것이 중요합니다. 여기에는 사용되지 않은 공간(Space) 및 프로젝트 아카이빙, 사용자 계정 정리, Add-on Test, 커스터마이징 검토 및 최소화, 중복 제거 및 사용되지 않은 스키마, 필드 및 이슈 유형 삭제가 포함됩니다.
&lt;/p&gt;
&lt;p&gt;
 이러한 봄맞이 대청소를 실시하면 두 가지 이점이 있습니다. 첫째, 마이그레이션을 더 빠르고 원활하게 하며, 둘째, 클라우드 마이그레이션이 완료되었을 때 시스템의 데이터 및 볼륨 감소 덕분에 성능도 향상되는 경우가 많습니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;id-아틀라시안클라우드마이그레이션에대한10가지오해와진실-오해7.클라우드에서는앱(애드온)을사용할수없다.&quot;&gt;
 오해7. 클라우드에서는 앱(애드온)을 사용할 수 없다.
&lt;/h2&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(255,0,0);&quot;&gt;
  아닙니다. 앱(아틀라시안에서는 애드온을 App이라고 표현) 개발자들은 더 좋고 더 많은 클라우드용 앱을 빠르게 만들어내고 있습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 Atlassian Marketplace는 클라우드 제품의 사용성 확장을 지원하는 1,000 개 이상의 앱을 클라우드 고객에게 제공합니다.
&lt;/p&gt;
&lt;p&gt;
 가장 인기있는 서버용 앱인 Insight Asset Management(자산관리), Jira Workflow Toolbox, JSU Automation for Jira, Structure(간트챠트 및 시각화 지원) 및 ConfiForms들은 이미 클라우드 버전을 공급하고 있습니다.
&lt;/p&gt;
&lt;p&gt;
 이 뿐이 아니라 매일 새로운 앱이 나옵니다. Atlassian은 2019 년에만 250 개의 새로운 클라우드 앱을 추가했습니다. 특히 내가 사랑하는 서버용 앱이 클라우드에는 아직 없을 경우 공급 업체에 문의하여 개발중인 제품을 확인하는 것이 좋습니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;id-아틀라시안클라우드마이그레이션에대한10가지오해와진실-오해8.앱(애드온)은클라우드로이관되지않는다.&quot;&gt;
 오해8. 앱(애드온)은 클라우드로 이관되지 않는다.
&lt;/h2&gt;
&lt;p&gt;
 사실, 앱 마이그레이션은 Atlassian 및 앱 공급 업체의 주요 관심사입니다.
&lt;/p&gt;
&lt;p&gt;
 고객의 60 % 이상이 Atlassian Marketplace에서 앱을 사용하므로 마이그레이션 팀은 앱 평가 및 마이그레이션을 단순화하기 위해 노력하고 있습니다.
&lt;/p&gt;
&lt;p&gt;
 앱 평가 도구를 사용하면 서버의 앱 사용 공간과 사용량을보다 쉽게 ​​이해할 수 있습니다. 이 정보는 클라우드에서 필요할 앱에 대한 마이그레이션 계획을 작성하는 데 사용될 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
 Atlassian의 Migration Assistant 도구는 팀이 앱을 얼마나 자주 사용 하는지를 표시합니다.
&lt;/p&gt;
&lt;p&gt;
 클라우드 버전을 사용할 수 있으며 마이그레이션 경로가 있는지 여부 이 기능은 현재
 &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1219672/confluence-cloud-migration-assistant?hosting=server&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
  Confluence Cloud Migration Assistant
 &lt;/a&gt;
 및
 &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1222010/jira-cloud-migration-assistant?hosting=server&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
  Jira Cloud Migration Assistant
 &lt;/a&gt;
 에서 사용할 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
 그러나 평가는 과정의 절반에 불과합니다.
&lt;/p&gt;
&lt;p&gt;
 현재 앱 데이터는 핵심 제품 데이터와 클라우드로 마이그레이션되지 않습니다. 앱 데이터 마이그레이션은 공급 업체와 직접 작업해야 할 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
 이는 마이그레이션 계획 기간과 프로덕션 마이그레이션을 연장하고 복잡하게 만들 수 있습니다.
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;color: rgb(255,0,0);&quot;&gt;
  이러한 어려움을 완화하기 위해 Atlassian은 오버 헤드를 최소화하고 안정성을 극대화하는 앱 마이그레이션 도구를 개발하고 있습니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;h2 id=&quot;id-아틀라시안클라우드마이그레이션에대한10가지오해와진실-오해9.클라우드마이그레이션은우리조직의니즈에부합할만큼유연하지못하다.&quot;&gt;
 오해9. 클라우드 마이그레이션은 우리 조직의 니즈에 부합 할 만큼 유연하지 못하다.
&lt;/h2&gt;
&lt;p&gt;
 &lt;span style=&quot;letter-spacing: 0.0px;color: rgb(255,0,0);&quot;&gt;
  아닙니다.
 &lt;/span&gt;
 &lt;span style=&quot;letter-spacing: 0.0px;&quot;&gt;
  Atlassian은 조직이 원하는 속도로 클라우드로 이동하거나 단계별로 마이그레이션하거나 하이브리드 방식을 사용할 수 있는
  &lt;span style=&quot;color: rgb(255,0,0);&quot;&gt;
   유연한 마이그레이션 도구를 공급하고 있습니다.
  &lt;/span&gt;
  &lt;br/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;letter-spacing: 0.0px;&quot;&gt;
  처음에는 이러한 도구가 없어서 진짜 어려웠지만, 컨플루언스같은 경우는 거의 문제 없이 이관이 가능해졌고, 지라도 점점 마이그레이션 도구가 업데이트 되면서 상당부분 스트레스 받지 않고 마이그레이션이 가능하게 되었어요.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;letter-spacing: 0.0px;&quot;&gt;
  아틀라시안에서 제공중인 무료 마이그레이션 도구 :
  &lt;br/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;letter-spacing: 0.0px;&quot;&gt;
  ·
  &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1219672/confluence-cloud-migration-assistant?hosting=server&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
   Confluence Migration Assistant
  &lt;/a&gt;
  - 이 무료 서버 앱은 2018 년에 출시되었습니다. Confluence Server 또는 Data Center에서 클라우드로 데이터 및 사용자를 쉽게 마이그레이션 할 수 있습니다. 이 도구를 사용하여 관리자는 마이그레이션 대상, 방법 및시기를 선택할 수 있습니다.
  &lt;br/&gt;
  ·
  &lt;a class=&quot;external-link&quot; href=&quot;https://marketplace.atlassian.com/apps/1222010/jira-cloud-migration-assistant?hosting=server&amp;amp;tab=overview&quot; rel=&quot;nofollow&quot;&gt;
   Jira Cloud Migration Assistant
  &lt;/a&gt;
  - 조직은 사용자 및 그룹과 함께 프로젝트별로 Jira 인스턴스를 마이그레이션 할 수 있습니다. Migration Assistant는 조직이 클라우드 마이그레이션에보다 전략적으로 접근 할 수 있도록 도와줍니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;letter-spacing: 0.0px;&quot;&gt;
  &lt;span class=&quot;confluence-embedded-file-wrapper confluence-embedded-manual-size&quot;&gt;
   &lt;img src=&quot;/assets/images/97456877/3.png&quot;/&gt;
  &lt;/span&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;h2 id=&quot;id-아틀라시안클라우드마이그레이션에대한10가지오해와진실-오해10.클라우드마이그레이션은우리조직에서수행하기에너무번거로운일이다.&quot;&gt;
 &lt;span style=&quot;letter-spacing: 0.0px;&quot;&gt;
  오해10. 클라우드 마이그레이션은 우리 조직에서 수행하기에 너무 번거로운 일이다.
 &lt;/span&gt;
&lt;/h2&gt;
&lt;p&gt;
 &lt;span style=&quot;letter-spacing: 0.0px;&quot;&gt;
  &lt;a class=&quot;external-link&quot; href=&quot;http://www.osci.kr&quot; rel=&quot;nofollow&quot;&gt;
   오픈소스컨설팅
  &lt;/a&gt;
  과 같은 아틀라시안 파트너사는 이러한 문제를 해결하고 고객이 무리없이 클라우드로 이전할 수 있도록 기획 단계부터 컨설팅을 지원합니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;letter-spacing: 0.0px;&quot;&gt;
  초기 단계에서 부터 함께 이야기를 나누다면, 더 완벽한 클라우드로의 이전이 가능해 집니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;span style=&quot;letter-spacing: 0.0px;&quot;&gt;
  이렇게 10가지 오해와 진실에 대해서 알아봤는데요, 클라우드제품도 편리하게 무료 트라이얼이 가능하니까 고민만 하지 마시고 한번 사용해보시길 권해 드립니다.
 &lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;strong&gt;
  &lt;a class=&quot;external-link&quot; href=&quot;https://www.atlassian.com/ko/software/free&quot; rel=&quot;nofollow&quot;&gt;
   https://www.atlassian.com/ko/software/free
  &lt;/a&gt;
 &lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;strong&gt;
  클라우드 사용 및 이전과 관련한 더 궁금한 사항은 오픈소스컨설팅으로 문의 주세요!
 &lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;a class=&quot;external-link&quot; href=&quot;mailto:atlassian@osci.kr&quot; rel=&quot;nofollow&quot;&gt;
  atlassian@osci.kr
 &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;</description>
        <pubDate>Fri, 08 May 2020 00:00:00 +0900</pubDate>
        <link>https://tech.osci.kr/2020/05/08/97456877/</link>
        <guid isPermaLink="true">https://tech.osci.kr/2020/05/08/97456877/</guid>
        
        <category>아틀라시안</category>
        
        <category>atlassian</category>
        
        <category>cloud</category>
        
        
      </item>
    
      <item>
        <title>[Container 시리즈] 04. 실행중인 App 서비스를 컨테이너화 해보자!</title>
        <description>&lt;p&gt;
 &lt;br/&gt;
&lt;/p&gt;
&lt;div class=&quot;confluence-information-macro confluence-information-macro-information conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;info&quot;&gt;
 &lt;span class=&quot;aui-icon aui-icon-small aui-iconfont-info confluence-information-macro-icon&quot;&gt;
 &lt;/span&gt;
 &lt;div class=&quot;confluence-information-macro-body&quot;&gt;
  &lt;p&gt;
   Sample application으로 dockerized 하는 과정에 대해 기술
  &lt;/p&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;markdown&quot;&gt;
 &lt;p&gt;
  안녕하세요! 굉장히 오랜만에 블로그로 다시 찾아온 것 같습니다.
 &lt;/p&gt;
 &lt;p&gt;
  지난시간에 Docker의 기본적인 개념과 어떻게 동작했는지를 알아봤는데요,
  &lt;br/&gt;
  이번에는
  &lt;u&gt;
   실질적으로 사용하고있는 Application을 어떻게 Containerized 할지에 관련된 주제
  &lt;/u&gt;
  를 가지고 돌아왔습니다.
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;br/&gt;
 &lt;p&gt;
  &lt;strong&gt;
   순서는 다음과 같습니다.
  &lt;/strong&gt;
 &lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;1. Source code clone
2. npm build
3. docker file 생성
4. docker file을 통한 docker image 생성
5. docker run을 이용한 컨테이너 실행
&lt;/code&gt;&lt;/pre&gt;
 &lt;h2&gt;
  &lt;a href=&quot;#1-source-code-clone&quot; id=&quot;1-source-code-clone&quot;&gt;
   1. Source Code Clone.
  &lt;/a&gt;
 &lt;/h2&gt;
 &lt;p&gt;
  해당 Source 들은 GitLab에 올려져 있으며.
  &lt;br/&gt;
  해당 애플리케이션 같은경우 Hostname과 현재 시간을 출력해주는 simple application입니다.
  &lt;br/&gt;
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  자 그럼 Giblab에 올려진 코드들을 가지고 와봅니다.
 &lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 stl]# git clone http://192.168.197.132/root/stlapp.git
Cloning into 'stlapp'...
Username for 'http://192.168.197.132': kbseo
Password for 'http://kbseo@192.168.197.132': 
remote: Enumerating objects: 131, done.
remote: Counting objects: 100% (131/131), done.
remote: Compressing objects: 100% (69/69), done.
remote: Total 217 (delta 70), reused 112 (delta 56), pack-reused 86
Receiving objects: 100% (217/217), 564.33 KiB | 0 bytes/s, done.
Resolving deltas: 100% (84/84), done.
&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;
  소스들을 서버로 잘 데리고 왔습니다.
  &lt;br/&gt;
  참고로 말씀드리자면 해당 Application은 React와 Spring Boot로 만들어졌고 maven을 통해 build하도록 되어져있습니다.
  &lt;br/&gt;
  추가로 Maven내에 npm build가 가능하도록 한 상태여서 maven 명령을 통해서 빌드가 가능합니다.
 &lt;/p&gt;
 &lt;h2&gt;
  &lt;a href=&quot;#2-npm-build&quot; id=&quot;2-npm-build&quot;&gt;
   2. npm build
  &lt;/a&gt;
 &lt;/h2&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 stlapp]# ./mvnw package
[INFO] Scanning for projects...
[INFO] 
[INFO] -------------------------&amp;lt; no.kantega:stlapp &amp;gt;--------------------------
[INFO] Building spring-and-react 0.1
[INFO] --------------------------------[ war ]---------------------------------
[INFO] 
[INFO] --- frontend-maven-plugin:1.6:install-node-and-npm (install node and npm) @ stlapp ---
[INFO] Installing node version v6.17.1
[INFO] Unpacking /root/.m2/repository/com/github/eirslett/node/6.17.1/node-6.17.1-linux-x64.tar.gz into /root/stl/stlapp/target/node/tmp
[INFO] Copying node binary from /root/stl/stlapp/target/node/tmp/node-v6.17.1-linux-x64/bin/node to /root/stl/stlapp/target/node/node
[INFO] Installed node locally.
[INFO] Installing npm version 3.10.10
[INFO] Unpacking /root/.m2/repository/com/github/eirslett/npm/3.10.10/npm-3.10.10.tar.gz into /root/stl/stlapp/target/node/node_modules
.....
[INFO] --- spring-boot-maven-plugin:2.0.1.RELEASE:repackage (default) @ stlapp ---
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 02:22 min
[INFO] Finished at: 2020-04-24T18:30:05+09:00
[INFO] ------------------------------------------------------------------------
[root@kbseo-test1 stlapp]# 

&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;
  빌드를 완료해주었습니다!
 &lt;/p&gt;
 &lt;h2&gt;
  &lt;a href=&quot;#3-docker-file-생성&quot; id=&quot;3-docker-file-생성&quot;&gt;
   3. docker file 생성
  &lt;/a&gt;
 &lt;/h2&gt;
 &lt;p&gt;
  이렇게 가지고 온 source를 컨테이너화 하기위하여 docker file을 먼저 생성해 줘야겠죠?
 &lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 stlapp]# vim Dockerfile
FROM tomcat:8.5.50-jdk8-openjdk

MAINTAINER kbseo@osci.kr

ENV TZ=Asia/Seoul
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime

RUN rm -rf /usr/local/tomcat/webapps/ROOT
COPY target/stlapp-0.1.war /usr/local/tomcat/webapps/ROOT.war

&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;
  Simple application은 hostname과 time zone을 출력해주는 간단한 동작을 하는 애플리케이션 이기에
  &lt;br/&gt;
  docker file안에 timezone을 설정해주고 tomcat상에서 동작될 war파일을 복사해줍니다.
 &lt;/p&gt;
 &lt;h2&gt;
  &lt;a href=&quot;#4-docker-file을-통한-docker-image-생성&quot; id=&quot;4-docker-file을-통한-docker-image-생성&quot;&gt;
   4. docker file을 통한 docker image 생성
  &lt;/a&gt;
 &lt;/h2&gt;
 &lt;p&gt;
  이전 글에서 설정해드린것과 같이 docker는 image로 배포를 하기 때문에
  &lt;br/&gt;
  만들어두었던 docker file을 image화 해 줍니다.
 &lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;# 현재 가지고있는 이미지가 있나 확인을 해줍니다
[root@kbseo-test1 stlapp]# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
[root@kbseo-test1 stlapp]# 
&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;
  이미지가 한개도 없는것을 확인하실수 있습니다.
 &lt;/p&gt;
 &lt;p&gt;
  이미지 형태로 빌드를 해줍니다!
 &lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 stlapp]# docker build -t stlapp:1.0 .
Sending build context to Docker daemon 252.2 MB
Step 1/6 : FROM tomcat:8.5.50-jdk8-openjdk
Trying to pull repository docker.io/library/tomcat ... 
8.5.50-jdk8-openjdk: Pulling from docker.io/library/tomcat
dc65f448a2e2: Pull complete 
346ffb2b67d7: Pull complete 
dea4ecac934f: Pull complete 
8ac92ddf84b3: Pull complete 
d8ef64070a18: Pull complete 
6577248b0d6e: Pull complete 
576c0a3a6af9: Pull complete 
6e0159bd18db: Pull complete 
944191e51caa: Pull complete 
9ee6a5ca751e: Pull complete 
Digest: sha256:d53c2079ea67db92f6d7c39e9450f641610336016fdddef5392c5afd41518e5e
Status: Downloaded newer image for docker.io/tomcat:8.5.50-jdk8-openjdk
 ---&amp;gt; b56d8850aed5
Step 2/6 : MAINTAINER jacobbaek@osci.kr
 ---&amp;gt; Running in 148cd746d772
 ---&amp;gt; 3b0a94a52842
Removing intermediate container 148cd746d772
Step 3/6 : ENV TZ Asia/Seoul
 ---&amp;gt; Running in 7398ad9609a2
 ---&amp;gt; 706e8669d2d6
Removing intermediate container 7398ad9609a2
Step 4/6 : RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime
 ---&amp;gt; Running in 1bcb6e658984

 ---&amp;gt; 453ac37a79dd
Removing intermediate container 1bcb6e658984
Step 5/6 : RUN rm -rf /usr/local/tomcat/webapps/ROOT
 ---&amp;gt; Running in f3c3bf4eb17b

 ---&amp;gt; 32f3bddc0334
Removing intermediate container f3c3bf4eb17b
Step 6/6 : COPY target/stlapp-0.1.war /usr/local/tomcat/webapps/ROOT.war
 ---&amp;gt; 3f24f0f7deaa
Removing intermediate container 134e07409a14
Successfully built 3f24f0f7deaa
&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;
  docker build 같은경우 지난시간의 글에서 좀 더 자세히 확인 가능하십니다 ㅎ.ㅎ
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  명령어에 대해서 간단히 설명을 다시 드리자면,
  &lt;br/&gt;
  &lt;strong&gt;
   $ docker build &amp;lt;옵션&amp;gt; &amp;lt;dockerfile 경로&amp;gt;
  &lt;/strong&gt;
  &lt;br/&gt;
  저는 태그를 지정해주기 위하여 -t옵션을 사용해주었습니다.
  &lt;br/&gt;
  태그는 &amp;lt;저장소이름&amp;gt;/&amp;lt;이미지이름&amp;gt;:&amp;lt;태그&amp;gt; 형식입니다.
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  다시 이미지를 확인해보면 좀전에 build한 이미지가 올라온 것을 확인 하실 수 있습니다!
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 stlapp]# docker images
REPOSITORY          TAG                   IMAGE ID            CREATED             SIZE
stlapp              1.0                   3f24f0f7deaa        3 minutes ago       545 MB
docker.io/tomcat    8.5.50-jdk8-openjdk   b56d8850aed5        2 months ago        529 MB
&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;
  어라? 왜 두개의 이미지가 올라가져있을까요....?
분명히 도커 빌드는 한번만 실행했는데..
도커파일을 다시 살펴볼까요?
 &lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;FROM tomcat:8.5.50-jdk8-openjdk
&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;
  첫줄에서 답이 나왔습니다!
  &lt;br/&gt;
  FROM 을 통해 tomcat이미지를 먼저 받아서 그 위에 차례대로 레이어를 쌓아가면서 도커파일을 실행하기에
  &lt;br/&gt;
  이미지가 두개가 만들어지게 됩니다.
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;ol start=&quot;5&quot;&gt;
  &lt;li&gt;
   docker run을 이용한 컨테이너 실행
  &lt;/li&gt;
 &lt;/ol&gt;
 &lt;p&gt;
  이제 Image를 만들었으니 실행해봅시다!
 &lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 stlapp]# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
[root@kbseo-test1 stlapp]#
&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;
  아직까지 실행되고있는 컨테이너가 없네요
 &lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 stlapp]# docker run -d -p 8081:8080 --name=stlapp stlapp:1.0
fc16ba3e9f3f03ba22a2ca0b7eb12909a8311b555ef34bcf9b0f591537a76d2a
&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;
  명령어에 대해 간단히 설명드리자면
  &lt;br/&gt;
  &lt;strong&gt;
   $ docker run &amp;lt;옵션&amp;gt; &amp;lt;이미지이름, ID &amp;gt; &amp;lt;명령&amp;gt; &amp;lt;매개변수&amp;gt;
  &lt;/strong&gt;
 &lt;/p&gt;
 &lt;p&gt;
  이렇게 구성되어있습니다.
 &lt;/p&gt;
 &lt;p&gt;
  &lt;code&gt;
   docker run -d -p 8081:8080 --name=stlapp stlapp:1.0
  &lt;/code&gt;
  이 명령어를 보자면
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;ul&gt;
  &lt;li&gt;
   &lt;p&gt;
    -d 데몬모드로 컨테이너를 실행하고,
   &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
   &lt;p&gt;
    -p 옵션을 이용하여 외부포트를 연결해줍니다
    &amp;lt;호스트포트&amp;gt;:&amp;lt;컨테이너포트&amp;gt; -&amp;gt; 8080컨테이너 포트를 8081포트를 이용해 외부로 연결시킵니다.
   &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
   &lt;p&gt;
    --name 컨테이너 이름을 지정해줍니다.
    여기에서는 stlapp이라는 이름을 달아주었습니다.
   &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
   &lt;p&gt;
    실행시킬 컨테이너와 태그정보를 입력해줍니다.
   &lt;/p&gt;
  &lt;/li&gt;
 &lt;/ul&gt;
 &lt;p&gt;
  결과를 한번 봐볼까요?
 &lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 stlapp]# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                    NAMES
fc16ba3e9f3f        stlapp:1.0          &quot;catalina.sh run&quot;   11 minutes ago      Up 11 minutes       0.0.0.0:8081-&amp;gt;8080/tcp   stlapp
[root@kbseo-test1 stlapp]# 

&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;
  실행되고있는 컨테이너를 확인하실 수 있습니다.
 &lt;/p&gt;
 &lt;p&gt;
  브라우저를 통해 확인해볼까요?
 &lt;/p&gt;
 &lt;script&gt;
  //&lt;![CDATA[

AJS.$('[data-macro-name=&quot;markdown&quot;] code').each(function(i, block) {
    hljs.highlightBlock(block);
  });

//]]&gt;
 &lt;/script&gt;
 &lt;style&gt;
  .hljs {display: inline;}
pre &gt; code {display: block !important;}
 &lt;/style&gt;
 &lt;script&gt;
  //&lt;![CDATA[
 AJS.$('[data-macro-name=&quot;markdown&quot;] table thead th').each(function(i, block) {
    block.classList.add(&quot;confluenceTh&quot;);
});

AJS.$('[data-macro-name=&quot;markdown&quot;] table tbody tr td').each(function(i, block) {
    block.classList.add(&quot;confluenceTd&quot;);
});
//]]&gt;
 &lt;/script&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper&quot;&gt;
  &lt;img src=&quot;/assets/images/97455310/0.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;markdown&quot;&gt;
 &lt;p&gt;
  컨테이너 이미지의 ID와 현재 시간이 잘 출력되는것을 보실 수 있습니다.
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  하지만 빨간색이라 눈이 너무나 아픈것같은 느낌적인 느낌입니다
  &lt;br/&gt;
  그래서 검은색으로 바꾸고 재 배포를 해볼까요??
 &lt;/p&gt;
 &lt;p&gt;
  순서는 간단합니다!
 &lt;/p&gt;
 &lt;ol&gt;
  &lt;li&gt;
   실행되고 있는 컨테이너 중지
  &lt;/li&gt;
  &lt;li&gt;
   해당 컨테이너 삭제
  &lt;/li&gt;
  &lt;li&gt;
   소스수정
  &lt;/li&gt;
  &lt;li&gt;
   소스빌드, 컨테이너 빌드
  &lt;/li&gt;
  &lt;li&gt;
   컨테이너 실행
  &lt;/li&gt;
 &lt;/ol&gt;
 &lt;h3&gt;
  &lt;a href=&quot;#1-실행되고-있는-컨테이너-중지&quot; id=&quot;1-실행되고-있는-컨테이너-중지&quot;&gt;
   1. 실행되고 있는 컨테이너 중지
  &lt;/a&gt;
 &lt;/h3&gt;
 &lt;p&gt;
  단칼에 중지시켜 줍니다.
 &lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 src]# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                    NAMES
fc16ba3e9f3f        stlapp:1.0          &quot;catalina.sh run&quot;   29 minutes ago      Up 29 minutes       0.0.0.0:8081-&amp;gt;8080/tcp   stlapp

 
[root@kbseo-test1 src]# docker kill stlapp
stlapp


[root@kbseo-test1 src]# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                       PORTS               NAMES
fc16ba3e9f3f        stlapp:1.0          &quot;catalina.sh run&quot;   29 minutes ago      Exited (137) 3 seconds ago                       stlapp
&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;
  docker kill 명령어를 통해 중지시켜준 후
  &lt;br/&gt;
  docker ps 를 통해 확인해보면 상태가 바뀐것을 보실 수 있습니다.
  &lt;br/&gt;
  브라우저를 통해 접속해봐도 접속이 안되는것을 보실 수 있죠
 &lt;/p&gt;
 &lt;h3&gt;
  &lt;a href=&quot;#2-해당-컨테이너-삭제&quot; id=&quot;2-해당-컨테이너-삭제&quot;&gt;
   2. 해당 컨테이너 삭제
  &lt;/a&gt;
 &lt;/h3&gt;
 &lt;p&gt;
  프로세스를 삭제시켜 줍니다.
 &lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 src]# docker rm stlapp
stlapp

[root@kbseo-test1 src]# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

&lt;/code&gt;&lt;/pre&gt;
 &lt;h3&gt;
  &lt;a href=&quot;#3-소스수정&quot; id=&quot;3-소스수정&quot;&gt;
   3. 소스수정
  &lt;/a&gt;
 &lt;/h3&gt;
 &lt;p&gt;
  css코드를 수정하여 색상을 변경해줍니다.
  &lt;del&gt;
   저는 블랙블랙으로 바꿨습니다.(TMI)
  &lt;/del&gt;
 &lt;/p&gt;
 &lt;h3&gt;
  &lt;a href=&quot;#4-소스빌드&quot; id=&quot;4-소스빌드&quot;&gt;
   4. 소스빌드
  &lt;/a&gt;
 &lt;/h3&gt;
 &lt;p&gt;
  소스를 수정했으니 재빌드를 해줘야겠죠?
 &lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 stlapp]# ./mvnw package
INFO] Scanning for projects...
[INFO] 
[INFO] -------------------------&amp;lt; no.kantega:stlapp &amp;gt;--------------------------
[INFO] Building spring-and-react 0.1
[INFO] --------------------------------[ war ]---------------------------------
[INFO] 
[INFO] --- frontend-maven-plugin:1.6:install-node-and-npm (install node and npm) @ stlapp ---
[INFO] Node v6.17.1 is already installed.
[INFO] NPM 3.10.10 is already installed.
[INFO] 
[INFO] --- frontend-maven-plugin:1.6:npm (npm install) @ stlapp ---
[INFO] Running 'npm install' in /root/stl/stlapp/frontend
...
...
[INFO] --- spring-boot-maven-plugin:2.0.1.RELEASE:repackage (default) @ stlapp ---
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 43.467 s
[INFO] Finished at: 2020-04-27T20:10:43+09:00
[INFO] ------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;
  소스를 빌드했으니 도커를 빌드해봅시다!
 &lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 stlapp]# docker build -t stlapp .
Sending build context to Docker daemon 252.2 MB
Step 1/6 : FROM tomcat:8.5.50-jdk8-openjdk
 ---&amp;gt; b56d8850aed5
Step 2/6 : MAINTAINER jacobbaek@osci.kr
 ---&amp;gt; Using cache
 ---&amp;gt; 3b0a94a52842
Step 3/6 : ENV TZ Asia/Seoul
 ---&amp;gt; Using cache
 ---&amp;gt; 706e8669d2d6
Step 4/6 : RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime
 ---&amp;gt; Using cache
 ---&amp;gt; 453ac37a79dd
Step 5/6 : RUN rm -rf /usr/local/tomcat/webapps/ROOT
 ---&amp;gt; Using cache
 ---&amp;gt; 32f3bddc0334
Step 6/6 : COPY target/stlapp-0.1.war /usr/local/tomcat/webapps/ROOT.war
 ---&amp;gt; Using cache
 ---&amp;gt; 3f24f0f7deaa
Successfully built 3f24f0f7deaa
&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;
  이미지가 만들어졌는지 확인해볼까요?
 &lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 stlapp]# docker images
REPOSITORY          TAG                   IMAGE ID            CREATED             SIZE
stlapp              1.0                   3f24f0f7deaa        3 hours ago         545 MB
stlapp              latest                3f24f0f7deaa        3 hours ago         545 MB
docker.io/tomcat    8.5.50-jdk8-openjdk   b56d8850aed5        2 months ago        529 MB
&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;
  하나의 이미지가 추가로 생성된 것을 보실 수 있습니다!
 &lt;/p&gt;
 &lt;h3&gt;
  &lt;a href=&quot;#5-컨테이너-실행&quot; id=&quot;5-컨테이너-실행&quot;&gt;
   5. 컨테이너 실행
  &lt;/a&gt;
 &lt;/h3&gt;
 &lt;p&gt;
  돌려봅니다
 &lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 stlapp]# docker run -d -p 8081:8080 --name=stlapp stlapp
5140e8332057ed23c4bf491a36d2d63fa0d09f0ffc4378073e145c2626075c30
&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;
  잘 올라가져있는지 확인해볼까요?
 &lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 stlapp]# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                    NAMES
dd58841261fa        stlapp              &quot;catalina.sh run&quot;   55 seconds ago      Up 55 seconds       0.0.0.0:8081-&amp;gt;8080/tcp   stlapp
&lt;/code&gt;&lt;/pre&gt;
 &lt;script&gt;
  //&lt;![CDATA[

AJS.$('[data-macro-name=&quot;markdown&quot;] code').each(function(i, block) {
    hljs.highlightBlock(block);
  });

//]]&gt;
 &lt;/script&gt;
 &lt;style&gt;
  .hljs {display: inline;}
pre &gt; code {display: block !important;}
 &lt;/style&gt;
 &lt;script&gt;
  //&lt;![CDATA[
 AJS.$('[data-macro-name=&quot;markdown&quot;] table thead th').each(function(i, block) {
    block.classList.add(&quot;confluenceTh&quot;);
});

AJS.$('[data-macro-name=&quot;markdown&quot;] table tbody tr td').each(function(i, block) {
    block.classList.add(&quot;confluenceTd&quot;);
});
//]]&gt;
 &lt;/script&gt;
&lt;/div&gt;
&lt;p class=&quot;auto-cursor-target&quot;&gt;
 &lt;span class=&quot;confluence-embedded-file-wrapper&quot;&gt;
  &lt;img src=&quot;/assets/images/97455310/1.png&quot;/&gt;
 &lt;/span&gt;
&lt;/p&gt;
&lt;div class=&quot;conf-macro output-block&quot; data-hasbody=&quot;true&quot; data-macro-name=&quot;markdown&quot;&gt;
 &lt;p&gt;
  이제 깔끔한 BLACK 색상으로 바뀌었습니다.
 &lt;/p&gt;
 &lt;p&gt;
  이렇게 제 local환경에서 테스트한 컨테이너들에게 TAG를 지정하여서 버전관리도 할 수 있습니다.
 &lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 stlapp]# docker tag stlapp:latest 192.168.197.130:5000/stlapp_kb:1.2.0

[root@kbseo-test1 stlapp]# docker images
REPOSITORY                       TAG                   IMAGE ID            CREATED             SIZE
192.168.197.130:5000/stlapp_kb   1.2.0                 3e72ae5de27a        5 minutes ago       545 MB
stlapp                           latest                3e72ae5de27a        5 minutes ago       545 MB
docker.io/tomcat                 8.5.50-jdk8-openjdk   b56d8850aed5        2 months ago        529 MB
[root@kbseo-test1 stlapp]# 
&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;
  테스트를 끝냈으니 registry에 올려줄 차례죠
 &lt;/p&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 stlapp]# docker push 192.168.197.130:5000/stlapp_kb:1.2.0
The push refers to a repository [192.168.197.130:5000/stlapp_kb]
The push refers to a repository [192.168.197.130:5000/stlapp_kb]
Get https://192.168.197.130:5000/v1/_ping: http: server gave HTTP response to HTTPS client
&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;
  어랏? 안돼네요?
  &lt;br/&gt;
  이유는 바로 도커는 https 통신을 하기 때문입니다.
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  고로 저는 http 통신을 하기위해
  &lt;br/&gt;
  docker에게 직접 친절히 사용하고자 하는 ip를 등록해주도록 하겠습니다.
 &lt;/p&gt;
 &lt;h3&gt;
  &lt;a href=&quot;#docker-insecure&quot; id=&quot;docker-insecure&quot;&gt;
   docker insecure
  &lt;/a&gt;
 &lt;/h3&gt;
 &lt;p&gt;
  여러가지의 방법이 있지만
  &lt;br/&gt;
  저는 daemon.json 파일 안에 등록을 해주도록 하겠습니다.
  &lt;br/&gt;
  (가장 간단해서 이방법으로 하였습니다 히힛)
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;ol&gt;
  &lt;li&gt;
   /etc/docker/daemon.json 수정
  &lt;/li&gt;
 &lt;/ol&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 stlapp]# cat /etc/docker/daemon.json 
{
&quot;insecure-registries&quot;:[&quot;192.168.197.130:5000&quot;]
}
&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;
  사용할 registry 주소와 포트를 입력해줍니다.
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;ol start=&quot;2&quot;&gt;
  &lt;li&gt;
   dpcker 데몬 재기동
  &lt;/li&gt;
 &lt;/ol&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 stlapp]# service docker restart
Redirecting to /bin/systemctl restart docker.service
&lt;/code&gt;&lt;/pre&gt;
 &lt;ol start=&quot;3&quot;&gt;
  &lt;li&gt;
   레지스트리에 login
  &lt;/li&gt;
 &lt;/ol&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 stlapp]# docker login http://192.168.197.130:5000
Username: admin
Password: 
Login Succeeded
&lt;/code&gt;&lt;/pre&gt;
 &lt;ol start=&quot;4&quot;&gt;
  &lt;li&gt;
   레지스트리에 push
  &lt;/li&gt;
 &lt;/ol&gt;
 &lt;pre&gt;&lt;code&gt;[root@kbseo-test1 stlapp]# docker push 192.168.197.130:5000/stlapp_kb:1.2.0
The push refers to a repository [192.168.197.130:5000/stlapp_kb]
c20036844421: Pushed 
64bc7cab37ab: Pushed 
caeac141f483: Layer already exists 
5245df7d360d: Layer already exists 
78f5460c83b5: Layer already exists 
c601709dd5d2: Layer already exists 
72ce39f2b7f6: Layer already exists 
33783834b288: Layer already exists 
5c813a85f7f0: Layer already exists 
bdca38f94ff0: Layer already exists 
faac394a1ad3: Layer already exists 
ce8168f12337: Layer already exists 
1.2.0: digest: sha256:93e8b021981faed5cb1e5b22f4c0694f841afc1aa4502fff78d7edf9ffdb97cf size: 2840
[root@kbseo-test1 stlapp]#
&lt;/code&gt;&lt;/pre&gt;
 &lt;p&gt;
  &lt;br/&gt;
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  짜잔! 등록이 되었습니다
 &lt;/p&gt;
 &lt;p&gt;
  이번시간에는 간단한 Application을 컨테이너화 하여 실행하는거 까지 함께 했는데요
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  간단하다고 했지만 실질적으로 여러 작업이 들어갔었습니다
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  그래서 다음시간에는 이를 좀 더 간단히 수행하기위해
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  젠킨스를 이용하여 작업을 해보도록 하겠습니다!
  &lt;br/&gt;
 &lt;/p&gt;
 &lt;p&gt;
  뿅!
 &lt;/p&gt;
 &lt;script&gt;
  //&lt;![CDATA[

AJS.$('[data-macro-name=&quot;markdown&quot;] code').each(function(i, block) {
    hljs.highlightBlock(block);
  });

//]]&gt;
 &lt;/script&gt;
 &lt;style&gt;
  .hljs {display: inline;}
pre &gt; code {display: block !important;}
 &lt;/style&gt;
 &lt;script&gt;
  //&lt;![CDATA[
 AJS.$('[data-macro-name=&quot;markdown&quot;] table thead th').each(function(i, block) {
    block.classList.add(&quot;confluenceTh&quot;);
});

AJS.$('[data-macro-name=&quot;markdown&quot;] table tbody tr td').each(function(i, block) {
    block.classList.add(&quot;confluenceTd&quot;);
});
//]]&gt;
 &lt;/script&gt;
&lt;/div&gt;</description>
        <pubDate>Thu, 30 Apr 2020 00:00:00 +0900</pubDate>
        <link>https://tech.osci.kr/2020/04/30/97455310/</link>
        <guid isPermaLink="true">https://tech.osci.kr/2020/04/30/97455310/</guid>
        
        <category>docker</category>
        
        <category>kubernetes</category>
        
        <category>dockerize</category>
        
        <category>containerize</category>
        
        <category>도커</category>
        
        <category>컨테이너</category>
        
        
      </item>
    
  </channel>
</rss>
